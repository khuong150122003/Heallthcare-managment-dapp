/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "/_error";
exports.ids = ["/_error"];
exports.modules = {

/***/ "./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"hoist\", ({\n    enumerable: true,\n    get: function() {\n        return hoist;\n    }\n}));\nfunction hoist(module, name) {\n    // If the name is available in the module, return it.\n    if (name in module) {\n        return module[name];\n    }\n    // If a property called `then` exists, assume it's a promise and\n    // return a promise that resolves to the name.\n    if (\"then\" in module && typeof module.then === \"function\") {\n        return module.then((mod)=>hoist(mod, name));\n    }\n    // If we're trying to hoise the default export, and the module is a function,\n    // return the module itself.\n    if (typeof module === \"function\" && name === \"default\") {\n        return module;\n    }\n    // Otherwise, return undefined.\n    return undefined;\n}\n\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQWlCO0FBQ2pCLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLHlDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWx0aGNhcmUtYXBwLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1yb3V0ZS1sb2FkZXIvaGVscGVycy5qcz85OWZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSG9pc3RzIGEgbmFtZSBmcm9tIGEgbW9kdWxlIG9yIHByb21pc2VkIG1vZHVsZS5cbiAqXG4gKiBAcGFyYW0gbW9kdWxlIHRoZSBtb2R1bGUgdG8gaG9pc3QgdGhlIG5hbWUgZnJvbVxuICogQHBhcmFtIG5hbWUgdGhlIG5hbWUgdG8gaG9pc3RcbiAqIEByZXR1cm5zIHRoZSB2YWx1ZSBvbiB0aGUgbW9kdWxlIChvciBwcm9taXNlZCBtb2R1bGUpXG4gKi8gXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJob2lzdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaG9pc3Q7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBob2lzdChtb2R1bGUsIG5hbWUpIHtcbiAgICAvLyBJZiB0aGUgbmFtZSBpcyBhdmFpbGFibGUgaW4gdGhlIG1vZHVsZSwgcmV0dXJuIGl0LlxuICAgIGlmIChuYW1lIGluIG1vZHVsZSkge1xuICAgICAgICByZXR1cm4gbW9kdWxlW25hbWVdO1xuICAgIH1cbiAgICAvLyBJZiBhIHByb3BlcnR5IGNhbGxlZCBgdGhlbmAgZXhpc3RzLCBhc3N1bWUgaXQncyBhIHByb21pc2UgYW5kXG4gICAgLy8gcmV0dXJuIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBuYW1lLlxuICAgIGlmIChcInRoZW5cIiBpbiBtb2R1bGUgJiYgdHlwZW9mIG1vZHVsZS50aGVuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIG1vZHVsZS50aGVuKChtb2QpPT5ob2lzdChtb2QsIG5hbWUpKTtcbiAgICB9XG4gICAgLy8gSWYgd2UncmUgdHJ5aW5nIHRvIGhvaXNlIHRoZSBkZWZhdWx0IGV4cG9ydCwgYW5kIHRoZSBtb2R1bGUgaXMgYSBmdW5jdGlvbixcbiAgICAvLyByZXR1cm4gdGhlIG1vZHVsZSBpdHNlbGYuXG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgPT09IFwiZnVuY3Rpb25cIiAmJiBuYW1lID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICByZXR1cm4gbW9kdWxlO1xuICAgIH1cbiAgICAvLyBPdGhlcndpc2UsIHJldHVybiB1bmRlZmluZWQuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=.%2Fnode_modules%5Cnext%5Cdist%5Cpages%5C_error.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=.%2Fnode_modules%5Cnext%5Cdist%5Cpages%5C_error.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages/module */ \"./node_modules/next/dist/server/future/route-modules/pages/module.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-route-loader/helpers */ \"./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"./node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n/* harmony import */ var _node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules\\next\\dist\\pages\\_error.js */ \"./node_modules/next/dist/pages/_error.js\");\n/* harmony import */ var _node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__]);\nprivate_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n\n// Import the app and document modules.\n// @ts-expect-error - replaced by webpack/turbopack loader\n\n// @ts-expect-error - replaced by webpack/turbopack loader\n\n// Import the userland code.\n// @ts-expect-error - replaced by webpack/turbopack loader\n\nconst PagesRouteModule = next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule;\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"default\"));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"getStaticProps\");\nconst getStaticPaths = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"getStaticPaths\");\nconst getServerSideProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"getServerSideProps\");\nconst config = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"config\");\nconst reportWebVitals = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"reportWebVitals\");\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticProps\");\nconst unstable_getStaticPaths = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticPaths\");\nconst unstable_getStaticParams = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticParams\");\nconst unstable_getServerProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerProps\");\nconst unstable_getServerSideProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/_error\",\n        pathname: \"/_error\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: _node_modules_next_dist_pages_error_js__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTJnBhZ2U9JTJGX2Vycm9yJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGbm9kZV9tb2R1bGVzJTVDbmV4dCU1Q2Rpc3QlNUNwYWdlcyU1Q19lcnJvci5qcyZhYnNvbHV0ZUFwcFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCZhYnNvbHV0ZURvY3VtZW50UGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfZG9jdW1lbnQmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQzZFO0FBQ2Q7QUFDbUI7QUFDbEY7QUFDQTtBQUNvRDtBQUNwRDtBQUMwQztBQUMxQztBQUNBO0FBQ3lFO0FBQ3pFLHlCQUF5QixnR0FBdUI7QUFDaEQ7QUFDQSxpRUFBZSxnR0FBSyxDQUFDLG1FQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLHVCQUF1QixnR0FBSyxDQUFDLG1FQUFRO0FBQ3JDLHVCQUF1QixnR0FBSyxDQUFDLG1FQUFRO0FBQ3JDLDJCQUEyQixnR0FBSyxDQUFDLG1FQUFRO0FBQ3pDLGVBQWUsZ0dBQUssQ0FBQyxtRUFBUTtBQUM3Qix3QkFBd0IsZ0dBQUssQ0FBQyxtRUFBUTtBQUM3QztBQUNPLGdDQUFnQyxnR0FBSyxDQUFDLG1FQUFRO0FBQzlDLGdDQUFnQyxnR0FBSyxDQUFDLG1FQUFRO0FBQzlDLGlDQUFpQyxnR0FBSyxDQUFDLG1FQUFRO0FBQy9DLGdDQUFnQyxnR0FBSyxDQUFDLG1FQUFRO0FBQzlDLG9DQUFvQyxnR0FBSyxDQUFDLG1FQUFRO0FBQ3pEO0FBQ087QUFDUDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVc7QUFDWCxnQkFBZ0I7QUFDaEIsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELGlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHRoY2FyZS1hcHAvPzc1MzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWlnbm9yZSB0aGlzIG5lZWQgdG8gYmUgaW1wb3J0ZWQgZnJvbSBuZXh0L2Rpc3QgdG8gYmUgZXh0ZXJuYWxcbmltcG9ydCAqIGFzIG1vZHVsZSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy9tb2R1bGVcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgYXBwIGFuZCBkb2N1bWVudCBtb2R1bGVzLlxuLy8gQHRzLWV4cGVjdC1lcnJvciAtIHJlcGxhY2VkIGJ5IHdlYnBhY2svdHVyYm9wYWNrIGxvYWRlclxuaW1wb3J0IERvY3VtZW50IGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2RvY3VtZW50XCI7XG4vLyBAdHMtZXhwZWN0LWVycm9yIC0gcmVwbGFjZWQgYnkgd2VicGFjay90dXJib3BhY2sgbG9hZGVyXG5pbXBvcnQgQXBwIGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2FwcFwiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuLy8gQHRzLWV4cGVjdC1lcnJvciAtIHJlcGxhY2VkIGJ5IHdlYnBhY2svdHVyYm9wYWNrIGxvYWRlclxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxwYWdlc1xcXFxfZXJyb3IuanNcIjtcbmNvbnN0IFBhZ2VzUm91dGVNb2R1bGUgPSBtb2R1bGUuUGFnZXNSb3V0ZU1vZHVsZTtcbi8vIFJlLWV4cG9ydCB0aGUgY29tcG9uZW50IChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcImdldFN0YXRpY1Byb3BzXCIpO1xuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUGF0aHNcIik7XG5leHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U2VydmVyU2lkZVByb3BzXCIpO1xuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbmV4cG9ydCBjb25zdCByZXBvcnRXZWJWaXRhbHMgPSBob2lzdCh1c2VybGFuZCwgXCJyZXBvcnRXZWJWaXRhbHNcIik7XG4vLyBSZS1leHBvcnQgbGVnYWN5IG1ldGhvZHMuXG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U3RhdGljUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgXCJ1bnN0YWJsZV9nZXRTdGF0aWNQcm9wc1wiKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1BhdGhzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhcmFtcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1BhcmFtc1wiKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTZXJ2ZXJQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFNlcnZlclByb3BzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wc1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTLFxuICAgICAgICBwYWdlOiBcIi9fZXJyb3JcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL19lcnJvclwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIEFwcCxcbiAgICAgICAgRG9jdW1lbnRcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=.%2Fnode_modules%5Cnext%5Cdist%5Cpages%5C_error.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "./Context/constants.js":
/*!******************************!*\
  !*** ./Context/constants.js ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASK_AI_CHAT: () => (/* binding */ ASK_AI_CHAT),\n/* harmony export */   CHECKI_IF_CONNECTED: () => (/* binding */ CHECKI_IF_CONNECTED),\n/* harmony export */   CHECK_DOCTOR_REGISTERATION: () => (/* binding */ CHECK_DOCTOR_REGISTERATION),\n/* harmony export */   CHECK_PATIENT_REGISTERATION: () => (/* binding */ CHECK_PATIENT_REGISTERATION),\n/* harmony export */   CONVERT_TIMESTAMP_TO_READABLE: () => (/* binding */ CONVERT_TIMESTAMP_TO_READABLE),\n/* harmony export */   GET_ALL_APPOINTMENTS: () => (/* binding */ GET_ALL_APPOINTMENTS),\n/* harmony export */   GET_ALL_APPROVE_DOCTORS: () => (/* binding */ GET_ALL_APPROVE_DOCTORS),\n/* harmony export */   GET_ALL_APP_USER: () => (/* binding */ GET_ALL_APP_USER),\n/* harmony export */   GET_ALL_PATIENT_ORDERS: () => (/* binding */ GET_ALL_PATIENT_ORDERS),\n/* harmony export */   GET_ALL_PRESCRIBED_MEDICINES_OF_PATIENT: () => (/* binding */ GET_ALL_PRESCRIBED_MEDICINES_OF_PATIENT),\n/* harmony export */   GET_ALL_REGISTERED_DOCTORS: () => (/* binding */ GET_ALL_REGISTERED_DOCTORS),\n/* harmony export */   GET_ALL_REGISTERED_MEDICINES: () => (/* binding */ GET_ALL_REGISTERED_MEDICINES),\n/* harmony export */   GET_ALL_REGISTERED_PATIENTS: () => (/* binding */ GET_ALL_REGISTERED_PATIENTS),\n/* harmony export */   GET_DOCTOR_APPOINTMENTS_HISTORYS: () => (/* binding */ GET_DOCTOR_APPOINTMENTS_HISTORYS),\n/* harmony export */   GET_DOCTOR_DETAILS: () => (/* binding */ GET_DOCTOR_DETAILS),\n/* harmony export */   GET_DOCTOR_ID: () => (/* binding */ GET_DOCTOR_ID),\n/* harmony export */   GET_FEE: () => (/* binding */ GET_FEE),\n/* harmony export */   GET_MEDICINE_DETAILS: () => (/* binding */ GET_MEDICINE_DETAILS),\n/* harmony export */   GET_MOST_POPULAR_DOCTOR: () => (/* binding */ GET_MOST_POPULAR_DOCTOR),\n/* harmony export */   GET_MY_FRIEND_LIST: () => (/* binding */ GET_MY_FRIEND_LIST),\n/* harmony export */   GET_NOTIFICATION: () => (/* binding */ GET_NOTIFICATION),\n/* harmony export */   GET_PATIENT_APPOINTMENT: () => (/* binding */ GET_PATIENT_APPOINTMENT),\n/* harmony export */   GET_PATIENT_APPOINTMENT_HISTORYS: () => (/* binding */ GET_PATIENT_APPOINTMENT_HISTORYS),\n/* harmony export */   GET_PATIENT_DETAILS: () => (/* binding */ GET_PATIENT_DETAILS),\n/* harmony export */   GET_PATIENT_ID: () => (/* binding */ GET_PATIENT_ID),\n/* harmony export */   GET_PATIENT_MEDICIAL_HISTORY: () => (/* binding */ GET_PATIENT_MEDICIAL_HISTORY),\n/* harmony export */   GET_PRESCRIPTION_DETAILS: () => (/* binding */ GET_PRESCRIPTION_DETAILS),\n/* harmony export */   GET_READ_MESSAGE: () => (/* binding */ GET_READ_MESSAGE),\n/* harmony export */   GET_USERNAME_TYPE: () => (/* binding */ GET_USERNAME_TYPE),\n/* harmony export */   HANDLE_NETWORK_SWITCH: () => (/* binding */ HANDLE_NETWORK_SWITCH),\n/* harmony export */   HEALTH_CARE_CONTARCT: () => (/* binding */ HEALTH_CARE_CONTARCT),\n/* harmony export */   PARSED_ERROR_MSG: () => (/* binding */ PARSED_ERROR_MSG),\n/* harmony export */   SHORTEN_ADDRESS: () => (/* binding */ SHORTEN_ADDRESS),\n/* harmony export */   UPLOAD_IPFS_IMAGE: () => (/* binding */ UPLOAD_IPFS_IMAGE),\n/* harmony export */   UPLOAD_METADATA: () => (/* binding */ UPLOAD_METADATA)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3modal */ \"web3modal\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var _Healthcare_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Healthcare.json */ \"./Context/Healthcare.json\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_2__, axios__WEBPACK_IMPORTED_MODULE_3__]);\n([openai__WEBPACK_IMPORTED_MODULE_2__, axios__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n//OPEN AI\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n    apiKey: \"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\",\n    dangerouslyAllowBrowser: true\n});\nconst HEALTH_CARE_ABI = _Healthcare_json__WEBPACK_IMPORTED_MODULE_4__.abi;\nconst HEALTH_CARE_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n//ADMIN\nconst ADMIN_ADDRESS = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\nconst NETWORK = \"localhost\";\n//PINATE API - SECRECT KEYS\nconst PINATA_AIP_KEY = \"819757f9b17e65720569\";\nconst PINATA_SECRECT_KEY = \"71ee73246c7b7a99f1177cd55a137e967264ee6ad6bbd8a810331ce2248a1785\";\n//NETWORK\nconst networks = {\n    sepolia: {\n        chainId: `0x${Number(11155111).toString(16)}`,\n        chainName: \"Sepolia\",\n        nativeCurrency: {\n            name: \"SepoliaETH\",\n            symbol: \"SepoliaETH\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://sepolia.infura.io/v3/\"\n        ],\n        blockExplorerUrls: [\n            \"https://sepolia.etherscan.io\"\n        ]\n    },\n    polygon_amoy: {\n        chainId: `0x${Number(80002).toString(16)}`,\n        chainName: \"Polygon Amoy\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/polygon_amoy\"\n        ],\n        blockExplorerUrls: [\n            \"https://www.oklink.com/amoy\"\n        ]\n    },\n    polygon: {\n        chainId: `0x${Number(137).toString(16)}`,\n        chainName: \"Polygon Mainnet\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/polygon\"\n        ],\n        blockExplorerUrls: [\n            \"https://polygonscan.com/\"\n        ]\n    },\n    bsc: {\n        chainId: `0x${Number(56).toString(16)}`,\n        chainName: \"Binance Smart Chain Mainnet\",\n        nativeCurrency: {\n            name: \"Binance Chain Native Token\",\n            symbol: \"BNB\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/bsc\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    base_mainnet: {\n        chainId: `0x${Number(8453).toString(16)}`,\n        chainName: \"Base Mainnet\",\n        nativeCurrency: {\n            name: \"ETH\",\n            symbol: \"ETH\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://mainnet.base.org/\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    base_sepolia: {\n        chainId: `0x${Number(84532).toString(16)}`,\n        chainName: \"Base Sepolia\",\n        nativeCurrency: {\n            name: \"ETH\",\n            symbol: \"ETH\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://sepolia.base.org\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    localhost: {\n        chainId: `0x${Number(31337).toString(16)}`,\n        chainName: \"localhost\",\n        nativeCurrency: {\n            name: \"GO\",\n            symbol: \"GO\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"http://127.0.0.1:8545/\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    }\n};\nconst changeNetwork = async ({ networkName })=>{\n    try {\n        if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n        const network = await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n                {\n                    ...networks[networkName]\n                }\n            ]\n        });\n        return network;\n    } catch (err) {\n        console.log(err.message);\n    }\n};\nconst HANDLE_NETWORK_SWITCH = async ()=>{\n    const networkName = NETWORK;\n    const network = await changeNetwork({\n        networkName\n    });\n    return network;\n};\nconst SHORTEN_ADDRESS = (address)=>`${address?.slice(0, 8)}...${address?.slice(address.length - 4)}`;\nconst PARSED_ERROR_MSG = (e)=>{\n    const json = JSON.parse(JSON.stringify(e));\n    return json?.reason || json?.error?.message;\n};\nfunction CONVERT_TIMESTAMP_TO_READABLE(timeStamp) {\n    const date = new Date(timeStamp * 1000);\n    const readableTime = date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n    });\n    return readableTime;\n}\n//CONTRACT\n//---FETCHING SMART CONTRACT\nconst FETCH_CONTRACT = (address, abi, signer)=>new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(address, abi, signer);\nconst HEALTH_CARE_CONTARCT = async ()=>{\n    const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_1___default())();\n    const connection = await web3Modal.connect();\n    const provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.providers.Web3Provider(connection);\n    const signer = provider.getSigner();\n    const contract = FETCH_CONTRACT(HEALTH_CARE_ADDRESS, HEALTH_CARE_ABI, signer);\n    return contract;\n};\n//CONTRACT FUNCTIONS\nconst CHECKI_IF_CONNECTED = async ()=>{\n    if (!window.ethereum) return \"Install MetaMask\";\n    const network = await HANDLE_NETWORK_SWITCH();\n    const accounts = await window.ethereum.request({\n        method: \"eth_accounts\"\n    });\n    if (accounts.length) {\n        return accounts[0];\n    } else {\n        return \"No account\";\n    }\n};\n//----DOCTORS----\n//GET ALL APPROVE DOCTORS\nconst GET_ALL_APPROVE_DOCTORS = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const doctors = await contract.GET_ALL_APPROVED_DOCTORS();\n    const _doctorsArray = await Promise.all(doctors.map(async ({ id, IPFS_URL, accountAddress, appointmentCount, successfulTreatmentCount, isApproved })=>{\n        const { data: { title, firstName, lastName, gender, degrer, yourAddress, designation, lastWork, mobile, emailID, collageName, collageID, joiningYear, endYear, specialization, registrationID, collageAddress, walletAddress, image, biography } } = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(IPFS_URL, {});\n        return {\n            title,\n            firstName,\n            lastName,\n            gender,\n            degrer,\n            yourAddress,\n            designation,\n            lastWork,\n            mobile,\n            emailID,\n            collageName,\n            collageID,\n            joiningYear,\n            endYear,\n            specialization,\n            registrationID,\n            collageAddress,\n            walletAddress,\n            image,\n            biography,\n            doctorID: id.toNumber(),\n            IPFS_URL,\n            accountAddress,\n            appointmentCount: appointmentCount.toNumber(),\n            successfulTreatmentCount: successfulTreatmentCount.toNumber(),\n            isApproved\n        };\n    }));\n    return _doctorsArray;\n};\n//GET REGISTER DOCTORS\nconst GET_ALL_REGISTERED_DOCTORS = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const doctors = await contract.GET_ALL_REGISTERED_DOCTORS();\n    const _doctorsArray = await Promise.all(doctors.map(async ({ id, IPFS_URL, accountAddress, appointmentCount, successfulTreatmentCount, isApproved })=>{\n        const { data: { title, firstName, lastName, gender, degrer, yourAddress, designation, lastWork, mobile, emailID, collageName, collageID, joiningYear, endYear, specialization, registrationID, collageAddress, walletAddress, image, biography } } = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(IPFS_URL, {});\n        return {\n            title,\n            firstName,\n            lastName,\n            gender,\n            degrer,\n            yourAddress,\n            designation,\n            lastWork,\n            mobile,\n            emailID,\n            collageName,\n            collageID,\n            joiningYear,\n            endYear,\n            specialization,\n            registrationID,\n            collageAddress,\n            walletAddress,\n            image,\n            biography,\n            doctorID: id.toNumber(),\n            IPFS_URL,\n            accountAddress,\n            appointmentCount: appointmentCount.toNumber(),\n            successfulTreatmentCount: successfulTreatmentCount.toNumber(),\n            isApproved\n        };\n    }));\n    return _doctorsArray;\n};\n///GET DOCTOR APPOINMENTS HISTORY\nconst GET_DOCTOR_APPOINTMENTS_HISTORYS = async (_doctorID)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const appointments = await contract.GET_DOCTOR_APPOINTMENTS_HISTORYS(_doctorID);\n    const _appointmentArray = Promise.all(appointments.map(async ({ id, patientId, doctorId, date, from, to, appointmentDate, condition, message, isOpen })=>{\n        const patient = await GET_PATIENT_DETAILS(patientId);\n        return {\n            appoinmnetID: id.toNumber(),\n            patientId: patientId.toNumber(),\n            doctorId: doctorId.toNumber(),\n            date: CONVERT_TIMESTAMP_TO_READABLE(date.toNumber()),\n            isOpen: isOpen,\n            from: from,\n            to: to,\n            appointmentDate: appointmentDate,\n            condition: condition,\n            message: message,\n            patient,\n            ...patient\n        };\n    }));\n    return _appointmentArray;\n};\n//GET BEST DOCTOR\nconst GET_MOST_POPULAR_DOCTOR = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const doctor = await contract.GET_MOST_POPULAR_DOCTOR();\n    const result = {\n        name: doctor.name,\n        image: doctor.image,\n        accountAddress: doctor.accountAddress,\n        id: doctor.id.toNumber(),\n        specialization: doctor.specialization,\n        appointmentCount: doctor.appointmentCount.toNumber(),\n        successfulTreatmentCount: doctor.successfulTreatmentCount.toNumber(),\n        isApproved: doctor.isApproved\n    };\n    return result;\n};\n//GET DOCTORS DETAILS\nconst GET_DOCTOR_DETAILS = async (_doctorId)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const doctor = await contract.GET_DOCTOR_DETAILS(Number(_doctorId));\n    const { data: { title, firstName, lastName, gender, degrer, yourAddress, designation, lastWork, mobile, emailID, collageName, collageID, joiningYear, endYear, specialization, registrationID, collageAddress, walletAddress, image, biography } } = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(doctor.IPFS_URL, {});\n    const doctorDetails = {\n        title,\n        firstName,\n        lastName,\n        gender,\n        degrer,\n        yourAddress,\n        designation,\n        lastWork,\n        mobile,\n        emailID,\n        collageName,\n        collageID,\n        joiningYear,\n        endYear,\n        specialization,\n        registrationID,\n        collageAddress,\n        walletAddress,\n        image,\n        biography,\n        IPFS_URL: doctor.IPFS_URL,\n        accountAddress: doctor.accountAddress,\n        doctorID: doctor.id.toNumber(),\n        appointmentCount: doctor.appointmentCount.toNumber(),\n        successfulTreatmentCount: doctor.successfulTreatmentCount.toNumber(),\n        isApproved: doctor.isApproved\n    };\n    return doctorDetails;\n};\n//GET DOCTOR ID DETAILS\nconst GET_DOCTOR_ID = async (_doctorAddress)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const doctor = await contract.GET_DOCTOR_ID(_doctorAddress);\n    return doctor.toNumber();\n};\n//CHECK DOCTOR ALREADY REGSITER\nconst CHECK_DOCTOR_REGISTERATION = async (_doctorAddress)=>{\n    if (!_doctorAddress) return console.log(\"Data Missing\");\n    const contract = await HEALTH_CARE_CONTARCT();\n    const doctor = await contract.GET_DOCTOR_ID(_doctorAddress);\n    const doctorDetail = await GET_DOCTOR_DETAILS(doctor?.toNumber());\n    return doctorDetail;\n};\n//----END OF DOCTORS------\n//----MEDICINE------------\n//GET REGISTER MEDICINE\nconst GET_ALL_REGISTERED_MEDICINES = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const medicines = await contract.GET_ALL_REGISTERED_MEDICINES();\n    const _medicinesArray = await Promise.all(medicines.map(async ({ id, IPFS_URL, price, quantity, discount, currentLocation, active })=>{\n        const { data: { verifyingDoctor, name, brand, manufacturer, manufacturDate, expiryDate, code, companyEmail, manufactureAddress, mobile, email, image, description } } = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(IPFS_URL, {});\n        return {\n            verifyingDoctor,\n            name,\n            brand,\n            manufacturer,\n            manufacturDate,\n            expiryDate,\n            code,\n            companyEmail,\n            discount: discount.toNumber(),\n            manufactureAddress,\n            price: price.toNumber(),\n            quantity: quantity.toNumber(),\n            currentLocation,\n            mobile,\n            email,\n            image,\n            description,\n            medicineID: id.toNumber(),\n            IPFS_URL,\n            active\n        };\n    }));\n    return _medicinesArray;\n};\n//GET MEDICINE DETAILS\nconst GET_MEDICINE_DETAILS = async (_medicineId)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const medic = await contract.GET_MEDICINE_DETAILS(Number(_medicineId));\n    const { data: { verifyingDoctor, name, brand, manufacturer, manufacturDate, expiryDate, code, companyEmail, manufactureAddress, mobile, email, image, description } } = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(medic.IPFS_URL, {});\n    const _medicine = {\n        medicineID: medic.id.toNumber(),\n        discount: medic.discount.toNumber(),\n        quantity: medic.quantity.toNumber(),\n        price: medic.price.toNumber(),\n        currentLocation: medic.currentLocation,\n        active: medic.active,\n        IPFS_URL: medic.IPFS_URL,\n        verifyingDoctor,\n        name,\n        brand,\n        manufacturer,\n        manufacturDate,\n        expiryDate,\n        code,\n        companyEmail,\n        manufactureAddress,\n        mobile,\n        email,\n        image,\n        description\n    };\n    return _medicine;\n};\n//-----END OF MEDICINE\n//----PATIENTS-----------\n//GET ALL APPOINMENT\nconst GET_ALL_APPOINTMENTS = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const appointments = await contract.GET_ALL_APPOINTMENTS();\n    const _appointmentArray = Promise.all(appointments.map(async (appointment)=>{\n        return {\n            appointmentID: appointment.id.toNumber(),\n            patientId: appointment.patientId.toNumber(),\n            doctorId: appointment.doctorId.toNumber(),\n            date: CONVERT_TIMESTAMP_TO_READABLE(appointment.date.toNumber()),\n            from: appointment.from,\n            to: appointment.to,\n            appointmentDate: appointment.appointmentDate,\n            condition: appointment.condition,\n            message: appointment.message,\n            isOpen: appointment.isOpen\n        };\n    }));\n    return _appointmentArray;\n};\n//GET REGISTER PATIENTS\nconst GET_ALL_REGISTERED_PATIENTS = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const patients = await contract.GET_ALL_REGISTERED_PATIENTS();\n    const _patientsArray = await Promise.all(patients.map(async ({ id, IPFS_URL, medicalHistory, accountAddress })=>{\n        const { data: { title, firstName, lastName, gender, yourAddress, mobile, emailID, birth, doctorAddress, walletAddress, image, message, city } } = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(IPFS_URL, {});\n        return {\n            title,\n            firstName,\n            lastName,\n            gender,\n            yourAddress,\n            mobile,\n            emailID,\n            birth,\n            doctorAddress,\n            walletAddress,\n            image,\n            message,\n            city,\n            patientID: id.toNumber(),\n            IPFS_URL,\n            medicalHistory,\n            accountAddress\n        };\n    }));\n    return _patientsArray;\n};\n//GET PATIENT APPOINMENT\nconst GET_PATIENT_APPOINTMENT = async (_appointmentId)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const appointments = await contract.GET_PATIENT_APPOINTMENT(Number(_appointmentId));\n    const _appointment = {\n        id: appointments.id.toNumber(),\n        patientId: appointments.patientId.toNumber(),\n        doctorId: appointments.doctorId.toNumber(),\n        date: appointments.date.toNumber()\n    };\n    return _appointment;\n};\n///GET ALL PATIENT APPOINMENT HISTORY\nconst GET_PATIENT_APPOINTMENT_HISTORYS = async (_patientID)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const appointments = await contract.GET_PATIENT_APPOINTMENT_HISTORYS(Number(_patientID));\n    console.log(appointments);\n    const _appointmentArray = Promise.all(appointments.map(async ({ id, patientId, doctorId, date, from, to, appointmentDate, condition, message, isOpen })=>{\n        console.log(id.toNumber());\n        const doctor = await GET_DOCTOR_DETAILS(doctorId.toNumber());\n        return {\n            appointmentID: id.toNumber(),\n            patientId: patientId.toNumber(),\n            doctorId: doctorId.toNumber(),\n            date: CONVERT_TIMESTAMP_TO_READABLE(date.toNumber()),\n            from: from,\n            to: to,\n            appointmentDate: appointmentDate,\n            condition: condition,\n            message: message,\n            doctor,\n            isOpen\n        };\n    }));\n    return _appointmentArray;\n};\n//GET PRESCRIPTION DETAILS\nconst GET_PATIENT_DETAILS = async (_patientId)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const patient = await contract.GET_PATIENT_DETAILS(Number(_patientId));\n    const { data: { title, firstName, lastName, gender, yourAddress, mobile, emailID, birth, doctorAddress, walletAddress, image, message, city } } = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(patient.IPFS_URL, {});\n    const patientDetails = {\n        patientID: patient.id.toNumber(),\n        IPFS_URL: patient.IPFS_URL,\n        medicalHistory: patient.medicalHistory,\n        accountAddress: patient.accountAddress,\n        title,\n        firstName,\n        lastName,\n        gender,\n        yourAddress,\n        mobile,\n        emailID,\n        birth,\n        doctorAddress,\n        walletAddress,\n        image,\n        message,\n        city\n    };\n    return patientDetails;\n};\n//GET PATIENT ID DETAILS\nconst GET_PATIENT_ID = async ()=>{\n    const address = await CHECKI_IF_CONNECTED();\n    const contract = await HEALTH_CARE_CONTARCT();\n    if (address) {\n        const patient = await contract.GET_PATIENT_ID(address);\n        return patient.toNumber();\n    }\n};\n//CHECK PATIENT ALREADY REGSITER\nconst CHECK_PATIENT_REGISTERATION = async (_patientAddress)=>{\n    if (!_patientAddress) return console.log(\"Data Missing\");\n    const contract = await HEALTH_CARE_CONTARCT();\n    const patient = await contract.GET_PATIENT_ID(_patientAddress);\n    const patientDetail = await GET_PATIENT_DETAILS(patient.toNumber());\n    return patientDetail;\n};\n//GET_ALL_PATIENT_ORDERS\nconst GET_ALL_PATIENT_ORDERS = async (_patientID)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const orders = await contract.GET_ALL_PATIENT_ORDERS(Number(_patientID));\n    const _orderArray = Promise.all(orders.map(async (order)=>{\n        const patient = await GET_PATIENT_DETAILS(Number(_patientID));\n        const medicine = await GET_MEDICINE_DETAILS(order?.medicineId.toNumber());\n        return {\n            medicineId: order?.medicineId.toNumber(),\n            price: order?.price.toNumber(),\n            payAmount: order?.payAmount.toNumber(),\n            quantity: order?.quantity.toNumber(),\n            patientId: order?.patientId.toNumber(),\n            date: order?.date.toNumber(),\n            patient,\n            medicine\n        };\n    }));\n    return _orderArray;\n};\n//GET_MIDEICIAL_HISTORY\nconst GET_PATIENT_MEDICIAL_HISTORY = async (_patientID)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const history = await contract.GET_PATIENT_MEDICIAL_HISTORY(_patientID);\n    return history;\n};\n//-----END OF PATIENTS\n//GET PRESCRIPTION DETAILS\nconst GET_PRESCRIPTION_DETAILS = async (_prescriptionId)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const prescription = await contract.GET_PRESCRIPTION_DETAILS(Number(_prescriptionId));\n    const prescriptionDetails = {\n        id: prescription.id.toNumber(),\n        medicineId: prescription.medicineId.toNumber(),\n        patientId: prescription.patientId.toNumber(),\n        doctorId: prescription.doctorId.toNumber(),\n        date: prescription.date.toNumber()\n    };\n    return prescriptionDetails;\n};\nconst GET_ALL_PRESCRIBED_MEDICINES_OF_PATIENT = async (_prescriptionId)=>{\n    const address = await CHECKI_IF_CONNECTED();\n    const contract = await HEALTH_CARE_CONTARCT();\n    if (address) {\n        const _patientID = await GET_PATIENT_ID(address);\n        const prescription = await contract.GET_ALL_PRESCRIBED_MEDICINES_OF_PATIENT(_patientID);\n        console.log(prescription);\n        const _prescriptionArray = Promise.all(prescription.map(async ({ id, medicineId, patientId, doctorId, date })=>{\n            const patient = await GET_PATIENT_DETAILS(Number(_patientID));\n            const medicine = await GET_MEDICINE_DETAILS(medicineId.toNumber());\n            const doctor = await GET_DOCTOR_DETAILS(doctorId.toNumber());\n            return {\n                prescriptionId: id.toNumber(),\n                medicineId: medicineId.toNumber(),\n                patientId: patientId.toNumber(),\n                doctorId: doctorId.toNumber(),\n                date: CONVERT_TIMESTAMP_TO_READABLE(date.toNumber()),\n                patient,\n                medicine,\n                doctor\n            };\n        }));\n        return _prescriptionArray;\n    }\n};\n//-------END OF PRESCRIPTION--------\n//----------CHAT-------------\nconst GET_USERNAME_TYPE = async (_userAddress)=>{\n    if (!_userAddress) return console.log(\"No Address\");\n    const contract = await HEALTH_CARE_CONTARCT();\n    const user = await contract.GET_USERNAME_TYPE(_userAddress);\n    const _userDetail = {\n        name: user.name,\n        userType: user.userType\n    };\n    return _userDetail;\n};\nconst GET_MY_FRIEND_LIST = async (_userAddress)=>{\n    if (!_userAddress) return console.log(\"No Address\");\n    const contract = await HEALTH_CARE_CONTARCT();\n    const user = await contract.GET_MY_FRIEND_LIST(_userAddress);\n    const _friendArray = await Promise.all(user.map(async ({ name, pubkey })=>{\n        return {\n            name: name,\n            userAddress: pubkey\n        };\n    }));\n    console.log(_friendArray);\n    return _friendArray;\n};\nconst GET_READ_MESSAGE = async (_userAddress)=>{\n    if (!_userAddress) return console.log(\"No Address\");\n    const address = await CHECKI_IF_CONNECTED();\n    const contract = await HEALTH_CARE_CONTARCT();\n    if (address) {\n        const message = await contract.GET_READ_MESSAGE(_userAddress, address);\n        const _messageArray = await Promise.all(message.map(async ({ msg, sender, timestamp })=>{\n            return {\n                msg: msg,\n                sender: sender,\n                timestamp: CONVERT_TIMESTAMP_TO_READABLE(timestamp)\n            };\n        }));\n        return _messageArray;\n    }\n};\nconst GET_ALL_APP_USER = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const users = await contract.GET_ALL_APP_USER();\n    const _userArray = await Promise.all(users.map(async ({ accountAddress, name })=>{\n        return {\n            accountAddress: accountAddress,\n            name: name\n        };\n    }));\n    return _userArray;\n};\nconst GET_NOTIFICATION = async (_address)=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const notifications = await contract.GET_NOTIFICATIONS(_address);\n    const _notificationArray = await Promise.all(notifications.map(async ({ id, userAddress, message, timestamp, categoryType })=>{\n        return {\n            notificationId: id.toNumber(),\n            userAddress: SHORTEN_ADDRESS(userAddress),\n            message: message,\n            date: CONVERT_TIMESTAMP_TO_READABLE(timestamp.toNumber()),\n            categoryType: categoryType\n        };\n    }));\n    return _notificationArray;\n};\nconst GET_FEE = async ()=>{\n    const contract = await HEALTH_CARE_CONTARCT();\n    const _doctorFee = await contract.registrationDoctorFee();\n    const _patientFee = await contract.registrationPatientFee();\n    const _appointmentFee = await contract.appointmentFee();\n    const _admin = await contract.admin();\n    const fee = {\n        doctorFee: ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.utils.formatUnits(_doctorFee, \"ether\"),\n        patientFee: ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.utils.formatUnits(_patientFee, \"ether\"),\n        appointmentFee: ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.utils.formatUnits(_appointmentFee, \"ether\"),\n        admin: SHORTEN_ADDRESS(_admin)\n    };\n    return fee;\n};\n//----------END OF CHAT-------------\n//----IPFS UPLOAD--------\n//--IMAGE UPLOAD\nconst UPLOAD_IPFS_IMAGE = async (file)=>{\n    if (file) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const response = await (0,axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            method: \"post\",\n            url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n            data: formData,\n            headers: {\n                pinata_api_key: PINATA_AIP_KEY,\n                pinata_secret_api_key: PINATA_SECRECT_KEY,\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        const ImgHash = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n        return ImgHash;\n    }\n};\n//--METADAT UPLOAD\nconst UPLOAD_METADATA = async (data)=>{\n    const response = await (0,axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n        method: \"POST\",\n        url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n        data: data,\n        headers: {\n            pinata_api_key: PINATA_AIP_KEY,\n            pinata_secret_api_key: PINATA_SECRECT_KEY,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n    return url;\n};\n//----END OF IPFS UPLOAD--------\n//-----------OPEN AI-------------\nconst ASK_AI_CHAT = async (prompt)=>{\n    if (!prompt) {\n        return \"Prompt Missing\";\n    }\n    const completion = await openai.chat.completions.create({\n        messages: [\n            {\n                role: \"system\",\n                content: prompt\n            }\n        ],\n        model: \"gpt-4o\"\n    });\n    if (completion?.choices[0].message) {\n        const response = {\n            prompt: prompt,\n            message: completion.choices[0].message.content,\n            timestamp: new Date().toISOString()\n        };\n        let CHAT_AI_ARRAY = [];\n        const AI_ASK_HISTORY = localStorage.getItem(\"AI_ASK_HISTORY\");\n        if (AI_ASK_HISTORY) {\n            CHAT_AI_ARRAY = JSON.parse(localStorage.getItem(\"AI_ASK_HISTORY\"));\n            CHAT_AI_ARRAY.push(response);\n            localStorage.setItem(\"AI_ASK_HISTORY\", JSON.stringify(CHAT_AI_ARRAY));\n        } else {\n            CHAT_AI_ARRAY.push(response);\n            localStorage.setItem(\"AI_ASK_HISTORY\", JSON.stringify(CHAT_AI_ARRAY));\n        }\n    }\n    console.log(completion.choices[0]);\n    return completion.choices[0].message.content;\n}; //-----------END OF OPEN AI-------------\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Context/constants.js\n");

/***/ }),

/***/ "./Context/index.js":
/*!**************************!*\
  !*** ./Context/index.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StateContextProvider: () => (/* binding */ StateContextProvider),\n/* harmony export */   useStateContext: () => (/* binding */ useStateContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3modal */ \"web3modal\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"./Context/constants.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_hot_toast__WEBPACK_IMPORTED_MODULE_4__, _constants__WEBPACK_IMPORTED_MODULE_5__]);\n([react_hot_toast__WEBPACK_IMPORTED_MODULE_4__, _constants__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n//INTERNAL IMPORT\n\nconst DOCTOR_REGISTER_FEE = \"0.0025\";\nconst PATIENT_APOINMENT_FEE = \"0.0025\";\nconst PATIENT_REGISTER_FEE = \"0.00025\";\nconst ADMIN_ADDRESS = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\nconst CURRENCY = \"GO\";\nconst StateContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst StateContextProvider = ({ children })=>{\n    //STATE VERIABLE\n    const [address, setAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [accountBalance, setAccountBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loader, setLoader] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [reCall, setReCall] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [currency, setCurrency] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(CURRENCY);\n    const [openComponent, setOpenComponent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Home\");\n    const [registerDoctors, setRegisterDoctors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [registeredPatient, setRegisteredPatient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const notifySuccess = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_4__[\"default\"].success(msg, {\n            duration: 2000\n        });\n    const notifyError = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_4__[\"default\"].error(msg, {\n            duration: 2000\n        });\n    //CHECK WALLET CONNECT\n    const CHECKI_IF_CONNECTED_LOAD = async ()=>{\n        try {\n            if (!window.ethereum) return console.log(\"Install MetaMask\");\n            (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HANDLE_NETWORK_SWITCH)();\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setAddress(accounts[0]);\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.providers.Web3Provider(window.ethereum);\n                const getBalance = await provider.getBalance(accounts[0]);\n                const bal = ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.formatEther(getBalance);\n                setAccountBalance(bal);\n                return accounts[0];\n            } else {\n                return \"No account\";\n            }\n        } catch (error) {\n            return \"not connected\";\n        }\n    };\n    //CONNECT WALLET\n    const CONNECT_WALLET = async ()=>{\n        try {\n            if (!window.ethereum) return console.log(\"Install MateMask\");\n            await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HANDLE_NETWORK_SWITCH)();\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            const firstAccount = accounts[0];\n            setAddress(firstAccount);\n            return firstAccount;\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        CHECKI_IF_CONNECTED_LOAD();\n    }, []);\n    //-------MEDICINE------------\n    //ADD MEDICINE\n    const ADD_MEDICINE = async (medicine)=>{\n        try {\n            const { verifyingDoctor, name, brand, manufacturer, manufacturDate, expiryDate, code, companyEmail, discount, manufactureAddress, price, quentity, currentLocation, mobile, email, image, description } = medicine;\n            if (!verifyingDoctor || !name || !brand || !manufacturer || !manufacturDate || !expiryDate || !code || !companyEmail || !discount || !manufactureAddress || !price || !quentity || !currentLocation || !mobile || !email || !image || !description) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const data = JSON.stringify({\n                verifyingDoctor: verifyingDoctor,\n                name: name,\n                brand: brand,\n                manufacturer: manufacturer,\n                manufacturDate: manufacturDate,\n                expiryDate: expiryDate,\n                code: code,\n                companyEmail: companyEmail,\n                discount: discount,\n                manufactureAddress: manufactureAddress,\n                price: price,\n                quentity: quentity,\n                currentLocation: currentLocation,\n                mobile: mobile,\n                email: email,\n                image: image,\n                description: description\n            });\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const _IPFS_URL = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.UPLOAD_METADATA)(data);\n                const transaction = await contract.ADD_MEDICINE(_IPFS_URL, price, quentity, discount, currentLocation, {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Medicine Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    // UPDATE_MEDICINE_LOCATION\n    const UPDATE_MEDICINE_LOCATION = async (updateMedicine)=>{\n        const { medicineID, update } = updateMedicine;\n        try {\n            if (!medicineID || !update) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Updating medicine location... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_MEDICINE_LOCATION(Number(medicineID), update, {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Location updated successfully\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    // UPDATE_MEDICINE_PRICE\n    const UPDATE_MEDICINE_PRICE = async (updateMedicine)=>{\n        const { medicineID, update } = updateMedicine;\n        try {\n            if (!medicineID || !update) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Updating new price... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_MEDICINE_PRICE(Number(medicineID), Number(update), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Price updated successfully\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    // UPDATE_MEDICINE_QUANTITY\n    const UPDATE_MEDICINE_QUANTITY = async (updateMedicine)=>{\n        const { medicineID, update } = updateMedicine;\n        try {\n            if (!medicineID || !update) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Updating new quantity... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_MEDICINE_QUANTITY(Number(medicineID), Number(update), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"quantity updated successfully\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    // UPDATE_MEDICINE_DISCOUNT\n    const UPDATE_MEDICINE_DISCOUNT = async (updateMedicine)=>{\n        const { medicineID, update } = updateMedicine;\n        try {\n            if (!medicineID || !update) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Updating new discount... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_MEDICINE_DISCOUNT(Number(medicineID), Number(update), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"discount updated successfully\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    // UPDATE_MEDICINE_ACTIVE\n    const UPDATE_MEDICINE_ACTIVE = async (_medicineId)=>{\n        try {\n            if (!_medicineId) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Updating new status... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_MEDICINE_ACTIVE(Number(_medicineId), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Status updated successfully\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //-------END MEDICINE-----------\n    ///REGISTER DOCTOR\n    const ADD_DOCTOR = async (doctor)=>{\n        try {\n            const { title, firstName, lastName, gender, degrer, yourAddress, designation, lastWork, mobile, emailID, collageName, collageID, joiningYear, endYear, specialization, registrationID, collageAddress, walletAddress, image, biography } = doctor;\n            if (!title || !firstName || !lastName || !gender || !degrer || !yourAddress || !designation || !lastWork || !mobile || !emailID || !collageName || !collageID || !joiningYear || !endYear || !specialization || !registrationID || !collageAddress || !walletAddress || !image || !biography) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const data = JSON.stringify({\n                title: title,\n                firstName: firstName,\n                lastName: lastName,\n                gender: gender,\n                degrer: degrer,\n                yourAddress: yourAddress,\n                designation: designation,\n                lastWork: lastWork,\n                mobile: mobile,\n                emailID: emailID,\n                collageName: collageName,\n                collageID: collageID,\n                joiningYear: joiningYear,\n                endYear: endYear,\n                specialization: specialization,\n                registrationID: registrationID,\n                collageAddress: collageAddress,\n                walletAddress: walletAddress,\n                image: image,\n                biography: biography\n            });\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const _fee = await contract.registrationDoctorFee();\n                const _IPFS_URL = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.UPLOAD_METADATA)(data);\n                const accountName = `${title} ${firstName} ${lastName}`;\n                const _type = \"Doctor\";\n                const transaction = await contract.ADD_DOCTOR(_IPFS_URL, walletAddress, accountName, _type, {\n                    value: _fee.toString(),\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    // DOCTOR APPROVE\n    const APPROVE_DOCTOR_STATUS = async (_doctorId)=>{\n        try {\n            if (!_doctorId) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations Approve is processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.APPROVE_DOCTOR_STATUS(Number(_doctorId), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations Approve conplete\");\n                    setReCall(reCall + 1);\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //PRESCRIBE PATIENT MEDICINE\n    const PRESCRIBE_MEDICINE = async (prescribeDoctor)=>{\n        try {\n            const { medicineID, patientID } = prescribeDoctor;\n            if (!medicineID || !patientID) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.PRESCRIBE_MEDICINE(Number(medicineID), Number(patientID), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //UPDATE_PATIENT_MEDICAL_HISTORY\n    const UPDATE_PATIENT_MEDICAL_HISTORY = async (conditionUpdate)=>{\n        try {\n            const { message, patientID } = conditionUpdate;\n            if (!patientID || !message) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_PATIENT_MEDICAL_HISTORY(Number(patientID), message, {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //COMPLETE APPOINMENT\n    const COMPLETE_APPOINTMENT = async (_appointmentId)=>{\n        try {\n            if (!_appointmentId) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.COMPLETE_APPOINTMENT(Number(_appointmentId), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //------APTIENT-------\n    ///ADD PATIENT\n    const ADD_PATIENTS = async (patient, doctor)=>{\n        try {\n            const doctorAddress = doctor?.accountAddress;\n            const doctorName = `${doctor?.title} ${doctor?.firstName} ${doctor?.lastName}`;\n            const { title, firstName, lastName, gender, medicialHistory, yourAddress, mobile, emailID, birth, walletAddress, image, message, city } = patient;\n            if (!title || !firstName || !lastName || !gender || !medicialHistory || !yourAddress || !mobile || !emailID || !birth || !walletAddress || !image || !message || !city || !doctorName || !doctorAddress) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const data = JSON.stringify({\n                title: title,\n                firstName: firstName,\n                lastName: lastName,\n                gender: gender,\n                medicialHistory: medicialHistory,\n                yourAddress: yourAddress,\n                mobile: mobile,\n                emailID: emailID,\n                birth: birth,\n                doctorName: doctorName,\n                doctorAddress: doctorAddress,\n                walletAddress: walletAddress,\n                image: image,\n                message: message,\n                city: city\n            });\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const _fee = await contract.registrationPatientFee();\n                const _IPFS_URL = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.UPLOAD_METADATA)(data);\n                const accountName = `${title} ${firstName} ${lastName}`;\n                const _type = \"Patient\";\n                const transaction = await contract.ADD_PATIENTS(_IPFS_URL, [\n                    medicialHistory\n                ], walletAddress, [\n                    0\n                ], accountName, doctorAddress, doctorName, _type, {\n                    value: _fee.toString(),\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    ///BOOK APPOINMENT\n    const BOOK_APPOINTMENT = async (booking, bookingDoctor)=>{\n        try {\n            const { from, to, appointmentDate, condition, message } = booking;\n            console.log(from, to, appointmentDate, condition, message);\n            const { accountAddress, title, firstName, lastName, doctorID } = bookingDoctor;\n            if (!from || !to || !appointmentDate || !condition || !message || !accountAddress) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const _fee = await contract.appointmentFee();\n                const _patientID = await contract.GET_PATIENT_ID(address);\n                const transaction = await contract.BOOK_APPOINTMENT(_patientID.toNumber(), Number(doctorID), from, to, appointmentDate, condition, message, accountAddress, `${title} ${firstName} ${lastName}`, {\n                    value: _fee.toString(),\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //BUY MEDICINE\n    const BUY_MEDICINE = async (_medicineId, _price, _quantity)=>{\n        try {\n            if (!_medicineId || !_quantity) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registration processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const _patientID = await contract.GET_PATIENT_ID(address);\n                const price = _price * Number(_quantity);\n                const parsedAmount = ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.parseEther(price.toString());\n                const paymentHash = await ethereum.request({\n                    method: \"eth_sendTransaction\",\n                    params: [\n                        {\n                            from: address,\n                            to: ADMIN_ADDRESS,\n                            gas: \"0x5208\",\n                            value: parsedAmount._hex\n                        }\n                    ]\n                });\n                const transaction = await contract.BUY_MEDICINE(_patientID.toNumber(), Number(_medicineId), Number(_quantity), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registration complete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            const msg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            console.log(msg);\n            console.log(error);\n        }\n    };\n    ///CHAT\n    const SEND_MESSAGE = async (activeChat, messageChat)=>{\n        try {\n            const { name, userAddress } = activeChat;\n            const { message } = messageChat;\n            if (!message || !userAddress) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract._SEND_MESSAGE(userAddress, address, message, {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    setReCall(reCall + 1);\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            console.log(error);\n        }\n    };\n    //-----ADMIN--------\n    //UPADTE REGSITRATION FEE\n    const UPDATE_REGISTRATION_DOCTOR_FEE = async (_newFee)=>{\n        try {\n            if (!_newFee) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_REGISTRATION_FEE(ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.parseEther(_newFee), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //UPADTE APPOINMENT FEE\n    const UPDATE_APPOINTMENT_FEE = async (_newFee)=>{\n        try {\n            if (!_newFee) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_APPOINTMENT_FEE(ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.parseEther(_newFee), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //UPADTE PATIENT_REGISTRATION FEE\n    const UPDATE_REGISTRATION_PATIENT_FEE = async (_newFee)=>{\n        try {\n            if (!_newFee) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_REGISTRATION_PATIENT_FEE(ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.parseEther(_newFee), {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    //UPDATE_ADMIN_ADDRESS\n    const UPDATE_ADMIN_ADDRESS = async (_newAddress)=>{\n        try {\n            if (!_newAddress) return notifyError(\"Data missing\");\n            setLoader(true);\n            notifySuccess(\"Registrations processing... \");\n            const address = await CHECKI_IF_CONNECTED_LOAD();\n            if (address) {\n                const contract = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.HEALTH_CARE_CONTARCT)();\n                const transaction = await contract.UPDATE_ADMIN_ADDRESS(_newAddress, {\n                    gasLimit: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.hexlify(8000000)\n                });\n                await transaction.wait();\n                if (transaction.hash) {\n                    setLoader(false);\n                    notifySuccess(\"Registrations conplete\");\n                    window.location.reload();\n                }\n            }\n        } catch (error) {\n            setLoader(false);\n            const errorMsg = (0,_constants__WEBPACK_IMPORTED_MODULE_5__.PARSED_ERROR_MSG)(error);\n            notifyError(errorMsg);\n            console.log(error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(StateContext.Provider, {\n        value: {\n            UPDATE_ADMIN_ADDRESS,\n            UPDATE_REGISTRATION_PATIENT_FEE,\n            UPDATE_APPOINTMENT_FEE,\n            UPDATE_REGISTRATION_DOCTOR_FEE,\n            CHECKI_IF_CONNECTED_LOAD,\n            CONNECT_WALLET,\n            //ADD MEDICINE\n            ADD_MEDICINE,\n            UPDATE_MEDICINE_ACTIVE,\n            UPDATE_MEDICINE_DISCOUNT,\n            UPDATE_MEDICINE_LOCATION,\n            UPDATE_MEDICINE_PRICE,\n            UPDATE_MEDICINE_QUANTITY,\n            //ADD DOCOTR\n            ADD_DOCTOR,\n            APPROVE_DOCTOR_STATUS,\n            ADD_PATIENTS,\n            PRESCRIBE_MEDICINE,\n            UPDATE_PATIENT_MEDICAL_HISTORY,\n            BOOK_APPOINTMENT,\n            COMPLETE_APPOINTMENT,\n            SEND_MESSAGE,\n            BUY_MEDICINE,\n            //VERIBALES\n            notifySuccess,\n            notifyError,\n            setLoader,\n            setAddress,\n            setAccountBalance,\n            setOpenComponent,\n            openComponent,\n            currency,\n            address,\n            loader,\n            accountBalance,\n            reCall\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\Context\\\\index.js\",\n        lineNumber: 1029,\n        columnNumber: 5\n    }, undefined);\n};\nconst useStateContext = ()=>(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(StateContext);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Context/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/pages/_document.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/pages/_document.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    Head: function() {\n        return Head;\n    },\n    NextScript: function() {\n        return NextScript;\n    },\n    Html: function() {\n        return Html;\n    },\n    Main: function() {\n        return Main;\n    },\n    /**\n * `Document` component handles the initial `document` markup and renders only on the server side.\n * Commonly used for implementing server side rendering for `css-in-js` libraries.\n */ default: function() {\n        return Document;\n    }\n});\nconst _react = /*#__PURE__*/ _interop_require_default(__webpack_require__(/*! react */ \"react\"));\nconst _constants = __webpack_require__(/*! ../shared/lib/constants */ \"../shared/lib/constants\");\nconst _getpagefiles = __webpack_require__(/*! ../server/get-page-files */ \"../server/get-page-files\");\nconst _htmlescape = __webpack_require__(/*! ../server/htmlescape */ \"../server/htmlescape\");\nconst _iserror = /*#__PURE__*/ _interop_require_default(__webpack_require__(/*! ../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nconst _htmlcontext = __webpack_require__(/*! ../shared/lib/html-context */ \"../shared/lib/html-context\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/** Set of pages that have triggered a large data warning on production mode. */ const largePageDataWarnings = new Set();\nfunction getDocumentFiles(buildManifest, pathname, inAmpMode) {\n    const sharedFiles = (0, _getpagefiles.getPageFiles)(buildManifest, \"/_app\");\n    const pageFiles =  true && inAmpMode ? [] : (0, _getpagefiles.getPageFiles)(buildManifest, pathname);\n    return {\n        sharedFiles,\n        pageFiles,\n        allFiles: [\n            ...new Set([\n                ...sharedFiles,\n                ...pageFiles\n            ])\n        ]\n    };\n}\nfunction getPolyfillScripts(context, props) {\n    // polyfills.js has to be rendered as nomodule without async\n    // It also has to be the first script to load\n    const { assetPrefix, buildManifest, assetQueryString, disableOptimizedLoading, crossOrigin } = context;\n    return buildManifest.polyfillFiles.filter((polyfill)=>polyfill.endsWith(\".js\") && !polyfill.endsWith(\".module.js\")).map((polyfill)=>/*#__PURE__*/ _react.default.createElement(\"script\", {\n            key: polyfill,\n            defer: !disableOptimizedLoading,\n            nonce: props.nonce,\n            crossOrigin: props.crossOrigin || crossOrigin,\n            noModule: true,\n            src: `${assetPrefix}/_next/${polyfill}${assetQueryString}`\n        }));\n}\nfunction hasComponentProps(child) {\n    return !!child && !!child.props;\n}\nfunction AmpStyles({ styles }) {\n    if (!styles) return null;\n    // try to parse styles from fragment for backwards compat\n    const curStyles = Array.isArray(styles) ? styles : [];\n    if (styles.props && // @ts-ignore Property 'props' does not exist on type ReactElement\n    Array.isArray(styles.props.children)) {\n        const hasStyles = (el)=>{\n            var _el_props, _el_props_dangerouslySetInnerHTML;\n            return el == null ? void 0 : (_el_props = el.props) == null ? void 0 : (_el_props_dangerouslySetInnerHTML = _el_props.dangerouslySetInnerHTML) == null ? void 0 : _el_props_dangerouslySetInnerHTML.__html;\n        };\n        // @ts-ignore Property 'props' does not exist on type ReactElement\n        styles.props.children.forEach((child)=>{\n            if (Array.isArray(child)) {\n                child.forEach((el)=>hasStyles(el) && curStyles.push(el));\n            } else if (hasStyles(child)) {\n                curStyles.push(child);\n            }\n        });\n    }\n    /* Add custom styles before AMP styles to prevent accidental overrides */ return /*#__PURE__*/ _react.default.createElement(\"style\", {\n        \"amp-custom\": \"\",\n        dangerouslySetInnerHTML: {\n            __html: curStyles.map((style)=>style.props.dangerouslySetInnerHTML.__html).join(\"\").replace(/\\/\\*# sourceMappingURL=.*\\*\\//g, \"\").replace(/\\/\\*@ sourceURL=.*?\\*\\//g, \"\")\n        }\n    });\n}\nfunction getDynamicChunks(context, props, files) {\n    const { dynamicImports, assetPrefix, isDevelopment, assetQueryString, disableOptimizedLoading, crossOrigin } = context;\n    return dynamicImports.map((file)=>{\n        if (!file.endsWith(\".js\") || files.allFiles.includes(file)) return null;\n        return /*#__PURE__*/ _react.default.createElement(\"script\", {\n            async: !isDevelopment && disableOptimizedLoading,\n            defer: !disableOptimizedLoading,\n            key: file,\n            src: `${assetPrefix}/_next/${encodeURI(file)}${assetQueryString}`,\n            nonce: props.nonce,\n            crossOrigin: props.crossOrigin || crossOrigin\n        });\n    });\n}\nfunction getScripts(context, props, files) {\n    var _buildManifest_lowPriorityFiles;\n    const { assetPrefix, buildManifest, isDevelopment, assetQueryString, disableOptimizedLoading, crossOrigin } = context;\n    const normalScripts = files.allFiles.filter((file)=>file.endsWith(\".js\"));\n    const lowPriorityScripts = (_buildManifest_lowPriorityFiles = buildManifest.lowPriorityFiles) == null ? void 0 : _buildManifest_lowPriorityFiles.filter((file)=>file.endsWith(\".js\"));\n    return [\n        ...normalScripts,\n        ...lowPriorityScripts\n    ].map((file)=>{\n        return /*#__PURE__*/ _react.default.createElement(\"script\", {\n            key: file,\n            src: `${assetPrefix}/_next/${encodeURI(file)}${assetQueryString}`,\n            nonce: props.nonce,\n            async: !isDevelopment && disableOptimizedLoading,\n            defer: !disableOptimizedLoading,\n            crossOrigin: props.crossOrigin || crossOrigin\n        });\n    });\n}\nfunction getPreNextWorkerScripts(context, props) {\n    const { assetPrefix, scriptLoader, crossOrigin, nextScriptWorkers } = context;\n    // disable `nextScriptWorkers` in edge runtime\n    if (!nextScriptWorkers || \"nodejs\" === \"edge\") return null;\n    try {\n        let { partytownSnippet } = require(\"@builder.io/partytown/integration\");\n        const children = Array.isArray(props.children) ? props.children : [\n            props.children\n        ];\n        // Check to see if the user has defined their own Partytown configuration\n        const userDefinedConfig = children.find((child)=>{\n            var _child_props, _child_props_dangerouslySetInnerHTML;\n            return hasComponentProps(child) && (child == null ? void 0 : (_child_props = child.props) == null ? void 0 : (_child_props_dangerouslySetInnerHTML = _child_props.dangerouslySetInnerHTML) == null ? void 0 : _child_props_dangerouslySetInnerHTML.__html.length) && \"data-partytown-config\" in child.props;\n        });\n        return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, !userDefinedConfig && /*#__PURE__*/ _react.default.createElement(\"script\", {\n            \"data-partytown-config\": \"\",\n            dangerouslySetInnerHTML: {\n                __html: `\n            partytown = {\n              lib: \"${assetPrefix}/_next/static/~partytown/\"\n            };\n          `\n            }\n        }), /*#__PURE__*/ _react.default.createElement(\"script\", {\n            \"data-partytown\": \"\",\n            dangerouslySetInnerHTML: {\n                __html: partytownSnippet()\n            }\n        }), (scriptLoader.worker || []).map((file, index)=>{\n            const { strategy, src, children: scriptChildren, dangerouslySetInnerHTML, ...scriptProps } = file;\n            let srcProps = {};\n            if (src) {\n                // Use external src if provided\n                srcProps.src = src;\n            } else if (dangerouslySetInnerHTML && dangerouslySetInnerHTML.__html) {\n                // Embed inline script if provided with dangerouslySetInnerHTML\n                srcProps.dangerouslySetInnerHTML = {\n                    __html: dangerouslySetInnerHTML.__html\n                };\n            } else if (scriptChildren) {\n                // Embed inline script if provided with children\n                srcProps.dangerouslySetInnerHTML = {\n                    __html: typeof scriptChildren === \"string\" ? scriptChildren : Array.isArray(scriptChildren) ? scriptChildren.join(\"\") : \"\"\n                };\n            } else {\n                throw new Error(\"Invalid usage of next/script. Did you forget to include a src attribute or an inline script? https://nextjs.org/docs/messages/invalid-script\");\n            }\n            return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                ...srcProps,\n                ...scriptProps,\n                type: \"text/partytown\",\n                key: src || index,\n                nonce: props.nonce,\n                \"data-nscript\": \"worker\",\n                crossOrigin: props.crossOrigin || crossOrigin\n            });\n        }));\n    } catch (err) {\n        if ((0, _iserror.default)(err) && err.code !== \"MODULE_NOT_FOUND\") {\n            console.warn(`Warning: ${err.message}`);\n        }\n        return null;\n    }\n}\nfunction getPreNextScripts(context, props) {\n    const { scriptLoader, disableOptimizedLoading, crossOrigin } = context;\n    const webWorkerScripts = getPreNextWorkerScripts(context, props);\n    const beforeInteractiveScripts = (scriptLoader.beforeInteractive || []).filter((script)=>script.src).map((file, index)=>{\n        const { strategy, ...scriptProps } = file;\n        return /*#__PURE__*/ _react.default.createElement(\"script\", {\n            ...scriptProps,\n            key: scriptProps.src || index,\n            defer: scriptProps.defer ?? !disableOptimizedLoading,\n            nonce: props.nonce,\n            \"data-nscript\": \"beforeInteractive\",\n            crossOrigin: props.crossOrigin || crossOrigin\n        });\n    });\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, webWorkerScripts, beforeInteractiveScripts);\n}\nfunction getHeadHTMLProps(props) {\n    const { crossOrigin, nonce, ...restProps } = props;\n    // This assignment is necessary for additional type checking to avoid unsupported attributes in <head>\n    const headProps = restProps;\n    return headProps;\n}\nfunction getAmpPath(ampPath, asPath) {\n    return ampPath || `${asPath}${asPath.includes(\"?\") ? \"&\" : \"?\"}amp=1`;\n}\nfunction getNextFontLinkTags(nextFontManifest, dangerousAsPath, assetPrefix = \"\") {\n    if (!nextFontManifest) {\n        return {\n            preconnect: null,\n            preload: null\n        };\n    }\n    const appFontsEntry = nextFontManifest.pages[\"/_app\"];\n    const pageFontsEntry = nextFontManifest.pages[dangerousAsPath];\n    const preloadedFontFiles = [\n        ...appFontsEntry ?? [],\n        ...pageFontsEntry ?? []\n    ];\n    // If no font files should preload but there's an entry for the path, add a preconnect tag.\n    const preconnectToSelf = !!(preloadedFontFiles.length === 0 && (appFontsEntry || pageFontsEntry));\n    return {\n        preconnect: preconnectToSelf ? /*#__PURE__*/ _react.default.createElement(\"link\", {\n            \"data-next-font\": nextFontManifest.pagesUsingSizeAdjust ? \"size-adjust\" : \"\",\n            rel: \"preconnect\",\n            href: \"/\",\n            crossOrigin: \"anonymous\"\n        }) : null,\n        preload: preloadedFontFiles ? preloadedFontFiles.map((fontFile)=>{\n            const ext = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFile)[1];\n            return /*#__PURE__*/ _react.default.createElement(\"link\", {\n                key: fontFile,\n                rel: \"preload\",\n                href: `${assetPrefix}/_next/${encodeURI(fontFile)}`,\n                as: \"font\",\n                type: `font/${ext}`,\n                crossOrigin: \"anonymous\",\n                \"data-next-font\": fontFile.includes(\"-s\") ? \"size-adjust\" : \"\"\n            });\n        }) : null\n    };\n}\nclass Head extends _react.default.Component {\n    static #_ = (()=>{\n        this.contextType = _htmlcontext.HtmlContext;\n    })();\n    getCssLinks(files) {\n        const { assetPrefix, assetQueryString, dynamicImports, crossOrigin, optimizeCss, optimizeFonts } = this.context;\n        const cssFiles = files.allFiles.filter((f)=>f.endsWith(\".css\"));\n        const sharedFiles = new Set(files.sharedFiles);\n        // Unmanaged files are CSS files that will be handled directly by the\n        // webpack runtime (`mini-css-extract-plugin`).\n        let unmangedFiles = new Set([]);\n        let dynamicCssFiles = Array.from(new Set(dynamicImports.filter((file)=>file.endsWith(\".css\"))));\n        if (dynamicCssFiles.length) {\n            const existing = new Set(cssFiles);\n            dynamicCssFiles = dynamicCssFiles.filter((f)=>!(existing.has(f) || sharedFiles.has(f)));\n            unmangedFiles = new Set(dynamicCssFiles);\n            cssFiles.push(...dynamicCssFiles);\n        }\n        let cssLinkElements = [];\n        cssFiles.forEach((file)=>{\n            const isSharedFile = sharedFiles.has(file);\n            if (!optimizeCss) {\n                cssLinkElements.push(/*#__PURE__*/ _react.default.createElement(\"link\", {\n                    key: `${file}-preload`,\n                    nonce: this.props.nonce,\n                    rel: \"preload\",\n                    href: `${assetPrefix}/_next/${encodeURI(file)}${assetQueryString}`,\n                    as: \"style\",\n                    crossOrigin: this.props.crossOrigin || crossOrigin\n                }));\n            }\n            const isUnmanagedFile = unmangedFiles.has(file);\n            cssLinkElements.push(/*#__PURE__*/ _react.default.createElement(\"link\", {\n                key: file,\n                nonce: this.props.nonce,\n                rel: \"stylesheet\",\n                href: `${assetPrefix}/_next/${encodeURI(file)}${assetQueryString}`,\n                crossOrigin: this.props.crossOrigin || crossOrigin,\n                \"data-n-g\": isUnmanagedFile ? undefined : isSharedFile ? \"\" : undefined,\n                \"data-n-p\": isUnmanagedFile ? undefined : isSharedFile ? undefined : \"\"\n            }));\n        });\n        if (false) {}\n        return cssLinkElements.length === 0 ? null : cssLinkElements;\n    }\n    getPreloadDynamicChunks() {\n        const { dynamicImports, assetPrefix, assetQueryString, crossOrigin } = this.context;\n        return dynamicImports.map((file)=>{\n            if (!file.endsWith(\".js\")) {\n                return null;\n            }\n            return /*#__PURE__*/ _react.default.createElement(\"link\", {\n                rel: \"preload\",\n                key: file,\n                href: `${assetPrefix}/_next/${encodeURI(file)}${assetQueryString}`,\n                as: \"script\",\n                nonce: this.props.nonce,\n                crossOrigin: this.props.crossOrigin || crossOrigin\n            });\n        }) // Filter out nulled scripts\n        .filter(Boolean);\n    }\n    getPreloadMainLinks(files) {\n        const { assetPrefix, assetQueryString, scriptLoader, crossOrigin } = this.context;\n        const preloadFiles = files.allFiles.filter((file)=>{\n            return file.endsWith(\".js\");\n        });\n        return [\n            ...(scriptLoader.beforeInteractive || []).map((file)=>/*#__PURE__*/ _react.default.createElement(\"link\", {\n                    key: file.src,\n                    nonce: this.props.nonce,\n                    rel: \"preload\",\n                    href: file.src,\n                    as: \"script\",\n                    crossOrigin: this.props.crossOrigin || crossOrigin\n                })),\n            ...preloadFiles.map((file)=>/*#__PURE__*/ _react.default.createElement(\"link\", {\n                    key: file,\n                    nonce: this.props.nonce,\n                    rel: \"preload\",\n                    href: `${assetPrefix}/_next/${encodeURI(file)}${assetQueryString}`,\n                    as: \"script\",\n                    crossOrigin: this.props.crossOrigin || crossOrigin\n                }))\n        ];\n    }\n    getBeforeInteractiveInlineScripts() {\n        const { scriptLoader } = this.context;\n        const { nonce, crossOrigin } = this.props;\n        return (scriptLoader.beforeInteractive || []).filter((script)=>!script.src && (script.dangerouslySetInnerHTML || script.children)).map((file, index)=>{\n            const { strategy, children, dangerouslySetInnerHTML, src, ...scriptProps } = file;\n            let html = \"\";\n            if (dangerouslySetInnerHTML && dangerouslySetInnerHTML.__html) {\n                html = dangerouslySetInnerHTML.__html;\n            } else if (children) {\n                html = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n            }\n            return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                ...scriptProps,\n                dangerouslySetInnerHTML: {\n                    __html: html\n                },\n                key: scriptProps.id || index,\n                nonce: nonce,\n                \"data-nscript\": \"beforeInteractive\",\n                crossOrigin: crossOrigin || undefined\n            });\n        });\n    }\n    getDynamicChunks(files) {\n        return getDynamicChunks(this.context, this.props, files);\n    }\n    getPreNextScripts() {\n        return getPreNextScripts(this.context, this.props);\n    }\n    getScripts(files) {\n        return getScripts(this.context, this.props, files);\n    }\n    getPolyfillScripts() {\n        return getPolyfillScripts(this.context, this.props);\n    }\n    makeStylesheetInert(node) {\n        return _react.default.Children.map(node, (c)=>{\n            var _c_props, _c_props1;\n            if ((c == null ? void 0 : c.type) === \"link\" && (c == null ? void 0 : (_c_props = c.props) == null ? void 0 : _c_props.href) && _constants.OPTIMIZED_FONT_PROVIDERS.some(({ url })=>{\n                var _c_props, _c_props_href;\n                return c == null ? void 0 : (_c_props = c.props) == null ? void 0 : (_c_props_href = _c_props.href) == null ? void 0 : _c_props_href.startsWith(url);\n            })) {\n                const newProps = {\n                    ...c.props || {},\n                    \"data-href\": c.props.href,\n                    href: undefined\n                };\n                return /*#__PURE__*/ _react.default.cloneElement(c, newProps);\n            } else if (c == null ? void 0 : (_c_props1 = c.props) == null ? void 0 : _c_props1.children) {\n                const newProps = {\n                    ...c.props || {},\n                    children: this.makeStylesheetInert(c.props.children)\n                };\n                return /*#__PURE__*/ _react.default.cloneElement(c, newProps);\n            }\n            return c;\n        // @types/react bug. Returned value from .map will not be `null` if you pass in `[null]`\n        }).filter(Boolean);\n    }\n    render() {\n        const { styles, ampPath, inAmpMode, hybridAmp, canonicalBase, __NEXT_DATA__, dangerousAsPath, headTags, unstable_runtimeJS, unstable_JsPreload, disableOptimizedLoading, optimizeCss, optimizeFonts, assetPrefix, nextFontManifest } = this.context;\n        const disableRuntimeJS = unstable_runtimeJS === false;\n        const disableJsPreload = unstable_JsPreload === false || !disableOptimizedLoading;\n        this.context.docComponentsRendered.Head = true;\n        let { head } = this.context;\n        let cssPreloads = [];\n        let otherHeadElements = [];\n        if (head) {\n            head.forEach((c)=>{\n                let metaTag;\n                if (this.context.strictNextHead) {\n                    metaTag = /*#__PURE__*/ _react.default.createElement(\"meta\", {\n                        name: \"next-head\",\n                        content: \"1\"\n                    });\n                }\n                if (c && c.type === \"link\" && c.props[\"rel\"] === \"preload\" && c.props[\"as\"] === \"style\") {\n                    metaTag && cssPreloads.push(metaTag);\n                    cssPreloads.push(c);\n                } else {\n                    if (c) {\n                        if (metaTag && (c.type !== \"meta\" || !c.props[\"charSet\"])) {\n                            otherHeadElements.push(metaTag);\n                        }\n                        otherHeadElements.push(c);\n                    }\n                }\n            });\n            head = cssPreloads.concat(otherHeadElements);\n        }\n        let children = _react.default.Children.toArray(this.props.children).filter(Boolean);\n        // show a warning if Head contains <title> (only in development)\n        if (true) {\n            children = _react.default.Children.map(children, (child)=>{\n                var _child_props;\n                const isReactHelmet = child == null ? void 0 : (_child_props = child.props) == null ? void 0 : _child_props[\"data-react-helmet\"];\n                if (!isReactHelmet) {\n                    var _child_props1;\n                    if ((child == null ? void 0 : child.type) === \"title\") {\n                        console.warn(\"Warning: <title> should not be used in _document.js's <Head>. https://nextjs.org/docs/messages/no-document-title\");\n                    } else if ((child == null ? void 0 : child.type) === \"meta\" && (child == null ? void 0 : (_child_props1 = child.props) == null ? void 0 : _child_props1.name) === \"viewport\") {\n                        console.warn(\"Warning: viewport meta tags should not be used in _document.js's <Head>. https://nextjs.org/docs/messages/no-document-viewport-meta\");\n                    }\n                }\n                return child;\n            // @types/react bug. Returned value from .map will not be `null` if you pass in `[null]`\n            });\n            if (this.props.crossOrigin) console.warn(\"Warning: `Head` attribute `crossOrigin` is deprecated. https://nextjs.org/docs/messages/doc-crossorigin-deprecated\");\n        }\n        if (false) {}\n        let hasAmphtmlRel = false;\n        let hasCanonicalRel = false;\n        // show warning and remove conflicting amp head tags\n        head = _react.default.Children.map(head || [], (child)=>{\n            if (!child) return child;\n            const { type, props } = child;\n            if ( true && inAmpMode) {\n                let badProp = \"\";\n                if (type === \"meta\" && props.name === \"viewport\") {\n                    badProp = 'name=\"viewport\"';\n                } else if (type === \"link\" && props.rel === \"canonical\") {\n                    hasCanonicalRel = true;\n                } else if (type === \"script\") {\n                    // only block if\n                    // 1. it has a src and isn't pointing to ampproject's CDN\n                    // 2. it is using dangerouslySetInnerHTML without a type or\n                    // a type of text/javascript\n                    if (props.src && props.src.indexOf(\"ampproject\") < -1 || props.dangerouslySetInnerHTML && (!props.type || props.type === \"text/javascript\")) {\n                        badProp = \"<script\";\n                        Object.keys(props).forEach((prop)=>{\n                            badProp += ` ${prop}=\"${props[prop]}\"`;\n                        });\n                        badProp += \"/>\";\n                    }\n                }\n                if (badProp) {\n                    console.warn(`Found conflicting amp tag \"${child.type}\" with conflicting prop ${badProp} in ${__NEXT_DATA__.page}. https://nextjs.org/docs/messages/conflicting-amp-tag`);\n                    return null;\n                }\n            } else {\n                // non-amp mode\n                if (type === \"link\" && props.rel === \"amphtml\") {\n                    hasAmphtmlRel = true;\n                }\n            }\n            return child;\n        // @types/react bug. Returned value from .map will not be `null` if you pass in `[null]`\n        });\n        const files = getDocumentFiles(this.context.buildManifest, this.context.__NEXT_DATA__.page,  true && inAmpMode);\n        const nextFontLinkTags = getNextFontLinkTags(nextFontManifest, dangerousAsPath, assetPrefix);\n        return /*#__PURE__*/ _react.default.createElement(\"head\", getHeadHTMLProps(this.props), this.context.isDevelopment && /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"style\", {\n            \"data-next-hide-fouc\": true,\n            \"data-ampdevmode\":  true && inAmpMode ? \"true\" : undefined,\n            dangerouslySetInnerHTML: {\n                __html: `body{display:none}`\n            }\n        }), /*#__PURE__*/ _react.default.createElement(\"noscript\", {\n            \"data-next-hide-fouc\": true,\n            \"data-ampdevmode\":  true && inAmpMode ? \"true\" : undefined\n        }, /*#__PURE__*/ _react.default.createElement(\"style\", {\n            dangerouslySetInnerHTML: {\n                __html: `body{display:block}`\n            }\n        }))), head, this.context.strictNextHead ? null : /*#__PURE__*/ _react.default.createElement(\"meta\", {\n            name: \"next-head-count\",\n            content: _react.default.Children.count(head || []).toString()\n        }), children, optimizeFonts && /*#__PURE__*/ _react.default.createElement(\"meta\", {\n            name: \"next-font-preconnect\"\n        }), nextFontLinkTags.preconnect, nextFontLinkTags.preload,  true && inAmpMode && /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width,minimum-scale=1,initial-scale=1\"\n        }), !hasCanonicalRel && /*#__PURE__*/ _react.default.createElement(\"link\", {\n            rel: \"canonical\",\n            href: canonicalBase + (__webpack_require__(/*! ../server/utils */ \"../server/utils\").cleanAmpPath)(dangerousAsPath)\n        }), /*#__PURE__*/ _react.default.createElement(\"link\", {\n            rel: \"preload\",\n            as: \"script\",\n            href: \"https://cdn.ampproject.org/v0.js\"\n        }), /*#__PURE__*/ _react.default.createElement(AmpStyles, {\n            styles: styles\n        }), /*#__PURE__*/ _react.default.createElement(\"style\", {\n            \"amp-boilerplate\": \"\",\n            dangerouslySetInnerHTML: {\n                __html: `body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}`\n            }\n        }), /*#__PURE__*/ _react.default.createElement(\"noscript\", null, /*#__PURE__*/ _react.default.createElement(\"style\", {\n            \"amp-boilerplate\": \"\",\n            dangerouslySetInnerHTML: {\n                __html: `body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}`\n            }\n        })), /*#__PURE__*/ _react.default.createElement(\"script\", {\n            async: true,\n            src: \"https://cdn.ampproject.org/v0.js\"\n        })), !( true && inAmpMode) && /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, !hasAmphtmlRel && hybridAmp && /*#__PURE__*/ _react.default.createElement(\"link\", {\n            rel: \"amphtml\",\n            href: canonicalBase + getAmpPath(ampPath, dangerousAsPath)\n        }), this.getBeforeInteractiveInlineScripts(), !optimizeCss && this.getCssLinks(files), !optimizeCss && /*#__PURE__*/ _react.default.createElement(\"noscript\", {\n            \"data-n-css\": this.props.nonce ?? \"\"\n        }), !disableRuntimeJS && !disableJsPreload && this.getPreloadDynamicChunks(), !disableRuntimeJS && !disableJsPreload && this.getPreloadMainLinks(files), !disableOptimizedLoading && !disableRuntimeJS && this.getPolyfillScripts(), !disableOptimizedLoading && !disableRuntimeJS && this.getPreNextScripts(), !disableOptimizedLoading && !disableRuntimeJS && this.getDynamicChunks(files), !disableOptimizedLoading && !disableRuntimeJS && this.getScripts(files), optimizeCss && this.getCssLinks(files), optimizeCss && /*#__PURE__*/ _react.default.createElement(\"noscript\", {\n            \"data-n-css\": this.props.nonce ?? \"\"\n        }), this.context.isDevelopment && // this element is used to mount development styles so the\n        // ordering matches production\n        // (by default, style-loader injects at the bottom of <head />)\n        /*#__PURE__*/ _react.default.createElement(\"noscript\", {\n            id: \"__next_css__DO_NOT_USE__\"\n        }), styles || null), /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, {}, ...headTags || []));\n    }\n}\nfunction handleDocumentScriptLoaderItems(scriptLoader, __NEXT_DATA__, props) {\n    var _children_find, _children_find_props, _children_find1, _children_find_props1;\n    if (!props.children) return;\n    const scriptLoaderItems = [];\n    const children = Array.isArray(props.children) ? props.children : [\n        props.children\n    ];\n    const headChildren = (_children_find = children.find((child)=>child.type === Head)) == null ? void 0 : (_children_find_props = _children_find.props) == null ? void 0 : _children_find_props.children;\n    const bodyChildren = (_children_find1 = children.find((child)=>child.type === \"body\")) == null ? void 0 : (_children_find_props1 = _children_find1.props) == null ? void 0 : _children_find_props1.children;\n    // Scripts with beforeInteractive can be placed inside Head or <body> so children of both needs to be traversed\n    const combinedChildren = [\n        ...Array.isArray(headChildren) ? headChildren : [\n            headChildren\n        ],\n        ...Array.isArray(bodyChildren) ? bodyChildren : [\n            bodyChildren\n        ]\n    ];\n    _react.default.Children.forEach(combinedChildren, (child)=>{\n        var _child_type;\n        if (!child) return;\n        // When using the `next/script` component, register it in script loader.\n        if ((_child_type = child.type) == null ? void 0 : _child_type.__nextScript) {\n            if (child.props.strategy === \"beforeInteractive\") {\n                scriptLoader.beforeInteractive = (scriptLoader.beforeInteractive || []).concat([\n                    {\n                        ...child.props\n                    }\n                ]);\n                return;\n            } else if ([\n                \"lazyOnload\",\n                \"afterInteractive\",\n                \"worker\"\n            ].includes(child.props.strategy)) {\n                scriptLoaderItems.push(child.props);\n                return;\n            }\n        }\n    });\n    __NEXT_DATA__.scriptLoader = scriptLoaderItems;\n}\nclass NextScript extends _react.default.Component {\n    static #_ = (()=>{\n        this.contextType = _htmlcontext.HtmlContext;\n    })();\n    getDynamicChunks(files) {\n        return getDynamicChunks(this.context, this.props, files);\n    }\n    getPreNextScripts() {\n        return getPreNextScripts(this.context, this.props);\n    }\n    getScripts(files) {\n        return getScripts(this.context, this.props, files);\n    }\n    getPolyfillScripts() {\n        return getPolyfillScripts(this.context, this.props);\n    }\n    static getInlineScriptSource(context) {\n        const { __NEXT_DATA__, largePageDataBytes } = context;\n        try {\n            const data = JSON.stringify(__NEXT_DATA__);\n            if (largePageDataWarnings.has(__NEXT_DATA__.page)) {\n                return (0, _htmlescape.htmlEscapeJsonString)(data);\n            }\n            const bytes =  false ? 0 : Buffer.from(data).byteLength;\n            const prettyBytes = (__webpack_require__(/*! ../lib/pretty-bytes */ \"./node_modules/next/dist/lib/pretty-bytes.js\")[\"default\"]);\n            if (largePageDataBytes && bytes > largePageDataBytes) {\n                if (false) {}\n                console.warn(`Warning: data for page \"${__NEXT_DATA__.page}\"${__NEXT_DATA__.page === context.dangerousAsPath ? \"\" : ` (path \"${context.dangerousAsPath}\")`} is ${prettyBytes(bytes)} which exceeds the threshold of ${prettyBytes(largePageDataBytes)}, this amount of data can reduce performance.\\nSee more info here: https://nextjs.org/docs/messages/large-page-data`);\n            }\n            return (0, _htmlescape.htmlEscapeJsonString)(data);\n        } catch (err) {\n            if ((0, _iserror.default)(err) && err.message.indexOf(\"circular structure\") !== -1) {\n                throw new Error(`Circular structure in \"getInitialProps\" result of page \"${__NEXT_DATA__.page}\". https://nextjs.org/docs/messages/circular-structure`);\n            }\n            throw err;\n        }\n    }\n    render() {\n        const { assetPrefix, inAmpMode, buildManifest, unstable_runtimeJS, docComponentsRendered, assetQueryString, disableOptimizedLoading, crossOrigin } = this.context;\n        const disableRuntimeJS = unstable_runtimeJS === false;\n        docComponentsRendered.NextScript = true;\n        if ( true && inAmpMode) {\n            if (false) {}\n            const ampDevFiles = [\n                ...buildManifest.devFiles,\n                ...buildManifest.polyfillFiles,\n                ...buildManifest.ampDevFiles\n            ];\n            return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, disableRuntimeJS ? null : /*#__PURE__*/ _react.default.createElement(\"script\", {\n                id: \"__NEXT_DATA__\",\n                type: \"application/json\",\n                nonce: this.props.nonce,\n                crossOrigin: this.props.crossOrigin || crossOrigin,\n                dangerouslySetInnerHTML: {\n                    __html: NextScript.getInlineScriptSource(this.context)\n                },\n                \"data-ampdevmode\": true\n            }), ampDevFiles.map((file)=>/*#__PURE__*/ _react.default.createElement(\"script\", {\n                    key: file,\n                    src: `${assetPrefix}/_next/${file}${assetQueryString}`,\n                    nonce: this.props.nonce,\n                    crossOrigin: this.props.crossOrigin || crossOrigin,\n                    \"data-ampdevmode\": true\n                })));\n        }\n        if (true) {\n            if (this.props.crossOrigin) console.warn(\"Warning: `NextScript` attribute `crossOrigin` is deprecated. https://nextjs.org/docs/messages/doc-crossorigin-deprecated\");\n        }\n        const files = getDocumentFiles(this.context.buildManifest, this.context.__NEXT_DATA__.page,  true && inAmpMode);\n        return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, !disableRuntimeJS && buildManifest.devFiles ? buildManifest.devFiles.map((file)=>/*#__PURE__*/ _react.default.createElement(\"script\", {\n                key: file,\n                src: `${assetPrefix}/_next/${encodeURI(file)}${assetQueryString}`,\n                nonce: this.props.nonce,\n                crossOrigin: this.props.crossOrigin || crossOrigin\n            })) : null, disableRuntimeJS ? null : /*#__PURE__*/ _react.default.createElement(\"script\", {\n            id: \"__NEXT_DATA__\",\n            type: \"application/json\",\n            nonce: this.props.nonce,\n            crossOrigin: this.props.crossOrigin || crossOrigin,\n            dangerouslySetInnerHTML: {\n                __html: NextScript.getInlineScriptSource(this.context)\n            }\n        }), disableOptimizedLoading && !disableRuntimeJS && this.getPolyfillScripts(), disableOptimizedLoading && !disableRuntimeJS && this.getPreNextScripts(), disableOptimizedLoading && !disableRuntimeJS && this.getDynamicChunks(files), disableOptimizedLoading && !disableRuntimeJS && this.getScripts(files));\n    }\n}\nfunction Html(props) {\n    const { inAmpMode, docComponentsRendered, locale, scriptLoader, __NEXT_DATA__ } = (0, _htmlcontext.useHtmlContext)();\n    docComponentsRendered.Html = true;\n    handleDocumentScriptLoaderItems(scriptLoader, __NEXT_DATA__, props);\n    return /*#__PURE__*/ _react.default.createElement(\"html\", {\n        ...props,\n        lang: props.lang || locale || undefined,\n        amp:  true && inAmpMode ? \"\" : undefined,\n        \"data-ampdevmode\":  true && inAmpMode && \"development\" !== \"production\" ? \"\" : undefined\n    });\n}\nfunction Main() {\n    const { docComponentsRendered } = (0, _htmlcontext.useHtmlContext)();\n    docComponentsRendered.Main = true;\n    // @ts-ignore\n    return /*#__PURE__*/ _react.default.createElement(\"next-js-internal-body-render-target\", null);\n}\nclass Document extends _react.default.Component {\n    /**\n   * `getInitialProps` hook returns the context object with the addition of `renderPage`.\n   * `renderPage` callback executes `React` rendering logic synchronously to support server-rendering wrappers\n   */ static getInitialProps(ctx) {\n        return ctx.defaultGetInitialProps(ctx);\n    }\n    render() {\n        return /*#__PURE__*/ _react.default.createElement(Html, null, /*#__PURE__*/ _react.default.createElement(Head, null), /*#__PURE__*/ _react.default.createElement(\"body\", null, /*#__PURE__*/ _react.default.createElement(Main, null), /*#__PURE__*/ _react.default.createElement(NextScript, null)));\n    }\n}\n// Add a special property to the built-in `Document` component so later we can\n// identify if a user customized `Document` is used or not.\nconst InternalFunctionDocument = function InternalFunctionDocument() {\n    return /*#__PURE__*/ _react.default.createElement(Html, null, /*#__PURE__*/ _react.default.createElement(Head, null), /*#__PURE__*/ _react.default.createElement(\"body\", null, /*#__PURE__*/ _react.default.createElement(Main, null), /*#__PURE__*/ _react.default.createElement(NextScript, null)));\n};\nDocument[_constants.NEXT_BUILTIN_DOCUMENT] = InternalFunctionDocument; //# sourceMappingURL=_document.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3BhZ2VzL19kb2N1bWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQU1OO0FBQ0EsU0FBU00sUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVosT0FBT0MsY0FBYyxDQUFDVSxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFSLFNBQVM7SUFDYkcsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsWUFBWTtRQUNSLE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQTs7O0NBR0gsR0FBR0MsU0FBUztRQUNMLE9BQU9PO0lBQ1g7QUFDSjtBQUNBLE1BQU1DLFNBQVMsV0FBVyxHQUFHQyx5QkFBeUJDLG1CQUFPQSxDQUFDLG9CQUFPO0FBQ3JFLE1BQU1DLGFBQWFELG1CQUFPQSxDQUFDLHdEQUF5QjtBQUNwRCxNQUFNRSxnQkFBZ0JGLG1CQUFPQSxDQUFDLDBEQUEwQjtBQUN4RCxNQUFNRyxjQUFjSCxtQkFBT0EsQ0FBQyxrREFBc0I7QUFDbEQsTUFBTUksV0FBVyxXQUFXLEdBQUdMLHlCQUF5QkMsbUJBQU9BLENBQUMsaUVBQWlCO0FBQ2pGLE1BQU1LLGVBQWVMLG1CQUFPQSxDQUFDLDhEQUE0QjtBQUN6RCxTQUFTRCx5QkFBeUJPLEdBQUc7SUFDakMsT0FBT0EsT0FBT0EsSUFBSUMsVUFBVSxHQUFHRCxNQUFNO1FBQ2pDaEIsU0FBU2dCO0lBQ2I7QUFDSjtBQUNBLDhFQUE4RSxHQUFHLE1BQU1FLHdCQUF3QixJQUFJQztBQUNuSCxTQUFTQyxpQkFBaUJDLGFBQWEsRUFBRUMsUUFBUSxFQUFFQyxTQUFTO0lBQ3hELE1BQU1DLGNB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LEdBQUdELDBCQUU3QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLWFwcC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvcGFnZXMvX2RvY3VtZW50LmpzPzNiOGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBIZWFkOiBudWxsLFxuICAgIE5leHRTY3JpcHQ6IG51bGwsXG4gICAgSHRtbDogbnVsbCxcbiAgICBNYWluOiBudWxsLFxuICAgIGRlZmF1bHQ6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgSGVhZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBIZWFkO1xuICAgIH0sXG4gICAgTmV4dFNjcmlwdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBOZXh0U2NyaXB0O1xuICAgIH0sXG4gICAgSHRtbDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBIdG1sO1xuICAgIH0sXG4gICAgTWFpbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBNYWluO1xuICAgIH0sXG4gICAgLyoqXG4gKiBgRG9jdW1lbnRgIGNvbXBvbmVudCBoYW5kbGVzIHRoZSBpbml0aWFsIGBkb2N1bWVudGAgbWFya3VwIGFuZCByZW5kZXJzIG9ubHkgb24gdGhlIHNlcnZlciBzaWRlLlxuICogQ29tbW9ubHkgdXNlZCBmb3IgaW1wbGVtZW50aW5nIHNlcnZlciBzaWRlIHJlbmRlcmluZyBmb3IgYGNzcy1pbi1qc2AgbGlicmFyaWVzLlxuICovIGRlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRG9jdW1lbnQ7XG4gICAgfVxufSk7XG5jb25zdCBfcmVhY3QgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpO1xuY29uc3QgX2NvbnN0YW50cyA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL2NvbnN0YW50c1wiKTtcbmNvbnN0IF9nZXRwYWdlZmlsZXMgPSByZXF1aXJlKFwiLi4vc2VydmVyL2dldC1wYWdlLWZpbGVzXCIpO1xuY29uc3QgX2h0bWxlc2NhcGUgPSByZXF1aXJlKFwiLi4vc2VydmVyL2h0bWxlc2NhcGVcIik7XG5jb25zdCBfaXNlcnJvciA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0KHJlcXVpcmUoXCIuLi9saWIvaXMtZXJyb3JcIikpO1xuY29uc3QgX2h0bWxjb250ZXh0ID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvaHRtbC1jb250ZXh0XCIpO1xuZnVuY3Rpb24gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG4vKiogU2V0IG9mIHBhZ2VzIHRoYXQgaGF2ZSB0cmlnZ2VyZWQgYSBsYXJnZSBkYXRhIHdhcm5pbmcgb24gcHJvZHVjdGlvbiBtb2RlLiAqLyBjb25zdCBsYXJnZVBhZ2VEYXRhV2FybmluZ3MgPSBuZXcgU2V0KCk7XG5mdW5jdGlvbiBnZXREb2N1bWVudEZpbGVzKGJ1aWxkTWFuaWZlc3QsIHBhdGhuYW1lLCBpbkFtcE1vZGUpIHtcbiAgICBjb25zdCBzaGFyZWRGaWxlcyA9ICgwLCBfZ2V0cGFnZWZpbGVzLmdldFBhZ2VGaWxlcykoYnVpbGRNYW5pZmVzdCwgXCIvX2FwcFwiKTtcbiAgICBjb25zdCBwYWdlRmlsZXMgPSBwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiICYmIGluQW1wTW9kZSA/IFtdIDogKDAsIF9nZXRwYWdlZmlsZXMuZ2V0UGFnZUZpbGVzKShidWlsZE1hbmlmZXN0LCBwYXRobmFtZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2hhcmVkRmlsZXMsXG4gICAgICAgIHBhZ2VGaWxlcyxcbiAgICAgICAgYWxsRmlsZXM6IFtcbiAgICAgICAgICAgIC4uLm5ldyBTZXQoW1xuICAgICAgICAgICAgICAgIC4uLnNoYXJlZEZpbGVzLFxuICAgICAgICAgICAgICAgIC4uLnBhZ2VGaWxlc1xuICAgICAgICAgICAgXSlcbiAgICAgICAgXVxuICAgIH07XG59XG5mdW5jdGlvbiBnZXRQb2x5ZmlsbFNjcmlwdHMoY29udGV4dCwgcHJvcHMpIHtcbiAgICAvLyBwb2x5ZmlsbHMuanMgaGFzIHRvIGJlIHJlbmRlcmVkIGFzIG5vbW9kdWxlIHdpdGhvdXQgYXN5bmNcbiAgICAvLyBJdCBhbHNvIGhhcyB0byBiZSB0aGUgZmlyc3Qgc2NyaXB0IHRvIGxvYWRcbiAgICBjb25zdCB7IGFzc2V0UHJlZml4ICwgYnVpbGRNYW5pZmVzdCAsIGFzc2V0UXVlcnlTdHJpbmcgLCBkaXNhYmxlT3B0aW1pemVkTG9hZGluZyAsIGNyb3NzT3JpZ2luICB9ID0gY29udGV4dDtcbiAgICByZXR1cm4gYnVpbGRNYW5pZmVzdC5wb2x5ZmlsbEZpbGVzLmZpbHRlcigocG9seWZpbGwpPT5wb2x5ZmlsbC5lbmRzV2l0aChcIi5qc1wiKSAmJiAhcG9seWZpbGwuZW5kc1dpdGgoXCIubW9kdWxlLmpzXCIpKS5tYXAoKHBvbHlmaWxsKT0+LyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIsIHtcbiAgICAgICAgICAgIGtleTogcG9seWZpbGwsXG4gICAgICAgICAgICBkZWZlcjogIWRpc2FibGVPcHRpbWl6ZWRMb2FkaW5nLFxuICAgICAgICAgICAgbm9uY2U6IHByb3BzLm5vbmNlLFxuICAgICAgICAgICAgY3Jvc3NPcmlnaW46IHByb3BzLmNyb3NzT3JpZ2luIHx8IGNyb3NzT3JpZ2luLFxuICAgICAgICAgICAgbm9Nb2R1bGU6IHRydWUsXG4gICAgICAgICAgICBzcmM6IGAke2Fzc2V0UHJlZml4fS9fbmV4dC8ke3BvbHlmaWxsfSR7YXNzZXRRdWVyeVN0cmluZ31gXG4gICAgICAgIH0pKTtcbn1cbmZ1bmN0aW9uIGhhc0NvbXBvbmVudFByb3BzKGNoaWxkKSB7XG4gICAgcmV0dXJuICEhY2hpbGQgJiYgISFjaGlsZC5wcm9wcztcbn1cbmZ1bmN0aW9uIEFtcFN0eWxlcyh7IHN0eWxlcyAgfSkge1xuICAgIGlmICghc3R5bGVzKSByZXR1cm4gbnVsbDtcbiAgICAvLyB0cnkgdG8gcGFyc2Ugc3R5bGVzIGZyb20gZnJhZ21lbnQgZm9yIGJhY2t3YXJkcyBjb21wYXRcbiAgICBjb25zdCBjdXJTdHlsZXMgPSBBcnJheS5pc0FycmF5KHN0eWxlcykgPyBzdHlsZXMgOiBbXTtcbiAgICBpZiAoLy8gQHRzLWlnbm9yZSBQcm9wZXJ0eSAncHJvcHMnIGRvZXMgbm90IGV4aXN0IG9uIHR5cGUgUmVhY3RFbGVtZW50XG4gICAgc3R5bGVzLnByb3BzICYmIC8vIEB0cy1pZ25vcmUgUHJvcGVydHkgJ3Byb3BzJyBkb2VzIG5vdCBleGlzdCBvbiB0eXBlIFJlYWN0RWxlbWVudFxuICAgIEFycmF5LmlzQXJyYXkoc3R5bGVzLnByb3BzLmNoaWxkcmVuKSkge1xuICAgICAgICBjb25zdCBoYXNTdHlsZXMgPSAoZWwpPT57XG4gICAgICAgICAgICB2YXIgX2VsX3Byb3BzLCBfZWxfcHJvcHNfZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw7XG4gICAgICAgICAgICByZXR1cm4gZWwgPT0gbnVsbCA/IHZvaWQgMCA6IChfZWxfcHJvcHMgPSBlbC5wcm9wcykgPT0gbnVsbCA/IHZvaWQgMCA6IChfZWxfcHJvcHNfZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgPSBfZWxfcHJvcHMuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpID09IG51bGwgPyB2b2lkIDAgOiBfZWxfcHJvcHNfZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sO1xuICAgICAgICB9O1xuICAgICAgICAvLyBAdHMtaWdub3JlIFByb3BlcnR5ICdwcm9wcycgZG9lcyBub3QgZXhpc3Qgb24gdHlwZSBSZWFjdEVsZW1lbnRcbiAgICAgICAgc3R5bGVzLnByb3BzLmNoaWxkcmVuLmZvckVhY2goKGNoaWxkKT0+e1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQuZm9yRWFjaCgoZWwpPT5oYXNTdHlsZXMoZWwpICYmIGN1clN0eWxlcy5wdXNoKGVsKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGhhc1N0eWxlcyhjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICBjdXJTdHlsZXMucHVzaChjaGlsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiBBZGQgY3VzdG9tIHN0eWxlcyBiZWZvcmUgQU1QIHN0eWxlcyB0byBwcmV2ZW50IGFjY2lkZW50YWwgb3ZlcnJpZGVzICovIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiLCB7XG4gICAgICAgIFwiYW1wLWN1c3RvbVwiOiBcIlwiLFxuICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgX19odG1sOiBjdXJTdHlsZXMubWFwKChzdHlsZSk9PnN0eWxlLnByb3BzLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbCkuam9pbihcIlwiKS5yZXBsYWNlKC9cXC9cXCojIHNvdXJjZU1hcHBpbmdVUkw9LipcXCpcXC8vZywgXCJcIikucmVwbGFjZSgvXFwvXFwqQCBzb3VyY2VVUkw9Lio/XFwqXFwvL2csIFwiXCIpXG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldER5bmFtaWNDaHVua3MoY29udGV4dCwgcHJvcHMsIGZpbGVzKSB7XG4gICAgY29uc3QgeyBkeW5hbWljSW1wb3J0cyAsIGFzc2V0UHJlZml4ICwgaXNEZXZlbG9wbWVudCAsIGFzc2V0UXVlcnlTdHJpbmcgLCBkaXNhYmxlT3B0aW1pemVkTG9hZGluZyAsIGNyb3NzT3JpZ2luICB9ID0gY29udGV4dDtcbiAgICByZXR1cm4gZHluYW1pY0ltcG9ydHMubWFwKChmaWxlKT0+e1xuICAgICAgICBpZiAoIWZpbGUuZW5kc1dpdGgoXCIuanNcIikgfHwgZmlsZXMuYWxsRmlsZXMuaW5jbHVkZXMoZmlsZSkpIHJldHVybiBudWxsO1xuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIsIHtcbiAgICAgICAgICAgIGFzeW5jOiAhaXNEZXZlbG9wbWVudCAmJiBkaXNhYmxlT3B0aW1pemVkTG9hZGluZyxcbiAgICAgICAgICAgIGRlZmVyOiAhZGlzYWJsZU9wdGltaXplZExvYWRpbmcsXG4gICAgICAgICAgICBrZXk6IGZpbGUsXG4gICAgICAgICAgICBzcmM6IGAke2Fzc2V0UHJlZml4fS9fbmV4dC8ke2VuY29kZVVSSShmaWxlKX0ke2Fzc2V0UXVlcnlTdHJpbmd9YCxcbiAgICAgICAgICAgIG5vbmNlOiBwcm9wcy5ub25jZSxcbiAgICAgICAgICAgIGNyb3NzT3JpZ2luOiBwcm9wcy5jcm9zc09yaWdpbiB8fCBjcm9zc09yaWdpblxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldFNjcmlwdHMoY29udGV4dCwgcHJvcHMsIGZpbGVzKSB7XG4gICAgdmFyIF9idWlsZE1hbmlmZXN0X2xvd1ByaW9yaXR5RmlsZXM7XG4gICAgY29uc3QgeyBhc3NldFByZWZpeCAsIGJ1aWxkTWFuaWZlc3QgLCBpc0RldmVsb3BtZW50ICwgYXNzZXRRdWVyeVN0cmluZyAsIGRpc2FibGVPcHRpbWl6ZWRMb2FkaW5nICwgY3Jvc3NPcmlnaW4gIH0gPSBjb250ZXh0O1xuICAgIGNvbnN0IG5vcm1hbFNjcmlwdHMgPSBmaWxlcy5hbGxGaWxlcy5maWx0ZXIoKGZpbGUpPT5maWxlLmVuZHNXaXRoKFwiLmpzXCIpKTtcbiAgICBjb25zdCBsb3dQcmlvcml0eVNjcmlwdHMgPSAoX2J1aWxkTWFuaWZlc3RfbG93UHJpb3JpdHlGaWxlcyA9IGJ1aWxkTWFuaWZlc3QubG93UHJpb3JpdHlGaWxlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9idWlsZE1hbmlmZXN0X2xvd1ByaW9yaXR5RmlsZXMuZmlsdGVyKChmaWxlKT0+ZmlsZS5lbmRzV2l0aChcIi5qc1wiKSk7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgLi4ubm9ybWFsU2NyaXB0cyxcbiAgICAgICAgLi4ubG93UHJpb3JpdHlTY3JpcHRzXG4gICAgXS5tYXAoKGZpbGUpPT57XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiwge1xuICAgICAgICAgICAga2V5OiBmaWxlLFxuICAgICAgICAgICAgc3JjOiBgJHthc3NldFByZWZpeH0vX25leHQvJHtlbmNvZGVVUkkoZmlsZSl9JHthc3NldFF1ZXJ5U3RyaW5nfWAsXG4gICAgICAgICAgICBub25jZTogcHJvcHMubm9uY2UsXG4gICAgICAgICAgICBhc3luYzogIWlzRGV2ZWxvcG1lbnQgJiYgZGlzYWJsZU9wdGltaXplZExvYWRpbmcsXG4gICAgICAgICAgICBkZWZlcjogIWRpc2FibGVPcHRpbWl6ZWRMb2FkaW5nLFxuICAgICAgICAgICAgY3Jvc3NPcmlnaW46IHByb3BzLmNyb3NzT3JpZ2luIHx8IGNyb3NzT3JpZ2luXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0UHJlTmV4dFdvcmtlclNjcmlwdHMoY29udGV4dCwgcHJvcHMpIHtcbiAgICBjb25zdCB7IGFzc2V0UHJlZml4ICwgc2NyaXB0TG9hZGVyICwgY3Jvc3NPcmlnaW4gLCBuZXh0U2NyaXB0V29ya2VycyAgfSA9IGNvbnRleHQ7XG4gICAgLy8gZGlzYWJsZSBgbmV4dFNjcmlwdFdvcmtlcnNgIGluIGVkZ2UgcnVudGltZVxuICAgIGlmICghbmV4dFNjcmlwdFdvcmtlcnMgfHwgcHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FID09PSBcImVkZ2VcIikgcmV0dXJuIG51bGw7XG4gICAgdHJ5IHtcbiAgICAgICAgbGV0IHsgcGFydHl0b3duU25pcHBldCAgfSA9IF9fbm9uX3dlYnBhY2tfcmVxdWlyZV9fKFwiQGJ1aWxkZXIuaW8vcGFydHl0b3duL2ludGVncmF0aW9uXCIpO1xuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IEFycmF5LmlzQXJyYXkocHJvcHMuY2hpbGRyZW4pID8gcHJvcHMuY2hpbGRyZW4gOiBbXG4gICAgICAgICAgICBwcm9wcy5jaGlsZHJlblxuICAgICAgICBdO1xuICAgICAgICAvLyBDaGVjayB0byBzZWUgaWYgdGhlIHVzZXIgaGFzIGRlZmluZWQgdGhlaXIgb3duIFBhcnR5dG93biBjb25maWd1cmF0aW9uXG4gICAgICAgIGNvbnN0IHVzZXJEZWZpbmVkQ29uZmlnID0gY2hpbGRyZW4uZmluZCgoY2hpbGQpPT57XG4gICAgICAgICAgICB2YXIgX2NoaWxkX3Byb3BzLCBfY2hpbGRfcHJvcHNfZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw7XG4gICAgICAgICAgICByZXR1cm4gaGFzQ29tcG9uZW50UHJvcHMoY2hpbGQpICYmIChjaGlsZCA9PSBudWxsID8gdm9pZCAwIDogKF9jaGlsZF9wcm9wcyA9IGNoaWxkLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogKF9jaGlsZF9wcm9wc19kYW5nZXJvdXNseVNldElubmVySFRNTCA9IF9jaGlsZF9wcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jaGlsZF9wcm9wc19kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWwubGVuZ3RoKSAmJiBcImRhdGEtcGFydHl0b3duLWNvbmZpZ1wiIGluIGNoaWxkLnByb3BzO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgIXVzZXJEZWZpbmVkQ29uZmlnICYmIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICBcImRhdGEtcGFydHl0b3duLWNvbmZpZ1wiOiBcIlwiLFxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgICAgICBfX2h0bWw6IGBcbiAgICAgICAgICAgIHBhcnR5dG93biA9IHtcbiAgICAgICAgICAgICAgbGliOiBcIiR7YXNzZXRQcmVmaXh9L19uZXh0L3N0YXRpYy9+cGFydHl0b3duL1wiXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSksIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICBcImRhdGEtcGFydHl0b3duXCI6IFwiXCIsXG4gICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgIF9faHRtbDogcGFydHl0b3duU25pcHBldCgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCAoc2NyaXB0TG9hZGVyLndvcmtlciB8fCBbXSkubWFwKChmaWxlLCBpbmRleCk9PntcbiAgICAgICAgICAgIGNvbnN0IHsgc3RyYXRlZ3kgLCBzcmMgLCBjaGlsZHJlbjogc2NyaXB0Q2hpbGRyZW4gLCBkYW5nZXJvdXNseVNldElubmVySFRNTCAsIC4uLnNjcmlwdFByb3BzIH0gPSBmaWxlO1xuICAgICAgICAgICAgbGV0IHNyY1Byb3BzID0ge307XG4gICAgICAgICAgICBpZiAoc3JjKSB7XG4gICAgICAgICAgICAgICAgLy8gVXNlIGV4dGVybmFsIHNyYyBpZiBwcm92aWRlZFxuICAgICAgICAgICAgICAgIHNyY1Byb3BzLnNyYyA9IHNyYztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgJiYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sKSB7XG4gICAgICAgICAgICAgICAgLy8gRW1iZWQgaW5saW5lIHNjcmlwdCBpZiBwcm92aWRlZCB3aXRoIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXG4gICAgICAgICAgICAgICAgc3JjUHJvcHMuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgPSB7XG4gICAgICAgICAgICAgICAgICAgIF9faHRtbDogZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2NyaXB0Q2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAvLyBFbWJlZCBpbmxpbmUgc2NyaXB0IGlmIHByb3ZpZGVkIHdpdGggY2hpbGRyZW5cbiAgICAgICAgICAgICAgICBzcmNQcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTCA9IHtcbiAgICAgICAgICAgICAgICAgICAgX19odG1sOiB0eXBlb2Ygc2NyaXB0Q2hpbGRyZW4gPT09IFwic3RyaW5nXCIgPyBzY3JpcHRDaGlsZHJlbiA6IEFycmF5LmlzQXJyYXkoc2NyaXB0Q2hpbGRyZW4pID8gc2NyaXB0Q2hpbGRyZW4uam9pbihcIlwiKSA6IFwiXCJcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHVzYWdlIG9mIG5leHQvc2NyaXB0LiBEaWQgeW91IGZvcmdldCB0byBpbmNsdWRlIGEgc3JjIGF0dHJpYnV0ZSBvciBhbiBpbmxpbmUgc2NyaXB0PyBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9pbnZhbGlkLXNjcmlwdFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiwge1xuICAgICAgICAgICAgICAgIC4uLnNyY1Byb3BzLFxuICAgICAgICAgICAgICAgIC4uLnNjcmlwdFByb3BzLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dC9wYXJ0eXRvd25cIixcbiAgICAgICAgICAgICAgICBrZXk6IHNyYyB8fCBpbmRleCxcbiAgICAgICAgICAgICAgICBub25jZTogcHJvcHMubm9uY2UsXG4gICAgICAgICAgICAgICAgXCJkYXRhLW5zY3JpcHRcIjogXCJ3b3JrZXJcIixcbiAgICAgICAgICAgICAgICBjcm9zc09yaWdpbjogcHJvcHMuY3Jvc3NPcmlnaW4gfHwgY3Jvc3NPcmlnaW5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmICgoMCwgX2lzZXJyb3IuZGVmYXVsdCkoZXJyKSAmJiBlcnIuY29kZSAhPT0gXCJNT0RVTEVfTk9UX0ZPVU5EXCIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgV2FybmluZzogJHtlcnIubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRQcmVOZXh0U2NyaXB0cyhjb250ZXh0LCBwcm9wcykge1xuICAgIGNvbnN0IHsgc2NyaXB0TG9hZGVyICwgZGlzYWJsZU9wdGltaXplZExvYWRpbmcgLCBjcm9zc09yaWdpbiAgfSA9IGNvbnRleHQ7XG4gICAgY29uc3Qgd2ViV29ya2VyU2NyaXB0cyA9IGdldFByZU5leHRXb3JrZXJTY3JpcHRzKGNvbnRleHQsIHByb3BzKTtcbiAgICBjb25zdCBiZWZvcmVJbnRlcmFjdGl2ZVNjcmlwdHMgPSAoc2NyaXB0TG9hZGVyLmJlZm9yZUludGVyYWN0aXZlIHx8IFtdKS5maWx0ZXIoKHNjcmlwdCk9PnNjcmlwdC5zcmMpLm1hcCgoZmlsZSwgaW5kZXgpPT57XG4gICAgICAgIGNvbnN0IHsgc3RyYXRlZ3kgLCAuLi5zY3JpcHRQcm9wcyB9ID0gZmlsZTtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICAuLi5zY3JpcHRQcm9wcyxcbiAgICAgICAgICAgIGtleTogc2NyaXB0UHJvcHMuc3JjIHx8IGluZGV4LFxuICAgICAgICAgICAgZGVmZXI6IHNjcmlwdFByb3BzLmRlZmVyID8/ICFkaXNhYmxlT3B0aW1pemVkTG9hZGluZyxcbiAgICAgICAgICAgIG5vbmNlOiBwcm9wcy5ub25jZSxcbiAgICAgICAgICAgIFwiZGF0YS1uc2NyaXB0XCI6IFwiYmVmb3JlSW50ZXJhY3RpdmVcIixcbiAgICAgICAgICAgIGNyb3NzT3JpZ2luOiBwcm9wcy5jcm9zc09yaWdpbiB8fCBjcm9zc09yaWdpblxuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCB3ZWJXb3JrZXJTY3JpcHRzLCBiZWZvcmVJbnRlcmFjdGl2ZVNjcmlwdHMpO1xufVxuZnVuY3Rpb24gZ2V0SGVhZEhUTUxQcm9wcyhwcm9wcykge1xuICAgIGNvbnN0IHsgY3Jvc3NPcmlnaW4gLCBub25jZSAsIC4uLnJlc3RQcm9wcyB9ID0gcHJvcHM7XG4gICAgLy8gVGhpcyBhc3NpZ25tZW50IGlzIG5lY2Vzc2FyeSBmb3IgYWRkaXRpb25hbCB0eXBlIGNoZWNraW5nIHRvIGF2b2lkIHVuc3VwcG9ydGVkIGF0dHJpYnV0ZXMgaW4gPGhlYWQ+XG4gICAgY29uc3QgaGVhZFByb3BzID0gcmVzdFByb3BzO1xuICAgIHJldHVybiBoZWFkUHJvcHM7XG59XG5mdW5jdGlvbiBnZXRBbXBQYXRoKGFtcFBhdGgsIGFzUGF0aCkge1xuICAgIHJldHVybiBhbXBQYXRoIHx8IGAke2FzUGF0aH0ke2FzUGF0aC5pbmNsdWRlcyhcIj9cIikgPyBcIiZcIiA6IFwiP1wifWFtcD0xYDtcbn1cbmZ1bmN0aW9uIGdldE5leHRGb250TGlua1RhZ3MobmV4dEZvbnRNYW5pZmVzdCwgZGFuZ2Vyb3VzQXNQYXRoLCBhc3NldFByZWZpeCA9IFwiXCIpIHtcbiAgICBpZiAoIW5leHRGb250TWFuaWZlc3QpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHByZWNvbm5lY3Q6IG51bGwsXG4gICAgICAgICAgICBwcmVsb2FkOiBudWxsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IGFwcEZvbnRzRW50cnkgPSBuZXh0Rm9udE1hbmlmZXN0LnBhZ2VzW1wiL19hcHBcIl07XG4gICAgY29uc3QgcGFnZUZvbnRzRW50cnkgPSBuZXh0Rm9udE1hbmlmZXN0LnBhZ2VzW2Rhbmdlcm91c0FzUGF0aF07XG4gICAgY29uc3QgcHJlbG9hZGVkRm9udEZpbGVzID0gW1xuICAgICAgICAuLi5hcHBGb250c0VudHJ5ID8/IFtdLFxuICAgICAgICAuLi5wYWdlRm9udHNFbnRyeSA/PyBbXVxuICAgIF07XG4gICAgLy8gSWYgbm8gZm9udCBmaWxlcyBzaG91bGQgcHJlbG9hZCBidXQgdGhlcmUncyBhbiBlbnRyeSBmb3IgdGhlIHBhdGgsIGFkZCBhIHByZWNvbm5lY3QgdGFnLlxuICAgIGNvbnN0IHByZWNvbm5lY3RUb1NlbGYgPSAhIShwcmVsb2FkZWRGb250RmlsZXMubGVuZ3RoID09PSAwICYmIChhcHBGb250c0VudHJ5IHx8IHBhZ2VGb250c0VudHJ5KSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJlY29ubmVjdDogcHJlY29ubmVjdFRvU2VsZiA/IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImxpbmtcIiwge1xuICAgICAgICAgICAgXCJkYXRhLW5leHQtZm9udFwiOiBuZXh0Rm9udE1hbmlmZXN0LnBhZ2VzVXNpbmdTaXplQWRqdXN0ID8gXCJzaXplLWFkanVzdFwiIDogXCJcIixcbiAgICAgICAgICAgIHJlbDogXCJwcmVjb25uZWN0XCIsXG4gICAgICAgICAgICBocmVmOiBcIi9cIixcbiAgICAgICAgICAgIGNyb3NzT3JpZ2luOiBcImFub255bW91c1wiXG4gICAgICAgIH0pIDogbnVsbCxcbiAgICAgICAgcHJlbG9hZDogcHJlbG9hZGVkRm9udEZpbGVzID8gcHJlbG9hZGVkRm9udEZpbGVzLm1hcCgoZm9udEZpbGUpPT57XG4gICAgICAgICAgICBjb25zdCBleHQgPSAvXFwuKHdvZmZ8d29mZjJ8ZW90fHR0ZnxvdGYpJC8uZXhlYyhmb250RmlsZSlbMV07XG4gICAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XG4gICAgICAgICAgICAgICAga2V5OiBmb250RmlsZSxcbiAgICAgICAgICAgICAgICByZWw6IFwicHJlbG9hZFwiLFxuICAgICAgICAgICAgICAgIGhyZWY6IGAke2Fzc2V0UHJlZml4fS9fbmV4dC8ke2VuY29kZVVSSShmb250RmlsZSl9YCxcbiAgICAgICAgICAgICAgICBhczogXCJmb250XCIsXG4gICAgICAgICAgICAgICAgdHlwZTogYGZvbnQvJHtleHR9YCxcbiAgICAgICAgICAgICAgICBjcm9zc09yaWdpbjogXCJhbm9ueW1vdXNcIixcbiAgICAgICAgICAgICAgICBcImRhdGEtbmV4dC1mb250XCI6IGZvbnRGaWxlLmluY2x1ZGVzKFwiLXNcIikgPyBcInNpemUtYWRqdXN0XCIgOiBcIlwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkgOiBudWxsXG4gICAgfTtcbn1cbmNsYXNzIEhlYWQgZXh0ZW5kcyBfcmVhY3QuZGVmYXVsdC5Db21wb25lbnQge1xuICAgIHN0YXRpYyAjXyA9ICgoKT0+e1xuICAgICAgICB0aGlzLmNvbnRleHRUeXBlID0gX2h0bWxjb250ZXh0Lkh0bWxDb250ZXh0O1xuICAgIH0pKCk7XG4gICAgZ2V0Q3NzTGlua3MoZmlsZXMpIHtcbiAgICAgICAgY29uc3QgeyBhc3NldFByZWZpeCAsIGFzc2V0UXVlcnlTdHJpbmcgLCBkeW5hbWljSW1wb3J0cyAsIGNyb3NzT3JpZ2luICwgb3B0aW1pemVDc3MgLCBvcHRpbWl6ZUZvbnRzICB9ID0gdGhpcy5jb250ZXh0O1xuICAgICAgICBjb25zdCBjc3NGaWxlcyA9IGZpbGVzLmFsbEZpbGVzLmZpbHRlcigoZik9PmYuZW5kc1dpdGgoXCIuY3NzXCIpKTtcbiAgICAgICAgY29uc3Qgc2hhcmVkRmlsZXMgPSBuZXcgU2V0KGZpbGVzLnNoYXJlZEZpbGVzKTtcbiAgICAgICAgLy8gVW5tYW5hZ2VkIGZpbGVzIGFyZSBDU1MgZmlsZXMgdGhhdCB3aWxsIGJlIGhhbmRsZWQgZGlyZWN0bHkgYnkgdGhlXG4gICAgICAgIC8vIHdlYnBhY2sgcnVudGltZSAoYG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luYCkuXG4gICAgICAgIGxldCB1bm1hbmdlZEZpbGVzID0gbmV3IFNldChbXSk7XG4gICAgICAgIGxldCBkeW5hbWljQ3NzRmlsZXMgPSBBcnJheS5mcm9tKG5ldyBTZXQoZHluYW1pY0ltcG9ydHMuZmlsdGVyKChmaWxlKT0+ZmlsZS5lbmRzV2l0aChcIi5jc3NcIikpKSk7XG4gICAgICAgIGlmIChkeW5hbWljQ3NzRmlsZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZyA9IG5ldyBTZXQoY3NzRmlsZXMpO1xuICAgICAgICAgICAgZHluYW1pY0Nzc0ZpbGVzID0gZHluYW1pY0Nzc0ZpbGVzLmZpbHRlcigoZik9PiEoZXhpc3RpbmcuaGFzKGYpIHx8IHNoYXJlZEZpbGVzLmhhcyhmKSkpO1xuICAgICAgICAgICAgdW5tYW5nZWRGaWxlcyA9IG5ldyBTZXQoZHluYW1pY0Nzc0ZpbGVzKTtcbiAgICAgICAgICAgIGNzc0ZpbGVzLnB1c2goLi4uZHluYW1pY0Nzc0ZpbGVzKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgY3NzTGlua0VsZW1lbnRzID0gW107XG4gICAgICAgIGNzc0ZpbGVzLmZvckVhY2goKGZpbGUpPT57XG4gICAgICAgICAgICBjb25zdCBpc1NoYXJlZEZpbGUgPSBzaGFyZWRGaWxlcy5oYXMoZmlsZSk7XG4gICAgICAgICAgICBpZiAoIW9wdGltaXplQ3NzKSB7XG4gICAgICAgICAgICAgICAgY3NzTGlua0VsZW1lbnRzLnB1c2goLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XG4gICAgICAgICAgICAgICAgICAgIGtleTogYCR7ZmlsZX0tcHJlbG9hZGAsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiB0aGlzLnByb3BzLm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICByZWw6IFwicHJlbG9hZFwiLFxuICAgICAgICAgICAgICAgICAgICBocmVmOiBgJHthc3NldFByZWZpeH0vX25leHQvJHtlbmNvZGVVUkkoZmlsZSl9JHthc3NldFF1ZXJ5U3RyaW5nfWAsXG4gICAgICAgICAgICAgICAgICAgIGFzOiBcInN0eWxlXCIsXG4gICAgICAgICAgICAgICAgICAgIGNyb3NzT3JpZ2luOiB0aGlzLnByb3BzLmNyb3NzT3JpZ2luIHx8IGNyb3NzT3JpZ2luXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgaXNVbm1hbmFnZWRGaWxlID0gdW5tYW5nZWRGaWxlcy5oYXMoZmlsZSk7XG4gICAgICAgICAgICBjc3NMaW5rRWxlbWVudHMucHVzaCgvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHtcbiAgICAgICAgICAgICAgICBrZXk6IGZpbGUsXG4gICAgICAgICAgICAgICAgbm9uY2U6IHRoaXMucHJvcHMubm9uY2UsXG4gICAgICAgICAgICAgICAgcmVsOiBcInN0eWxlc2hlZXRcIixcbiAgICAgICAgICAgICAgICBocmVmOiBgJHthc3NldFByZWZpeH0vX25leHQvJHtlbmNvZGVVUkkoZmlsZSl9JHthc3NldFF1ZXJ5U3RyaW5nfWAsXG4gICAgICAgICAgICAgICAgY3Jvc3NPcmlnaW46IHRoaXMucHJvcHMuY3Jvc3NPcmlnaW4gfHwgY3Jvc3NPcmlnaW4sXG4gICAgICAgICAgICAgICAgXCJkYXRhLW4tZ1wiOiBpc1VubWFuYWdlZEZpbGUgPyB1bmRlZmluZWQgOiBpc1NoYXJlZEZpbGUgPyBcIlwiIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIFwiZGF0YS1uLXBcIjogaXNVbm1hbmFnZWRGaWxlID8gdW5kZWZpbmVkIDogaXNTaGFyZWRGaWxlID8gdW5kZWZpbmVkIDogXCJcIlxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIgJiYgb3B0aW1pemVGb250cykge1xuICAgICAgICAgICAgY3NzTGlua0VsZW1lbnRzID0gdGhpcy5tYWtlU3R5bGVzaGVldEluZXJ0KGNzc0xpbmtFbGVtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc0xpbmtFbGVtZW50cy5sZW5ndGggPT09IDAgPyBudWxsIDogY3NzTGlua0VsZW1lbnRzO1xuICAgIH1cbiAgICBnZXRQcmVsb2FkRHluYW1pY0NodW5rcygpIHtcbiAgICAgICAgY29uc3QgeyBkeW5hbWljSW1wb3J0cyAsIGFzc2V0UHJlZml4ICwgYXNzZXRRdWVyeVN0cmluZyAsIGNyb3NzT3JpZ2luICB9ID0gdGhpcy5jb250ZXh0O1xuICAgICAgICByZXR1cm4gZHluYW1pY0ltcG9ydHMubWFwKChmaWxlKT0+e1xuICAgICAgICAgICAgaWYgKCFmaWxlLmVuZHNXaXRoKFwiLmpzXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XG4gICAgICAgICAgICAgICAgcmVsOiBcInByZWxvYWRcIixcbiAgICAgICAgICAgICAgICBrZXk6IGZpbGUsXG4gICAgICAgICAgICAgICAgaHJlZjogYCR7YXNzZXRQcmVmaXh9L19uZXh0LyR7ZW5jb2RlVVJJKGZpbGUpfSR7YXNzZXRRdWVyeVN0cmluZ31gLFxuICAgICAgICAgICAgICAgIGFzOiBcInNjcmlwdFwiLFxuICAgICAgICAgICAgICAgIG5vbmNlOiB0aGlzLnByb3BzLm5vbmNlLFxuICAgICAgICAgICAgICAgIGNyb3NzT3JpZ2luOiB0aGlzLnByb3BzLmNyb3NzT3JpZ2luIHx8IGNyb3NzT3JpZ2luXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkvLyBGaWx0ZXIgb3V0IG51bGxlZCBzY3JpcHRzXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbik7XG4gICAgfVxuICAgIGdldFByZWxvYWRNYWluTGlua3MoZmlsZXMpIHtcbiAgICAgICAgY29uc3QgeyBhc3NldFByZWZpeCAsIGFzc2V0UXVlcnlTdHJpbmcgLCBzY3JpcHRMb2FkZXIgLCBjcm9zc09yaWdpbiAgfSA9IHRoaXMuY29udGV4dDtcbiAgICAgICAgY29uc3QgcHJlbG9hZEZpbGVzID0gZmlsZXMuYWxsRmlsZXMuZmlsdGVyKChmaWxlKT0+e1xuICAgICAgICAgICAgcmV0dXJuIGZpbGUuZW5kc1dpdGgoXCIuanNcIik7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgLi4uKHNjcmlwdExvYWRlci5iZWZvcmVJbnRlcmFjdGl2ZSB8fCBbXSkubWFwKChmaWxlKT0+LyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XG4gICAgICAgICAgICAgICAgICAgIGtleTogZmlsZS5zcmMsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiB0aGlzLnByb3BzLm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICByZWw6IFwicHJlbG9hZFwiLFxuICAgICAgICAgICAgICAgICAgICBocmVmOiBmaWxlLnNyYyxcbiAgICAgICAgICAgICAgICAgICAgYXM6IFwic2NyaXB0XCIsXG4gICAgICAgICAgICAgICAgICAgIGNyb3NzT3JpZ2luOiB0aGlzLnByb3BzLmNyb3NzT3JpZ2luIHx8IGNyb3NzT3JpZ2luXG4gICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgLi4ucHJlbG9hZEZpbGVzLm1hcCgoZmlsZSk9Pi8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImxpbmtcIiwge1xuICAgICAgICAgICAgICAgICAgICBrZXk6IGZpbGUsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiB0aGlzLnByb3BzLm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICByZWw6IFwicHJlbG9hZFwiLFxuICAgICAgICAgICAgICAgICAgICBocmVmOiBgJHthc3NldFByZWZpeH0vX25leHQvJHtlbmNvZGVVUkkoZmlsZSl9JHthc3NldFF1ZXJ5U3RyaW5nfWAsXG4gICAgICAgICAgICAgICAgICAgIGFzOiBcInNjcmlwdFwiLFxuICAgICAgICAgICAgICAgICAgICBjcm9zc09yaWdpbjogdGhpcy5wcm9wcy5jcm9zc09yaWdpbiB8fCBjcm9zc09yaWdpblxuICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICBdO1xuICAgIH1cbiAgICBnZXRCZWZvcmVJbnRlcmFjdGl2ZUlubGluZVNjcmlwdHMoKSB7XG4gICAgICAgIGNvbnN0IHsgc2NyaXB0TG9hZGVyICB9ID0gdGhpcy5jb250ZXh0O1xuICAgICAgICBjb25zdCB7IG5vbmNlICwgY3Jvc3NPcmlnaW4gIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKHNjcmlwdExvYWRlci5iZWZvcmVJbnRlcmFjdGl2ZSB8fCBbXSkuZmlsdGVyKChzY3JpcHQpPT4hc2NyaXB0LnNyYyAmJiAoc2NyaXB0LmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIHx8IHNjcmlwdC5jaGlsZHJlbikpLm1hcCgoZmlsZSwgaW5kZXgpPT57XG4gICAgICAgICAgICBjb25zdCB7IHN0cmF0ZWd5ICwgY2hpbGRyZW4gLCBkYW5nZXJvdXNseVNldElubmVySFRNTCAsIHNyYyAsIC4uLnNjcmlwdFByb3BzIH0gPSBmaWxlO1xuICAgICAgICAgICAgbGV0IGh0bWwgPSBcIlwiO1xuICAgICAgICAgICAgaWYgKGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MICYmIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbCkge1xuICAgICAgICAgICAgICAgIGh0bWwgPSBkYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWw7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgaHRtbCA9IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJzdHJpbmdcIiA/IGNoaWxkcmVuIDogQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbi5qb2luKFwiXCIpIDogXCJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiwge1xuICAgICAgICAgICAgICAgIC4uLnNjcmlwdFByb3BzLFxuICAgICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgICAgICAgICAgIF9faHRtbDogaHRtbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAga2V5OiBzY3JpcHRQcm9wcy5pZCB8fCBpbmRleCxcbiAgICAgICAgICAgICAgICBub25jZTogbm9uY2UsXG4gICAgICAgICAgICAgICAgXCJkYXRhLW5zY3JpcHRcIjogXCJiZWZvcmVJbnRlcmFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgIGNyb3NzT3JpZ2luOiBjcm9zc09yaWdpbiB8fCBwcm9jZXNzLmVudi5fX05FWFRfQ1JPU1NfT1JJR0lOXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldER5bmFtaWNDaHVua3MoZmlsZXMpIHtcbiAgICAgICAgcmV0dXJuIGdldER5bmFtaWNDaHVua3ModGhpcy5jb250ZXh0LCB0aGlzLnByb3BzLCBmaWxlcyk7XG4gICAgfVxuICAgIGdldFByZU5leHRTY3JpcHRzKCkge1xuICAgICAgICByZXR1cm4gZ2V0UHJlTmV4dFNjcmlwdHModGhpcy5jb250ZXh0LCB0aGlzLnByb3BzKTtcbiAgICB9XG4gICAgZ2V0U2NyaXB0cyhmaWxlcykge1xuICAgICAgICByZXR1cm4gZ2V0U2NyaXB0cyh0aGlzLmNvbnRleHQsIHRoaXMucHJvcHMsIGZpbGVzKTtcbiAgICB9XG4gICAgZ2V0UG9seWZpbGxTY3JpcHRzKCkge1xuICAgICAgICByZXR1cm4gZ2V0UG9seWZpbGxTY3JpcHRzKHRoaXMuY29udGV4dCwgdGhpcy5wcm9wcyk7XG4gICAgfVxuICAgIG1ha2VTdHlsZXNoZWV0SW5lcnQobm9kZSkge1xuICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuQ2hpbGRyZW4ubWFwKG5vZGUsIChjKT0+e1xuICAgICAgICAgICAgdmFyIF9jX3Byb3BzLCBfY19wcm9wczE7XG4gICAgICAgICAgICBpZiAoKGMgPT0gbnVsbCA/IHZvaWQgMCA6IGMudHlwZSkgPT09IFwibGlua1wiICYmIChjID09IG51bGwgPyB2b2lkIDAgOiAoX2NfcHJvcHMgPSBjLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogX2NfcHJvcHMuaHJlZikgJiYgX2NvbnN0YW50cy5PUFRJTUlaRURfRk9OVF9QUk9WSURFUlMuc29tZSgoeyB1cmwgIH0pPT57XG4gICAgICAgICAgICAgICAgdmFyIF9jX3Byb3BzLCBfY19wcm9wc19ocmVmO1xuICAgICAgICAgICAgICAgIHJldHVybiBjID09IG51bGwgPyB2b2lkIDAgOiAoX2NfcHJvcHMgPSBjLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogKF9jX3Byb3BzX2hyZWYgPSBfY19wcm9wcy5ocmVmKSA9PSBudWxsID8gdm9pZCAwIDogX2NfcHJvcHNfaHJlZi5zdGFydHNXaXRoKHVybCk7XG4gICAgICAgICAgICB9KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1Byb3BzID0ge1xuICAgICAgICAgICAgICAgICAgICAuLi5jLnByb3BzIHx8IHt9LFxuICAgICAgICAgICAgICAgICAgICBcImRhdGEtaHJlZlwiOiBjLnByb3BzLmhyZWYsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY2xvbmVFbGVtZW50KGMsIG5ld1Byb3BzKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PSBudWxsID8gdm9pZCAwIDogKF9jX3Byb3BzMSA9IGMucHJvcHMpID09IG51bGwgPyB2b2lkIDAgOiBfY19wcm9wczEuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgLi4uYy5wcm9wcyB8fCB7fSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IHRoaXMubWFrZVN0eWxlc2hlZXRJbmVydChjLnByb3BzLmNoaWxkcmVuKVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY2xvbmVFbGVtZW50KGMsIG5ld1Byb3BzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjO1xuICAgICAgICAvLyBAdHlwZXMvcmVhY3QgYnVnLiBSZXR1cm5lZCB2YWx1ZSBmcm9tIC5tYXAgd2lsbCBub3QgYmUgYG51bGxgIGlmIHlvdSBwYXNzIGluIGBbbnVsbF1gXG4gICAgICAgIH0pLmZpbHRlcihCb29sZWFuKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IHN0eWxlcyAsIGFtcFBhdGggLCBpbkFtcE1vZGUgLCBoeWJyaWRBbXAgLCBjYW5vbmljYWxCYXNlICwgX19ORVhUX0RBVEFfXyAsIGRhbmdlcm91c0FzUGF0aCAsIGhlYWRUYWdzICwgdW5zdGFibGVfcnVudGltZUpTICwgdW5zdGFibGVfSnNQcmVsb2FkICwgZGlzYWJsZU9wdGltaXplZExvYWRpbmcgLCBvcHRpbWl6ZUNzcyAsIG9wdGltaXplRm9udHMgLCBhc3NldFByZWZpeCAsIG5leHRGb250TWFuaWZlc3QgIH0gPSB0aGlzLmNvbnRleHQ7XG4gICAgICAgIGNvbnN0IGRpc2FibGVSdW50aW1lSlMgPSB1bnN0YWJsZV9ydW50aW1lSlMgPT09IGZhbHNlO1xuICAgICAgICBjb25zdCBkaXNhYmxlSnNQcmVsb2FkID0gdW5zdGFibGVfSnNQcmVsb2FkID09PSBmYWxzZSB8fCAhZGlzYWJsZU9wdGltaXplZExvYWRpbmc7XG4gICAgICAgIHRoaXMuY29udGV4dC5kb2NDb21wb25lbnRzUmVuZGVyZWQuSGVhZCA9IHRydWU7XG4gICAgICAgIGxldCB7IGhlYWQgIH0gPSB0aGlzLmNvbnRleHQ7XG4gICAgICAgIGxldCBjc3NQcmVsb2FkcyA9IFtdO1xuICAgICAgICBsZXQgb3RoZXJIZWFkRWxlbWVudHMgPSBbXTtcbiAgICAgICAgaWYgKGhlYWQpIHtcbiAgICAgICAgICAgIGhlYWQuZm9yRWFjaCgoYyk9PntcbiAgICAgICAgICAgICAgICBsZXQgbWV0YVRhZztcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jb250ZXh0LnN0cmljdE5leHRIZWFkKSB7XG4gICAgICAgICAgICAgICAgICAgIG1ldGFUYWcgPSAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJtZXRhXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibmV4dC1oZWFkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIjFcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGMgJiYgYy50eXBlID09PSBcImxpbmtcIiAmJiBjLnByb3BzW1wicmVsXCJdID09PSBcInByZWxvYWRcIiAmJiBjLnByb3BzW1wiYXNcIl0gPT09IFwic3R5bGVcIikge1xuICAgICAgICAgICAgICAgICAgICBtZXRhVGFnICYmIGNzc1ByZWxvYWRzLnB1c2gobWV0YVRhZyk7XG4gICAgICAgICAgICAgICAgICAgIGNzc1ByZWxvYWRzLnB1c2goYyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZXRhVGFnICYmIChjLnR5cGUgIT09IFwibWV0YVwiIHx8ICFjLnByb3BzW1wiY2hhclNldFwiXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdGhlckhlYWRFbGVtZW50cy5wdXNoKG1ldGFUYWcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgb3RoZXJIZWFkRWxlbWVudHMucHVzaChjKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaGVhZCA9IGNzc1ByZWxvYWRzLmNvbmNhdChvdGhlckhlYWRFbGVtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNoaWxkcmVuID0gX3JlYWN0LmRlZmF1bHQuQ2hpbGRyZW4udG9BcnJheSh0aGlzLnByb3BzLmNoaWxkcmVuKS5maWx0ZXIoQm9vbGVhbik7XG4gICAgICAgIC8vIHNob3cgYSB3YXJuaW5nIGlmIEhlYWQgY29udGFpbnMgPHRpdGxlPiAob25seSBpbiBkZXZlbG9wbWVudClcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgY2hpbGRyZW4gPSBfcmVhY3QuZGVmYXVsdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIChjaGlsZCk9PntcbiAgICAgICAgICAgICAgICB2YXIgX2NoaWxkX3Byb3BzO1xuICAgICAgICAgICAgICAgIGNvbnN0IGlzUmVhY3RIZWxtZXQgPSBjaGlsZCA9PSBudWxsID8gdm9pZCAwIDogKF9jaGlsZF9wcm9wcyA9IGNoaWxkLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogX2NoaWxkX3Byb3BzW1wiZGF0YS1yZWFjdC1oZWxtZXRcIl07XG4gICAgICAgICAgICAgICAgaWYgKCFpc1JlYWN0SGVsbWV0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfY2hpbGRfcHJvcHMxO1xuICAgICAgICAgICAgICAgICAgICBpZiAoKGNoaWxkID09IG51bGwgPyB2b2lkIDAgOiBjaGlsZC50eXBlKSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJXYXJuaW5nOiA8dGl0bGU+IHNob3VsZCBub3QgYmUgdXNlZCBpbiBfZG9jdW1lbnQuanMncyA8SGVhZD4uIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL25vLWRvY3VtZW50LXRpdGxlXCIpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKChjaGlsZCA9PSBudWxsID8gdm9pZCAwIDogY2hpbGQudHlwZSkgPT09IFwibWV0YVwiICYmIChjaGlsZCA9PSBudWxsID8gdm9pZCAwIDogKF9jaGlsZF9wcm9wczEgPSBjaGlsZC5wcm9wcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9jaGlsZF9wcm9wczEubmFtZSkgPT09IFwidmlld3BvcnRcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiV2FybmluZzogdmlld3BvcnQgbWV0YSB0YWdzIHNob3VsZCBub3QgYmUgdXNlZCBpbiBfZG9jdW1lbnQuanMncyA8SGVhZD4uIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL25vLWRvY3VtZW50LXZpZXdwb3J0LW1ldGFcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgICAgICAgLy8gQHR5cGVzL3JlYWN0IGJ1Zy4gUmV0dXJuZWQgdmFsdWUgZnJvbSAubWFwIHdpbGwgbm90IGJlIGBudWxsYCBpZiB5b3UgcGFzcyBpbiBgW251bGxdYFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5wcm9wcy5jcm9zc09yaWdpbikgY29uc29sZS53YXJuKFwiV2FybmluZzogYEhlYWRgIGF0dHJpYnV0ZSBgY3Jvc3NPcmlnaW5gIGlzIGRlcHJlY2F0ZWQuIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL2RvYy1jcm9zc29yaWdpbi1kZXByZWNhdGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiICYmIG9wdGltaXplRm9udHMgJiYgIShwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiICYmIGluQW1wTW9kZSkpIHtcbiAgICAgICAgICAgIGNoaWxkcmVuID0gdGhpcy5tYWtlU3R5bGVzaGVldEluZXJ0KGNoaWxkcmVuKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgaGFzQW1waHRtbFJlbCA9IGZhbHNlO1xuICAgICAgICBsZXQgaGFzQ2Fub25pY2FsUmVsID0gZmFsc2U7XG4gICAgICAgIC8vIHNob3cgd2FybmluZyBhbmQgcmVtb3ZlIGNvbmZsaWN0aW5nIGFtcCBoZWFkIHRhZ3NcbiAgICAgICAgaGVhZCA9IF9yZWFjdC5kZWZhdWx0LkNoaWxkcmVuLm1hcChoZWFkIHx8IFtdLCAoY2hpbGQpPT57XG4gICAgICAgICAgICBpZiAoIWNoaWxkKSByZXR1cm4gY2hpbGQ7XG4gICAgICAgICAgICBjb25zdCB7IHR5cGUgLCBwcm9wcyAgfSA9IGNoaWxkO1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSAhPT0gXCJlZGdlXCIgJiYgaW5BbXBNb2RlKSB7XG4gICAgICAgICAgICAgICAgbGV0IGJhZFByb3AgPSBcIlwiO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlID09PSBcIm1ldGFcIiAmJiBwcm9wcy5uYW1lID09PSBcInZpZXdwb3J0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgYmFkUHJvcCA9ICduYW1lPVwidmlld3BvcnRcIic7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSBcImxpbmtcIiAmJiBwcm9wcy5yZWwgPT09IFwiY2Fub25pY2FsXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaGFzQ2Fub25pY2FsUmVsID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwic2NyaXB0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gb25seSBibG9jayBpZlxuICAgICAgICAgICAgICAgICAgICAvLyAxLiBpdCBoYXMgYSBzcmMgYW5kIGlzbid0IHBvaW50aW5nIHRvIGFtcHByb2plY3QncyBDRE5cbiAgICAgICAgICAgICAgICAgICAgLy8gMi4gaXQgaXMgdXNpbmcgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgd2l0aG91dCBhIHR5cGUgb3JcbiAgICAgICAgICAgICAgICAgICAgLy8gYSB0eXBlIG9mIHRleHQvamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvcHMuc3JjICYmIHByb3BzLnNyYy5pbmRleE9mKFwiYW1wcHJvamVjdFwiKSA8IC0xIHx8IHByb3BzLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MICYmICghcHJvcHMudHlwZSB8fCBwcm9wcy50eXBlID09PSBcInRleHQvamF2YXNjcmlwdFwiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFkUHJvcCA9IFwiPHNjcmlwdFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmtleXMocHJvcHMpLmZvckVhY2goKHByb3ApPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFkUHJvcCArPSBgICR7cHJvcH09XCIke3Byb3BzW3Byb3BdfVwiYDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFkUHJvcCArPSBcIi8+XCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGJhZFByb3ApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBGb3VuZCBjb25mbGljdGluZyBhbXAgdGFnIFwiJHtjaGlsZC50eXBlfVwiIHdpdGggY29uZmxpY3RpbmcgcHJvcCAke2JhZFByb3B9IGluICR7X19ORVhUX0RBVEFfXy5wYWdlfS4gaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvY29uZmxpY3RpbmctYW1wLXRhZ2ApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIG5vbi1hbXAgbW9kZVxuICAgICAgICAgICAgICAgIGlmICh0eXBlID09PSBcImxpbmtcIiAmJiBwcm9wcy5yZWwgPT09IFwiYW1waHRtbFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGhhc0FtcGh0bWxSZWwgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjaGlsZDtcbiAgICAgICAgLy8gQHR5cGVzL3JlYWN0IGJ1Zy4gUmV0dXJuZWQgdmFsdWUgZnJvbSAubWFwIHdpbGwgbm90IGJlIGBudWxsYCBpZiB5b3UgcGFzcyBpbiBgW251bGxdYFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZmlsZXMgPSBnZXREb2N1bWVudEZpbGVzKHRoaXMuY29udGV4dC5idWlsZE1hbmlmZXN0LCB0aGlzLmNvbnRleHQuX19ORVhUX0RBVEFfXy5wYWdlLCBwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiICYmIGluQW1wTW9kZSk7XG4gICAgICAgIGNvbnN0IG5leHRGb250TGlua1RhZ3MgPSBnZXROZXh0Rm9udExpbmtUYWdzKG5leHRGb250TWFuaWZlc3QsIGRhbmdlcm91c0FzUGF0aCwgYXNzZXRQcmVmaXgpO1xuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiaGVhZFwiLCBnZXRIZWFkSFRNTFByb3BzKHRoaXMucHJvcHMpLCB0aGlzLmNvbnRleHQuaXNEZXZlbG9wbWVudCAmJiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIsIHtcbiAgICAgICAgICAgIFwiZGF0YS1uZXh0LWhpZGUtZm91Y1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJkYXRhLWFtcGRldm1vZGVcIjogcHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FICE9PSBcImVkZ2VcIiAmJiBpbkFtcE1vZGUgPyBcInRydWVcIiA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgICAgICAgX19odG1sOiBgYm9keXtkaXNwbGF5Om5vbmV9YFxuICAgICAgICAgICAgfVxuICAgICAgICB9KSwgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibm9zY3JpcHRcIiwge1xuICAgICAgICAgICAgXCJkYXRhLW5leHQtaGlkZS1mb3VjXCI6IHRydWUsXG4gICAgICAgICAgICBcImRhdGEtYW1wZGV2bW9kZVwiOiBwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiICYmIGluQW1wTW9kZSA/IFwidHJ1ZVwiIDogdW5kZWZpbmVkXG4gICAgICAgIH0sIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIsIHtcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgICAgICAgX19odG1sOiBgYm9keXtkaXNwbGF5OmJsb2NrfWBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkpKSwgaGVhZCwgdGhpcy5jb250ZXh0LnN0cmljdE5leHRIZWFkID8gbnVsbCA6IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcIm1ldGFcIiwge1xuICAgICAgICAgICAgbmFtZTogXCJuZXh0LWhlYWQtY291bnRcIixcbiAgICAgICAgICAgIGNvbnRlbnQ6IF9yZWFjdC5kZWZhdWx0LkNoaWxkcmVuLmNvdW50KGhlYWQgfHwgW10pLnRvU3RyaW5nKClcbiAgICAgICAgfSksIGNoaWxkcmVuLCBvcHRpbWl6ZUZvbnRzICYmIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcIm1ldGFcIiwge1xuICAgICAgICAgICAgbmFtZTogXCJuZXh0LWZvbnQtcHJlY29ubmVjdFwiXG4gICAgICAgIH0pLCBuZXh0Rm9udExpbmtUYWdzLnByZWNvbm5lY3QsIG5leHRGb250TGlua1RhZ3MucHJlbG9hZCwgcHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FICE9PSBcImVkZ2VcIiAmJiBpbkFtcE1vZGUgJiYgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJtZXRhXCIsIHtcbiAgICAgICAgICAgIG5hbWU6IFwidmlld3BvcnRcIixcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwid2lkdGg9ZGV2aWNlLXdpZHRoLG1pbmltdW0tc2NhbGU9MSxpbml0aWFsLXNjYWxlPTFcIlxuICAgICAgICB9KSwgIWhhc0Nhbm9uaWNhbFJlbCAmJiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHtcbiAgICAgICAgICAgIHJlbDogXCJjYW5vbmljYWxcIixcbiAgICAgICAgICAgIGhyZWY6IGNhbm9uaWNhbEJhc2UgKyByZXF1aXJlKFwiLi4vc2VydmVyL3V0aWxzXCIpLmNsZWFuQW1wUGF0aChkYW5nZXJvdXNBc1BhdGgpXG4gICAgICAgIH0pLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHtcbiAgICAgICAgICAgIHJlbDogXCJwcmVsb2FkXCIsXG4gICAgICAgICAgICBhczogXCJzY3JpcHRcIixcbiAgICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9jZG4uYW1wcHJvamVjdC5vcmcvdjAuanNcIlxuICAgICAgICB9KSwgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEFtcFN0eWxlcywge1xuICAgICAgICAgICAgc3R5bGVzOiBzdHlsZXNcbiAgICAgICAgfSksIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIsIHtcbiAgICAgICAgICAgIFwiYW1wLWJvaWxlcnBsYXRlXCI6IFwiXCIsXG4gICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgIF9faHRtbDogYGJvZHl7LXdlYmtpdC1hbmltYXRpb246LWFtcC1zdGFydCA4cyBzdGVwcygxLGVuZCkgMHMgMSBub3JtYWwgYm90aDstbW96LWFuaW1hdGlvbjotYW1wLXN0YXJ0IDhzIHN0ZXBzKDEsZW5kKSAwcyAxIG5vcm1hbCBib3RoOy1tcy1hbmltYXRpb246LWFtcC1zdGFydCA4cyBzdGVwcygxLGVuZCkgMHMgMSBub3JtYWwgYm90aDthbmltYXRpb246LWFtcC1zdGFydCA4cyBzdGVwcygxLGVuZCkgMHMgMSBub3JtYWwgYm90aH1ALXdlYmtpdC1rZXlmcmFtZXMgLWFtcC1zdGFydHtmcm9te3Zpc2liaWxpdHk6aGlkZGVufXRve3Zpc2liaWxpdHk6dmlzaWJsZX19QC1tb3ota2V5ZnJhbWVzIC1hbXAtc3RhcnR7ZnJvbXt2aXNpYmlsaXR5OmhpZGRlbn10b3t2aXNpYmlsaXR5OnZpc2libGV9fUAtbXMta2V5ZnJhbWVzIC1hbXAtc3RhcnR7ZnJvbXt2aXNpYmlsaXR5OmhpZGRlbn10b3t2aXNpYmlsaXR5OnZpc2libGV9fUAtby1rZXlmcmFtZXMgLWFtcC1zdGFydHtmcm9te3Zpc2liaWxpdHk6aGlkZGVufXRve3Zpc2liaWxpdHk6dmlzaWJsZX19QGtleWZyYW1lcyAtYW1wLXN0YXJ0e2Zyb217dmlzaWJpbGl0eTpoaWRkZW59dG97dmlzaWJpbGl0eTp2aXNpYmxlfX1gXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJub3NjcmlwdFwiLCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiLCB7XG4gICAgICAgICAgICBcImFtcC1ib2lsZXJwbGF0ZVwiOiBcIlwiLFxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgICAgICBfX2h0bWw6IGBib2R5ey13ZWJraXQtYW5pbWF0aW9uOm5vbmU7LW1vei1hbmltYXRpb246bm9uZTstbXMtYW5pbWF0aW9uOm5vbmU7YW5pbWF0aW9uOm5vbmV9YFxuICAgICAgICAgICAgfVxuICAgICAgICB9KSksIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICBhc3luYzogdHJ1ZSxcbiAgICAgICAgICAgIHNyYzogXCJodHRwczovL2Nkbi5hbXBwcm9qZWN0Lm9yZy92MC5qc1wiXG4gICAgICAgIH0pKSwgIShwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiICYmIGluQW1wTW9kZSkgJiYgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCAhaGFzQW1waHRtbFJlbCAmJiBoeWJyaWRBbXAgJiYgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XG4gICAgICAgICAgICByZWw6IFwiYW1waHRtbFwiLFxuICAgICAgICAgICAgaHJlZjogY2Fub25pY2FsQmFzZSArIGdldEFtcFBhdGgoYW1wUGF0aCwgZGFuZ2Vyb3VzQXNQYXRoKVxuICAgICAgICB9KSwgdGhpcy5nZXRCZWZvcmVJbnRlcmFjdGl2ZUlubGluZVNjcmlwdHMoKSwgIW9wdGltaXplQ3NzICYmIHRoaXMuZ2V0Q3NzTGlua3MoZmlsZXMpLCAhb3B0aW1pemVDc3MgJiYgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibm9zY3JpcHRcIiwge1xuICAgICAgICAgICAgXCJkYXRhLW4tY3NzXCI6IHRoaXMucHJvcHMubm9uY2UgPz8gXCJcIlxuICAgICAgICB9KSwgIWRpc2FibGVSdW50aW1lSlMgJiYgIWRpc2FibGVKc1ByZWxvYWQgJiYgdGhpcy5nZXRQcmVsb2FkRHluYW1pY0NodW5rcygpLCAhZGlzYWJsZVJ1bnRpbWVKUyAmJiAhZGlzYWJsZUpzUHJlbG9hZCAmJiB0aGlzLmdldFByZWxvYWRNYWluTGlua3MoZmlsZXMpLCAhZGlzYWJsZU9wdGltaXplZExvYWRpbmcgJiYgIWRpc2FibGVSdW50aW1lSlMgJiYgdGhpcy5nZXRQb2x5ZmlsbFNjcmlwdHMoKSwgIWRpc2FibGVPcHRpbWl6ZWRMb2FkaW5nICYmICFkaXNhYmxlUnVudGltZUpTICYmIHRoaXMuZ2V0UHJlTmV4dFNjcmlwdHMoKSwgIWRpc2FibGVPcHRpbWl6ZWRMb2FkaW5nICYmICFkaXNhYmxlUnVudGltZUpTICYmIHRoaXMuZ2V0RHluYW1pY0NodW5rcyhmaWxlcyksICFkaXNhYmxlT3B0aW1pemVkTG9hZGluZyAmJiAhZGlzYWJsZVJ1bnRpbWVKUyAmJiB0aGlzLmdldFNjcmlwdHMoZmlsZXMpLCBvcHRpbWl6ZUNzcyAmJiB0aGlzLmdldENzc0xpbmtzKGZpbGVzKSwgb3B0aW1pemVDc3MgJiYgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwibm9zY3JpcHRcIiwge1xuICAgICAgICAgICAgXCJkYXRhLW4tY3NzXCI6IHRoaXMucHJvcHMubm9uY2UgPz8gXCJcIlxuICAgICAgICB9KSwgdGhpcy5jb250ZXh0LmlzRGV2ZWxvcG1lbnQgJiYgLy8gdGhpcyBlbGVtZW50IGlzIHVzZWQgdG8gbW91bnQgZGV2ZWxvcG1lbnQgc3R5bGVzIHNvIHRoZVxuICAgICAgICAvLyBvcmRlcmluZyBtYXRjaGVzIHByb2R1Y3Rpb25cbiAgICAgICAgLy8gKGJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIGF0IHRoZSBib3R0b20gb2YgPGhlYWQgLz4pXG4gICAgICAgIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcIm5vc2NyaXB0XCIsIHtcbiAgICAgICAgICAgIGlkOiBcIl9fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiXG4gICAgICAgIH0pLCBzdHlsZXMgfHwgbnVsbCksIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwge30sIC4uLmhlYWRUYWdzIHx8IFtdKSk7XG4gICAgfVxufVxuZnVuY3Rpb24gaGFuZGxlRG9jdW1lbnRTY3JpcHRMb2FkZXJJdGVtcyhzY3JpcHRMb2FkZXIsIF9fTkVYVF9EQVRBX18sIHByb3BzKSB7XG4gICAgdmFyIF9jaGlsZHJlbl9maW5kLCBfY2hpbGRyZW5fZmluZF9wcm9wcywgX2NoaWxkcmVuX2ZpbmQxLCBfY2hpbGRyZW5fZmluZF9wcm9wczE7XG4gICAgaWYgKCFwcm9wcy5jaGlsZHJlbikgcmV0dXJuO1xuICAgIGNvbnN0IHNjcmlwdExvYWRlckl0ZW1zID0gW107XG4gICAgY29uc3QgY2hpbGRyZW4gPSBBcnJheS5pc0FycmF5KHByb3BzLmNoaWxkcmVuKSA/IHByb3BzLmNoaWxkcmVuIDogW1xuICAgICAgICBwcm9wcy5jaGlsZHJlblxuICAgIF07XG4gICAgY29uc3QgaGVhZENoaWxkcmVuID0gKF9jaGlsZHJlbl9maW5kID0gY2hpbGRyZW4uZmluZCgoY2hpbGQpPT5jaGlsZC50eXBlID09PSBIZWFkKSkgPT0gbnVsbCA/IHZvaWQgMCA6IChfY2hpbGRyZW5fZmluZF9wcm9wcyA9IF9jaGlsZHJlbl9maW5kLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogX2NoaWxkcmVuX2ZpbmRfcHJvcHMuY2hpbGRyZW47XG4gICAgY29uc3QgYm9keUNoaWxkcmVuID0gKF9jaGlsZHJlbl9maW5kMSA9IGNoaWxkcmVuLmZpbmQoKGNoaWxkKT0+Y2hpbGQudHlwZSA9PT0gXCJib2R5XCIpKSA9PSBudWxsID8gdm9pZCAwIDogKF9jaGlsZHJlbl9maW5kX3Byb3BzMSA9IF9jaGlsZHJlbl9maW5kMS5wcm9wcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9jaGlsZHJlbl9maW5kX3Byb3BzMS5jaGlsZHJlbjtcbiAgICAvLyBTY3JpcHRzIHdpdGggYmVmb3JlSW50ZXJhY3RpdmUgY2FuIGJlIHBsYWNlZCBpbnNpZGUgSGVhZCBvciA8Ym9keT4gc28gY2hpbGRyZW4gb2YgYm90aCBuZWVkcyB0byBiZSB0cmF2ZXJzZWRcbiAgICBjb25zdCBjb21iaW5lZENoaWxkcmVuID0gW1xuICAgICAgICAuLi5BcnJheS5pc0FycmF5KGhlYWRDaGlsZHJlbikgPyBoZWFkQ2hpbGRyZW4gOiBbXG4gICAgICAgICAgICBoZWFkQ2hpbGRyZW5cbiAgICAgICAgXSxcbiAgICAgICAgLi4uQXJyYXkuaXNBcnJheShib2R5Q2hpbGRyZW4pID8gYm9keUNoaWxkcmVuIDogW1xuICAgICAgICAgICAgYm9keUNoaWxkcmVuXG4gICAgICAgIF1cbiAgICBdO1xuICAgIF9yZWFjdC5kZWZhdWx0LkNoaWxkcmVuLmZvckVhY2goY29tYmluZWRDaGlsZHJlbiwgKGNoaWxkKT0+e1xuICAgICAgICB2YXIgX2NoaWxkX3R5cGU7XG4gICAgICAgIGlmICghY2hpbGQpIHJldHVybjtcbiAgICAgICAgLy8gV2hlbiB1c2luZyB0aGUgYG5leHQvc2NyaXB0YCBjb21wb25lbnQsIHJlZ2lzdGVyIGl0IGluIHNjcmlwdCBsb2FkZXIuXG4gICAgICAgIGlmICgoX2NoaWxkX3R5cGUgPSBjaGlsZC50eXBlKSA9PSBudWxsID8gdm9pZCAwIDogX2NoaWxkX3R5cGUuX19uZXh0U2NyaXB0KSB7XG4gICAgICAgICAgICBpZiAoY2hpbGQucHJvcHMuc3RyYXRlZ3kgPT09IFwiYmVmb3JlSW50ZXJhY3RpdmVcIikge1xuICAgICAgICAgICAgICAgIHNjcmlwdExvYWRlci5iZWZvcmVJbnRlcmFjdGl2ZSA9IChzY3JpcHRMb2FkZXIuYmVmb3JlSW50ZXJhY3RpdmUgfHwgW10pLmNvbmNhdChbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLmNoaWxkLnByb3BzXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2UgaWYgKFtcbiAgICAgICAgICAgICAgICBcImxhenlPbmxvYWRcIixcbiAgICAgICAgICAgICAgICBcImFmdGVySW50ZXJhY3RpdmVcIixcbiAgICAgICAgICAgICAgICBcIndvcmtlclwiXG4gICAgICAgICAgICBdLmluY2x1ZGVzKGNoaWxkLnByb3BzLnN0cmF0ZWd5KSkge1xuICAgICAgICAgICAgICAgIHNjcmlwdExvYWRlckl0ZW1zLnB1c2goY2hpbGQucHJvcHMpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuICAgIF9fTkVYVF9EQVRBX18uc2NyaXB0TG9hZGVyID0gc2NyaXB0TG9hZGVySXRlbXM7XG59XG5jbGFzcyBOZXh0U2NyaXB0IGV4dGVuZHMgX3JlYWN0LmRlZmF1bHQuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgI18gPSAoKCk9PntcbiAgICAgICAgdGhpcy5jb250ZXh0VHlwZSA9IF9odG1sY29udGV4dC5IdG1sQ29udGV4dDtcbiAgICB9KSgpO1xuICAgIGdldER5bmFtaWNDaHVua3MoZmlsZXMpIHtcbiAgICAgICAgcmV0dXJuIGdldER5bmFtaWNDaHVua3ModGhpcy5jb250ZXh0LCB0aGlzLnByb3BzLCBmaWxlcyk7XG4gICAgfVxuICAgIGdldFByZU5leHRTY3JpcHRzKCkge1xuICAgICAgICByZXR1cm4gZ2V0UHJlTmV4dFNjcmlwdHModGhpcy5jb250ZXh0LCB0aGlzLnByb3BzKTtcbiAgICB9XG4gICAgZ2V0U2NyaXB0cyhmaWxlcykge1xuICAgICAgICByZXR1cm4gZ2V0U2NyaXB0cyh0aGlzLmNvbnRleHQsIHRoaXMucHJvcHMsIGZpbGVzKTtcbiAgICB9XG4gICAgZ2V0UG9seWZpbGxTY3JpcHRzKCkge1xuICAgICAgICByZXR1cm4gZ2V0UG9seWZpbGxTY3JpcHRzKHRoaXMuY29udGV4dCwgdGhpcy5wcm9wcyk7XG4gICAgfVxuICAgIHN0YXRpYyBnZXRJbmxpbmVTY3JpcHRTb3VyY2UoY29udGV4dCkge1xuICAgICAgICBjb25zdCB7IF9fTkVYVF9EQVRBX18gLCBsYXJnZVBhZ2VEYXRhQnl0ZXMgIH0gPSBjb250ZXh0O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04uc3RyaW5naWZ5KF9fTkVYVF9EQVRBX18pO1xuICAgICAgICAgICAgaWYgKGxhcmdlUGFnZURhdGFXYXJuaW5ncy5oYXMoX19ORVhUX0RBVEFfXy5wYWdlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoMCwgX2h0bWxlc2NhcGUuaHRtbEVzY2FwZUpzb25TdHJpbmcpKGRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYnl0ZXMgPSBwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgPT09IFwiZWRnZVwiID8gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGRhdGEpLmJ1ZmZlci5ieXRlTGVuZ3RoIDogQnVmZmVyLmZyb20oZGF0YSkuYnl0ZUxlbmd0aDtcbiAgICAgICAgICAgIGNvbnN0IHByZXR0eUJ5dGVzID0gcmVxdWlyZShcIi4uL2xpYi9wcmV0dHktYnl0ZXNcIikuZGVmYXVsdDtcbiAgICAgICAgICAgIGlmIChsYXJnZVBhZ2VEYXRhQnl0ZXMgJiYgYnl0ZXMgPiBsYXJnZVBhZ2VEYXRhQnl0ZXMpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGxhcmdlUGFnZURhdGFXYXJuaW5ncy5hZGQoX19ORVhUX0RBVEFfXy5wYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBXYXJuaW5nOiBkYXRhIGZvciBwYWdlIFwiJHtfX05FWFRfREFUQV9fLnBhZ2V9XCIke19fTkVYVF9EQVRBX18ucGFnZSA9PT0gY29udGV4dC5kYW5nZXJvdXNBc1BhdGggPyBcIlwiIDogYCAocGF0aCBcIiR7Y29udGV4dC5kYW5nZXJvdXNBc1BhdGh9XCIpYH0gaXMgJHtwcmV0dHlCeXRlcyhieXRlcyl9IHdoaWNoIGV4Y2VlZHMgdGhlIHRocmVzaG9sZCBvZiAke3ByZXR0eUJ5dGVzKGxhcmdlUGFnZURhdGFCeXRlcyl9LCB0aGlzIGFtb3VudCBvZiBkYXRhIGNhbiByZWR1Y2UgcGVyZm9ybWFuY2UuXFxuU2VlIG1vcmUgaW5mbyBoZXJlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9sYXJnZS1wYWdlLWRhdGFgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoMCwgX2h0bWxlc2NhcGUuaHRtbEVzY2FwZUpzb25TdHJpbmcpKGRhdGEpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGlmICgoMCwgX2lzZXJyb3IuZGVmYXVsdCkoZXJyKSAmJiBlcnIubWVzc2FnZS5pbmRleE9mKFwiY2lyY3VsYXIgc3RydWN0dXJlXCIpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2lyY3VsYXIgc3RydWN0dXJlIGluIFwiZ2V0SW5pdGlhbFByb3BzXCIgcmVzdWx0IG9mIHBhZ2UgXCIke19fTkVYVF9EQVRBX18ucGFnZX1cIi4gaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvY2lyY3VsYXItc3RydWN0dXJlYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGFzc2V0UHJlZml4ICwgaW5BbXBNb2RlICwgYnVpbGRNYW5pZmVzdCAsIHVuc3RhYmxlX3J1bnRpbWVKUyAsIGRvY0NvbXBvbmVudHNSZW5kZXJlZCAsIGFzc2V0UXVlcnlTdHJpbmcgLCBkaXNhYmxlT3B0aW1pemVkTG9hZGluZyAsIGNyb3NzT3JpZ2luICB9ID0gdGhpcy5jb250ZXh0O1xuICAgICAgICBjb25zdCBkaXNhYmxlUnVudGltZUpTID0gdW5zdGFibGVfcnVudGltZUpTID09PSBmYWxzZTtcbiAgICAgICAgZG9jQ29tcG9uZW50c1JlbmRlcmVkLk5leHRTY3JpcHQgPSB0cnVlO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FICE9PSBcImVkZ2VcIiAmJiBpbkFtcE1vZGUpIHtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGFtcERldkZpbGVzID0gW1xuICAgICAgICAgICAgICAgIC4uLmJ1aWxkTWFuaWZlc3QuZGV2RmlsZXMsXG4gICAgICAgICAgICAgICAgLi4uYnVpbGRNYW5pZmVzdC5wb2x5ZmlsbEZpbGVzLFxuICAgICAgICAgICAgICAgIC4uLmJ1aWxkTWFuaWZlc3QuYW1wRGV2RmlsZXNcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBkaXNhYmxlUnVudGltZUpTID8gbnVsbCA6IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICAgICAgaWQ6IFwiX19ORVhUX0RBVEFfX1wiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIG5vbmNlOiB0aGlzLnByb3BzLm5vbmNlLFxuICAgICAgICAgICAgICAgIGNyb3NzT3JpZ2luOiB0aGlzLnByb3BzLmNyb3NzT3JpZ2luIHx8IGNyb3NzT3JpZ2luLFxuICAgICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgICAgICAgICAgIF9faHRtbDogTmV4dFNjcmlwdC5nZXRJbmxpbmVTY3JpcHRTb3VyY2UodGhpcy5jb250ZXh0KVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJkYXRhLWFtcGRldm1vZGVcIjogdHJ1ZVxuICAgICAgICAgICAgfSksIGFtcERldkZpbGVzLm1hcCgoZmlsZSk9Pi8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGtleTogZmlsZSxcbiAgICAgICAgICAgICAgICAgICAgc3JjOiBgJHthc3NldFByZWZpeH0vX25leHQvJHtmaWxlfSR7YXNzZXRRdWVyeVN0cmluZ31gLFxuICAgICAgICAgICAgICAgICAgICBub25jZTogdGhpcy5wcm9wcy5ub25jZSxcbiAgICAgICAgICAgICAgICAgICAgY3Jvc3NPcmlnaW46IHRoaXMucHJvcHMuY3Jvc3NPcmlnaW4gfHwgY3Jvc3NPcmlnaW4sXG4gICAgICAgICAgICAgICAgICAgIFwiZGF0YS1hbXBkZXZtb2RlXCI6IHRydWVcbiAgICAgICAgICAgICAgICB9KSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLmNyb3NzT3JpZ2luKSBjb25zb2xlLndhcm4oXCJXYXJuaW5nOiBgTmV4dFNjcmlwdGAgYXR0cmlidXRlIGBjcm9zc09yaWdpbmAgaXMgZGVwcmVjYXRlZC4gaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvZG9jLWNyb3Nzb3JpZ2luLWRlcHJlY2F0ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmlsZXMgPSBnZXREb2N1bWVudEZpbGVzKHRoaXMuY29udGV4dC5idWlsZE1hbmlmZXN0LCB0aGlzLmNvbnRleHQuX19ORVhUX0RBVEFfXy5wYWdlLCBwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiICYmIGluQW1wTW9kZSk7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsICFkaXNhYmxlUnVudGltZUpTICYmIGJ1aWxkTWFuaWZlc3QuZGV2RmlsZXMgPyBidWlsZE1hbmlmZXN0LmRldkZpbGVzLm1hcCgoZmlsZSk9Pi8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICAgICAga2V5OiBmaWxlLFxuICAgICAgICAgICAgICAgIHNyYzogYCR7YXNzZXRQcmVmaXh9L19uZXh0LyR7ZW5jb2RlVVJJKGZpbGUpfSR7YXNzZXRRdWVyeVN0cmluZ31gLFxuICAgICAgICAgICAgICAgIG5vbmNlOiB0aGlzLnByb3BzLm5vbmNlLFxuICAgICAgICAgICAgICAgIGNyb3NzT3JpZ2luOiB0aGlzLnByb3BzLmNyb3NzT3JpZ2luIHx8IGNyb3NzT3JpZ2luXG4gICAgICAgICAgICB9KSkgOiBudWxsLCBkaXNhYmxlUnVudGltZUpTID8gbnVsbCA6IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgICAgICAgICBpZDogXCJfX05FWFRfREFUQV9fXCIsXG4gICAgICAgICAgICB0eXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIG5vbmNlOiB0aGlzLnByb3BzLm5vbmNlLFxuICAgICAgICAgICAgY3Jvc3NPcmlnaW46IHRoaXMucHJvcHMuY3Jvc3NPcmlnaW4gfHwgY3Jvc3NPcmlnaW4sXG4gICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgIF9faHRtbDogTmV4dFNjcmlwdC5nZXRJbmxpbmVTY3JpcHRTb3VyY2UodGhpcy5jb250ZXh0KVxuICAgICAgICAgICAgfVxuICAgICAgICB9KSwgZGlzYWJsZU9wdGltaXplZExvYWRpbmcgJiYgIWRpc2FibGVSdW50aW1lSlMgJiYgdGhpcy5nZXRQb2x5ZmlsbFNjcmlwdHMoKSwgZGlzYWJsZU9wdGltaXplZExvYWRpbmcgJiYgIWRpc2FibGVSdW50aW1lSlMgJiYgdGhpcy5nZXRQcmVOZXh0U2NyaXB0cygpLCBkaXNhYmxlT3B0aW1pemVkTG9hZGluZyAmJiAhZGlzYWJsZVJ1bnRpbWVKUyAmJiB0aGlzLmdldER5bmFtaWNDaHVua3MoZmlsZXMpLCBkaXNhYmxlT3B0aW1pemVkTG9hZGluZyAmJiAhZGlzYWJsZVJ1bnRpbWVKUyAmJiB0aGlzLmdldFNjcmlwdHMoZmlsZXMpKTtcbiAgICB9XG59XG5mdW5jdGlvbiBIdG1sKHByb3BzKSB7XG4gICAgY29uc3QgeyBpbkFtcE1vZGUgLCBkb2NDb21wb25lbnRzUmVuZGVyZWQgLCBsb2NhbGUgLCBzY3JpcHRMb2FkZXIgLCBfX05FWFRfREFUQV9fICB9ID0gKDAsIF9odG1sY29udGV4dC51c2VIdG1sQ29udGV4dCkoKTtcbiAgICBkb2NDb21wb25lbnRzUmVuZGVyZWQuSHRtbCA9IHRydWU7XG4gICAgaGFuZGxlRG9jdW1lbnRTY3JpcHRMb2FkZXJJdGVtcyhzY3JpcHRMb2FkZXIsIF9fTkVYVF9EQVRBX18sIHByb3BzKTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiaHRtbFwiLCB7XG4gICAgICAgIC4uLnByb3BzLFxuICAgICAgICBsYW5nOiBwcm9wcy5sYW5nIHx8IGxvY2FsZSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGFtcDogcHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FICE9PSBcImVkZ2VcIiAmJiBpbkFtcE1vZGUgPyBcIlwiIDogdW5kZWZpbmVkLFxuICAgICAgICBcImRhdGEtYW1wZGV2bW9kZVwiOiBwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiICYmIGluQW1wTW9kZSAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBcIlwiIDogdW5kZWZpbmVkXG4gICAgfSk7XG59XG5mdW5jdGlvbiBNYWluKCkge1xuICAgIGNvbnN0IHsgZG9jQ29tcG9uZW50c1JlbmRlcmVkICB9ID0gKDAsIF9odG1sY29udGV4dC51c2VIdG1sQ29udGV4dCkoKTtcbiAgICBkb2NDb21wb25lbnRzUmVuZGVyZWQuTWFpbiA9IHRydWU7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJuZXh0LWpzLWludGVybmFsLWJvZHktcmVuZGVyLXRhcmdldFwiLCBudWxsKTtcbn1cbmNsYXNzIERvY3VtZW50IGV4dGVuZHMgX3JlYWN0LmRlZmF1bHQuQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICogYGdldEluaXRpYWxQcm9wc2AgaG9vayByZXR1cm5zIHRoZSBjb250ZXh0IG9iamVjdCB3aXRoIHRoZSBhZGRpdGlvbiBvZiBgcmVuZGVyUGFnZWAuXG4gICAqIGByZW5kZXJQYWdlYCBjYWxsYmFjayBleGVjdXRlcyBgUmVhY3RgIHJlbmRlcmluZyBsb2dpYyBzeW5jaHJvbm91c2x5IHRvIHN1cHBvcnQgc2VydmVyLXJlbmRlcmluZyB3cmFwcGVyc1xuICAgKi8gc3RhdGljIGdldEluaXRpYWxQcm9wcyhjdHgpIHtcbiAgICAgICAgcmV0dXJuIGN0eC5kZWZhdWx0R2V0SW5pdGlhbFByb3BzKGN0eCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChIdG1sLCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoSGVhZCwgbnVsbCksIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImJvZHlcIiwgbnVsbCwgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE1haW4sIG51bGwpLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTmV4dFNjcmlwdCwgbnVsbCkpKTtcbiAgICB9XG59XG4vLyBBZGQgYSBzcGVjaWFsIHByb3BlcnR5IHRvIHRoZSBidWlsdC1pbiBgRG9jdW1lbnRgIGNvbXBvbmVudCBzbyBsYXRlciB3ZSBjYW5cbi8vIGlkZW50aWZ5IGlmIGEgdXNlciBjdXN0b21pemVkIGBEb2N1bWVudGAgaXMgdXNlZCBvciBub3QuXG5jb25zdCBJbnRlcm5hbEZ1bmN0aW9uRG9jdW1lbnQgPSBmdW5jdGlvbiBJbnRlcm5hbEZ1bmN0aW9uRG9jdW1lbnQoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChIdG1sLCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoSGVhZCwgbnVsbCksIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImJvZHlcIiwgbnVsbCwgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE1haW4sIG51bGwpLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTmV4dFNjcmlwdCwgbnVsbCkpKTtcbn07XG5Eb2N1bWVudFtfY29uc3RhbnRzLk5FWFRfQlVJTFRJTl9ET0NVTUVOVF0gPSBJbnRlcm5hbEZ1bmN0aW9uRG9jdW1lbnQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9kb2N1bWVudC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJIZWFkIiwiTmV4dFNjcmlwdCIsIkh0bWwiLCJNYWluIiwiZGVmYXVsdCIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIkRvY3VtZW50IiwiX3JlYWN0IiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwicmVxdWlyZSIsIl9jb25zdGFudHMiLCJfZ2V0cGFnZWZpbGVzIiwiX2h0bWxlc2NhcGUiLCJfaXNlcnJvciIsIl9odG1sY29udGV4dCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJsYXJnZVBhZ2VEYXRhV2FybmluZ3MiLCJTZXQiLCJnZXREb2N1bWVudEZpbGVzIiwiYnVpbGRNYW5pZmVzdCIsInBhdGhuYW1lIiwiaW5BbXBNb2RlIiwic2hhcmVkRmlsZXMiLCJnZXRQYWdlRmlsZXMiLCJwYWdlRmlsZXMiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9SVU5USU1FIiwiYWxsRmlsZXMiLCJnZXRQb2x5ZmlsbFNjcmlwdHMiLCJjb250ZXh0IiwicHJvcHMiLCJhc3NldFByZWZpeCIsImFzc2V0UXVlcnlTdHJpbmciLCJkaXNhYmxlT3B0aW1pemVkTG9hZGluZyIsImNyb3NzT3JpZ2luIiwicG9seWZpbGxGaWxlcyIsImZpbHRlciIsInBvbHlmaWxsIiwiZW5kc1dpdGgiLCJtYXAiLCJjcmVhdGVFbGVtZW50Iiwia2V5IiwiZGVmZXIiLCJub25jZSIsIm5vTW9kdWxlIiwic3JjIiwiaGFzQ29tcG9uZW50UHJvcHMiLCJjaGlsZCIsIkFtcFN0eWxlcyIsInN0eWxlcyIsImN1clN0eWxlcyIsIkFycmF5IiwiaXNBcnJheSIsImNoaWxkcmVuIiwiaGFzU3R5bGVzIiwiZWwiLCJfZWxfcHJvcHMiLCJfZWxfcHJvcHNfZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImZvckVhY2giLCJwdXNoIiwic3R5bGUiLCJqb2luIiwicmVwbGFjZSIsImdldER5bmFtaWNDaHVua3MiLCJmaWxlcyIsImR5bmFtaWNJbXBvcnRzIiwiaXNEZXZlbG9wbWVudCIsImZpbGUiLCJpbmNsdWRlcyIsImFzeW5jIiwiZW5jb2RlVVJJIiwiZ2V0U2NyaXB0cyIsIl9idWlsZE1hbmlmZXN0X2xvd1ByaW9yaXR5RmlsZXMiLCJub3JtYWxTY3JpcHRzIiwibG93UHJpb3JpdHlTY3JpcHRzIiwibG93UHJpb3JpdHlGaWxlcyIsImdldFByZU5leHRXb3JrZXJTY3JpcHRzIiwic2NyaXB0TG9hZGVyIiwibmV4dFNjcmlwdFdvcmtlcnMiLCJwYXJ0eXRvd25TbmlwcGV0IiwiX19ub25fd2VicGFja19yZXF1aXJlX18iLCJ1c2VyRGVmaW5lZENvbmZpZyIsImZpbmQiLCJfY2hpbGRfcHJvcHMiLCJfY2hpbGRfcHJvcHNfZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJsZW5ndGgiLCJGcmFnbWVudCIsIndvcmtlciIsImluZGV4Iiwic3RyYXRlZ3kiLCJzY3JpcHRDaGlsZHJlbiIsInNjcmlwdFByb3BzIiwic3JjUHJvcHMiLCJFcnJvciIsInR5cGUiLCJlcnIiLCJjb2RlIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwiZ2V0UHJlTmV4dFNjcmlwdHMiLCJ3ZWJXb3JrZXJTY3JpcHRzIiwiYmVmb3JlSW50ZXJhY3RpdmVTY3JpcHRzIiwiYmVmb3JlSW50ZXJhY3RpdmUiLCJzY3JpcHQiLCJnZXRIZWFkSFRNTFByb3BzIiwicmVzdFByb3BzIiwiaGVhZFByb3BzIiwiZ2V0QW1wUGF0aCIsImFtcFBhdGgiLCJhc1BhdGgiLCJnZXROZXh0Rm9udExpbmtUYWdzIiwibmV4dEZvbnRNYW5pZmVzdCIsImRhbmdlcm91c0FzUGF0aCIsInByZWNvbm5lY3QiLCJwcmVsb2FkIiwiYXBwRm9udHNFbnRyeSIsInBhZ2VzIiwicGFnZUZvbnRzRW50cnkiLCJwcmVsb2FkZWRGb250RmlsZXMiLCJwcmVjb25uZWN0VG9TZWxmIiwicGFnZXNVc2luZ1NpemVBZGp1c3QiLCJyZWwiLCJocmVmIiwiZm9udEZpbGUiLCJleHQiLCJleGVjIiwiYXMiLCJDb21wb25lbnQiLCJfIiwiY29udGV4dFR5cGUiLCJIdG1sQ29udGV4dCIsImdldENzc0xpbmtzIiwib3B0aW1pemVDc3MiLCJvcHRpbWl6ZUZvbnRzIiwiY3NzRmlsZXMiLCJmIiwidW5tYW5nZWRGaWxlcyIsImR5bmFtaWNDc3NGaWxlcyIsImZyb20iLCJleGlzdGluZyIsImhhcyIsImNzc0xpbmtFbGVtZW50cyIsImlzU2hhcmVkRmlsZSIsImlzVW5tYW5hZ2VkRmlsZSIsInVuZGVmaW5lZCIsIm1ha2VTdHlsZXNoZWV0SW5lcnQiLCJnZXRQcmVsb2FkRHluYW1pY0NodW5rcyIsIkJvb2xlYW4iLCJnZXRQcmVsb2FkTWFpbkxpbmtzIiwicHJlbG9hZEZpbGVzIiwiZ2V0QmVmb3JlSW50ZXJhY3RpdmVJbmxpbmVTY3JpcHRzIiwiaHRtbCIsImlkIiwiX19ORVhUX0NST1NTX09SSUdJTiIsIm5vZGUiLCJDaGlsZHJlbiIsImMiLCJfY19wcm9wcyIsIl9jX3Byb3BzMSIsIk9QVElNSVpFRF9GT05UX1BST1ZJREVSUyIsInNvbWUiLCJ1cmwiLCJfY19wcm9wc19ocmVmIiwic3RhcnRzV2l0aCIsIm5ld1Byb3BzIiwiY2xvbmVFbGVtZW50IiwicmVuZGVyIiwiaHlicmlkQW1wIiwiY2Fub25pY2FsQmFzZSIsIl9fTkVYVF9EQVRBX18iLCJoZWFkVGFncyIsInVuc3RhYmxlX3J1bnRpbWVKUyIsInVuc3RhYmxlX0pzUHJlbG9hZCIsImRpc2FibGVSdW50aW1lSlMiLCJkaXNhYmxlSnNQcmVsb2FkIiwiZG9jQ29tcG9uZW50c1JlbmRlcmVkIiwiaGVhZCIsImNzc1ByZWxvYWRzIiwib3RoZXJIZWFkRWxlbWVudHMiLCJtZXRhVGFnIiwic3RyaWN0TmV4dEhlYWQiLCJjb250ZW50IiwiY29uY2F0IiwidG9BcnJheSIsImlzUmVhY3RIZWxtZXQiLCJfY2hpbGRfcHJvcHMxIiwiaGFzQW1waHRtbFJlbCIsImhhc0Nhbm9uaWNhbFJlbCIsImJhZFByb3AiLCJpbmRleE9mIiwia2V5cyIsInByb3AiLCJwYWdlIiwibmV4dEZvbnRMaW5rVGFncyIsImNvdW50IiwidG9TdHJpbmciLCJjbGVhbkFtcFBhdGgiLCJoYW5kbGVEb2N1bWVudFNjcmlwdExvYWRlckl0ZW1zIiwiX2NoaWxkcmVuX2ZpbmQiLCJfY2hpbGRyZW5fZmluZF9wcm9wcyIsIl9jaGlsZHJlbl9maW5kMSIsIl9jaGlsZHJlbl9maW5kX3Byb3BzMSIsInNjcmlwdExvYWRlckl0ZW1zIiwiaGVhZENoaWxkcmVuIiwiYm9keUNoaWxkcmVuIiwiY29tYmluZWRDaGlsZHJlbiIsIl9jaGlsZF90eXBlIiwiX19uZXh0U2NyaXB0IiwiZ2V0SW5saW5lU2NyaXB0U291cmNlIiwibGFyZ2VQYWdlRGF0YUJ5dGVzIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJodG1sRXNjYXBlSnNvblN0cmluZyIsImJ5dGVzIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJidWZmZXIiLCJieXRlTGVuZ3RoIiwiQnVmZmVyIiwicHJldHR5Qnl0ZXMiLCJhZGQiLCJhbXBEZXZGaWxlcyIsImRldkZpbGVzIiwibG9jYWxlIiwidXNlSHRtbENvbnRleHQiLCJsYW5nIiwiYW1wIiwiZ2V0SW5pdGlhbFByb3BzIiwiY3R4IiwiZGVmYXVsdEdldEluaXRpYWxQcm9wcyIsIkludGVybmFsRnVuY3Rpb25Eb2N1bWVudCIsIk5FWFRfQlVJTFRJTl9ET0NVTUVOVCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/pages/_document.js\n");

/***/ }),

/***/ "./node_modules/next/dist/pages/_error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/pages/_error.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return Error;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"./node_modules/@swc/helpers/cjs/_interop_require_default.cjs\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"react\"));\nconst _head = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\"));\nconst statusCodes = {\n    400: \"Bad Request\",\n    404: \"This page could not be found\",\n    405: \"Method Not Allowed\",\n    500: \"Internal Server Error\"\n};\nfunction _getInitialProps(param) {\n    let { res, err } = param;\n    const statusCode = res && res.statusCode ? res.statusCode : err ? err.statusCode : 404;\n    return {\n        statusCode\n    };\n}\nconst styles = {\n    error: {\n        // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n        fontFamily: 'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n        height: \"100vh\",\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    desc: {\n        lineHeight: \"48px\"\n    },\n    h1: {\n        display: \"inline-block\",\n        margin: \"0 20px 0 0\",\n        paddingRight: 23,\n        fontSize: 24,\n        fontWeight: 500,\n        verticalAlign: \"top\"\n    },\n    h2: {\n        fontSize: 14,\n        fontWeight: 400,\n        lineHeight: \"28px\"\n    },\n    wrap: {\n        display: \"inline-block\"\n    }\n};\nclass Error extends _react.default.Component {\n    render() {\n        const { statusCode, withDarkMode = true } = this.props;\n        const title = this.props.title || statusCodes[statusCode] || \"An unexpected error has occurred\";\n        return /*#__PURE__*/ _react.default.createElement(\"div\", {\n            style: styles.error\n        }, /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"title\", null, statusCode ? statusCode + \": \" + title : \"Application error: a client-side exception has occurred\")), /*#__PURE__*/ _react.default.createElement(\"div\", {\n            style: styles.desc\n        }, /*#__PURE__*/ _react.default.createElement(\"style\", {\n            dangerouslySetInnerHTML: {\n                /* CSS minified from\n                body { margin: 0; color: #000; background: #fff; }\n                .next-error-h1 {\n                  border-right: 1px solid rgba(0, 0, 0, .3);\n                }\n\n                ${\n                  withDarkMode\n                    ? `@media (prefers-color-scheme: dark) {\n                  body { color: #fff; background: #000; }\n                  .next-error-h1 {\n                    border-right: 1px solid rgba(255, 255, 255, .3);\n                  }\n                }`\n                    : ''\n                }\n               */ __html: \"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}\" + (withDarkMode ? \"@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}\" : \"\")\n            }\n        }), statusCode ? /*#__PURE__*/ _react.default.createElement(\"h1\", {\n            className: \"next-error-h1\",\n            style: styles.h1\n        }, statusCode) : null, /*#__PURE__*/ _react.default.createElement(\"div\", {\n            style: styles.wrap\n        }, /*#__PURE__*/ _react.default.createElement(\"h2\", {\n            style: styles.h2\n        }, this.props.title || statusCode ? title : /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, \"Application error: a client-side exception has occurred (see the browser console for more information)\"), \".\"))));\n    }\n}\n(()=>{\n    Error.displayName = \"ErrorPage\";\n})();\n(()=>{\n    Error.getInitialProps = _getInitialProps;\n})();\n(()=>{\n    Error.origGetInitialProps = _getInitialProps;\n})();\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=_error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3BhZ2VzL19lcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsMkNBQTBDO0lBQ3RDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyw2R0FBeUM7QUFDbEYsTUFBTUMsU0FBUyxXQUFXLEdBQUdGLHlCQUF5QkcsQ0FBQyxDQUFDRixtQkFBT0EsQ0FBQyxvQkFBTztBQUN2RSxNQUFNRyxRQUFRLFdBQVcsR0FBR0oseUJBQXlCRyxDQUFDLENBQUNGLG1CQUFPQSxDQUFDLHVFQUFvQjtBQUNuRixNQUFNSSxjQUFjO0lBQ2hCLEtBQUs7SUFDTCxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7QUFDVDtBQUNBLFNBQVNDLGlCQUFpQkMsS0FBSztJQUMzQixJQUFJLEVBQUVDLEdBQUcsRUFBR0MsR0FBRyxFQUFHLEdBQUdGO0lBQ3JCLE1BQU1HLGFBQWFGLE9BQU9BLElBQUlFLFVBQVUsR0FBR0YsSUFBSUUsVUFBVSxHQUFHRCxNQUFNQSxJQUFJQyxVQUFVLEdBQUc7SUFDbkYsT0FBTztRQUNIQTtJQUNKO0FBQ0o7QUFDQSxNQUFNQyxTQUFTO0lBQ1hDLE9BQU87UUFDSCwwRkFBMEY7UUFDMUZDLFlBQVk7UUFDWkMsUUFBUTtRQUNSQyxXQUFXO1FBQ1hDLFNBQVM7UUFDVEMsZUFBZTtRQUNmQyxZQUFZO1FBQ1pDLGdCQUFnQjtJQUNwQjtJQUNBQyxNQUFNO1FBQ0ZDLFlBQVk7SUFDaEI7SUFDQUMsSUFBSTtRQUNBTixTQUFTO1FBQ1RPLFFBQVE7UUFDUkMsY0FBYztRQUNkQyxVQUFVO1FBQ1ZDLFlBQVk7UUFDWkMsZUFBZTtJQUNuQjtJQUNBQyxJQUFJO1FBQ0FILFVBQVU7UUFDVkMsWUFBWTtRQUNaTCxZQUFZO0lBQ2hCO0lBQ0FRLE1BQU07UUFDRmIsU0FBUztJQUNiO0FBQ0o7QUFDQSxNQUFNakIsY0FBY0csT0FBTzRCLE9BQU8sQ0FBQ0MsU0FBUztJQUN4Q0MsU0FBUztRQUNMLE1BQU0sRUFBRXRCLFVBQVUsRUFBR3VCLGVBQWMsSUFBSSxFQUFHLEdBQUcsSUFBSSxDQUFDQyxLQUFLO1FBQ3ZELE1BQU1DLFFBQVEsSUFBSSxDQUFDRCxLQUFLLENBQUNDLEtBQUssSUFBSTlCLFdBQVcsQ0FBQ0ssV0FBVyxJQUFJO1FBQzdELE9BQU8sV0FBVyxHQUFHUixPQUFPNEIsT0FBTyxDQUFDTSxhQUFhLENBQUMsT0FBTztZQUNyREMsT0FBTzFCLE9BQU9DLEtBQUs7UUFDdkIsR0FBRyxXQUFXLEdBQUdWLE9BQU80QixPQUFPLENBQUNNLGFBQWEsQ0FBQ2hDLE1BQU0wQixPQUFPLEVBQUUsTUFBTSxXQUFXLEdBQUc1QixPQUFPNEIsT0FBTyxDQUFDTSxhQUFhLENBQUMsU0FBUyxNQUFNMUIsYUFBYUEsYUFBYSxPQUFPeUIsUUFBUSw2REFBNkQsV0FBVyxHQUFHakMsT0FBTzRCLE9BQU8sQ0FBQ00sYUFBYSxDQUFDLE9BQU87WUFDalJDLE9BQU8xQixPQUFPUyxJQUFJO1FBQ3RCLEdBQUcsV0FBVyxHQUFHbEIsT0FBTzRCLE9BQU8sQ0FBQ00sYUFBYSxDQUFDLFNBQVM7WUFDbkRFLHlCQUF5QjtnQkFDckI7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFnQkQsR0FBR0MsUUFBUSxtR0FBb0dOLENBQUFBLGVBQWUsb0lBQW9JLEVBQUM7WUFDdFE7UUFDSixJQUFJdkIsYUFBYSxXQUFXLEdBQUdSLE9BQU80QixPQUFPLENBQUNNLGFBQWEsQ0FBQyxNQUFNO1lBQzlESSxXQUFXO1lBQ1hILE9BQU8xQixPQUFPVyxFQUFFO1FBQ3BCLEdBQUdaLGNBQWMsTUFBTSxXQUFXLEdBQUdSLE9BQU80QixPQUFPLENBQUNNLGFBQWEsQ0FBQyxPQUFPO1lBQ3JFQyxPQUFPMUIsT0FBT2tCLElBQUk7UUFDdEIsR0FBRyxXQUFXLEdBQUczQixPQUFPNEIsT0FBTyxDQUFDTSxhQUFhLENBQUMsTUFBTTtZQUNoREMsT0FBTzFCLE9BQU9pQixFQUFFO1FBQ3BCLEdBQUcsSUFBSSxDQUFDTSxLQUFLLENBQUNDLEtBQUssSUFBSXpCLGFBQWF5QixRQUFRLFdBQVcsR0FBR2pDLE9BQU80QixPQUFPLENBQUNNLGFBQWEsQ0FBQ2xDLE9BQU80QixPQUFPLENBQUNXLFFBQVEsRUFBRSxNQUFNLDJHQUEyRztJQUNyTztBQUNKO0FBQ0M7SUFDRzFDLE1BQU0yQyxXQUFXLEdBQUc7QUFDeEI7QUFDQztJQUNHM0MsTUFBTTRDLGVBQWUsR0FBR3JDO0FBQzVCO0FBQ0M7SUFDR1AsTUFBTTZDLG1CQUFtQixHQUFHdEM7QUFDaEM7QUFFQSxJQUFJLENBQUMsT0FBT1gsUUFBUW1DLE9BQU8sS0FBSyxjQUFlLE9BQU9uQyxRQUFRbUMsT0FBTyxLQUFLLFlBQVluQyxRQUFRbUMsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPbkMsUUFBUW1DLE9BQU8sQ0FBQ2UsVUFBVSxLQUFLLGFBQWE7SUFDcktwRCxPQUFPQyxjQUFjLENBQUNDLFFBQVFtQyxPQUFPLEVBQUUsY0FBYztRQUFFbEMsT0FBTztJQUFLO0lBQ25FSCxPQUFPcUQsTUFBTSxDQUFDbkQsUUFBUW1DLE9BQU8sRUFBRW5DO0lBQy9Cb0QsT0FBT3BELE9BQU8sR0FBR0EsUUFBUW1DLE9BQU87QUFDbEMsRUFFQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLWFwcC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvcGFnZXMvX2Vycm9yLmpzPzE4ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBFcnJvcjtcbiAgICB9XG59KTtcbmNvbnN0IF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvXy9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHRcIik7XG5jb25zdCBfcmVhY3QgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdC5fKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBfaGVhZCA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0Ll8ocmVxdWlyZShcIi4uL3NoYXJlZC9saWIvaGVhZFwiKSk7XG5jb25zdCBzdGF0dXNDb2RlcyA9IHtcbiAgICA0MDA6IFwiQmFkIFJlcXVlc3RcIixcbiAgICA0MDQ6IFwiVGhpcyBwYWdlIGNvdWxkIG5vdCBiZSBmb3VuZFwiLFxuICAgIDQwNTogXCJNZXRob2QgTm90IEFsbG93ZWRcIixcbiAgICA1MDA6IFwiSW50ZXJuYWwgU2VydmVyIEVycm9yXCJcbn07XG5mdW5jdGlvbiBfZ2V0SW5pdGlhbFByb3BzKHBhcmFtKSB7XG4gICAgbGV0IHsgcmVzICwgZXJyICB9ID0gcGFyYW07XG4gICAgY29uc3Qgc3RhdHVzQ29kZSA9IHJlcyAmJiByZXMuc3RhdHVzQ29kZSA/IHJlcy5zdGF0dXNDb2RlIDogZXJyID8gZXJyLnN0YXR1c0NvZGUgOiA0MDQ7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzQ29kZVxuICAgIH07XG59XG5jb25zdCBzdHlsZXMgPSB7XG4gICAgZXJyb3I6IHtcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplL2Jsb2IvbWFpbi9tb2Rlcm4tbm9ybWFsaXplLmNzcyNMMzgtTDUyXG4gICAgICAgIGZvbnRGYW1pbHk6ICdzeXN0ZW0tdWksXCJTZWdvZSBVSVwiLFJvYm90byxIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZixcIkFwcGxlIENvbG9yIEVtb2ppXCIsXCJTZWdvZSBVSSBFbW9qaVwiJyxcbiAgICAgICAgaGVpZ2h0OiBcIjEwMHZoXCIsXG4gICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiXG4gICAgfSxcbiAgICBkZXNjOiB7XG4gICAgICAgIGxpbmVIZWlnaHQ6IFwiNDhweFwiXG4gICAgfSxcbiAgICBoMToge1xuICAgICAgICBkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLFxuICAgICAgICBtYXJnaW46IFwiMCAyMHB4IDAgMFwiLFxuICAgICAgICBwYWRkaW5nUmlnaHQ6IDIzLFxuICAgICAgICBmb250U2l6ZTogMjQsXG4gICAgICAgIGZvbnRXZWlnaHQ6IDUwMCxcbiAgICAgICAgdmVydGljYWxBbGlnbjogXCJ0b3BcIlxuICAgIH0sXG4gICAgaDI6IHtcbiAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICBmb250V2VpZ2h0OiA0MDAsXG4gICAgICAgIGxpbmVIZWlnaHQ6IFwiMjhweFwiXG4gICAgfSxcbiAgICB3cmFwOiB7XG4gICAgICAgIGRpc3BsYXk6IFwiaW5saW5lLWJsb2NrXCJcbiAgICB9XG59O1xuY2xhc3MgRXJyb3IgZXh0ZW5kcyBfcmVhY3QuZGVmYXVsdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBzdGF0dXNDb2RlICwgd2l0aERhcmtNb2RlID10cnVlICB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgdGl0bGUgPSB0aGlzLnByb3BzLnRpdGxlIHx8IHN0YXR1c0NvZGVzW3N0YXR1c0NvZGVdIHx8IFwiQW4gdW5leHBlY3RlZCBlcnJvciBoYXMgb2NjdXJyZWRcIjtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgICBzdHlsZTogc3R5bGVzLmVycm9yXG4gICAgICAgIH0sIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVhZC5kZWZhdWx0LCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiLCBudWxsLCBzdGF0dXNDb2RlID8gc3RhdHVzQ29kZSArIFwiOiBcIiArIHRpdGxlIDogXCJBcHBsaWNhdGlvbiBlcnJvcjogYSBjbGllbnQtc2lkZSBleGNlcHRpb24gaGFzIG9jY3VycmVkXCIpKSwgLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMuZGVzY1xuICAgICAgICB9LCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiLCB7XG4gICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgIC8qIENTUyBtaW5pZmllZCBmcm9tXG4gICAgICAgICAgICAgICAgYm9keSB7IG1hcmdpbjogMDsgY29sb3I6ICMwMDA7IGJhY2tncm91bmQ6ICNmZmY7IH1cbiAgICAgICAgICAgICAgICAubmV4dC1lcnJvci1oMSB7XG4gICAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIC4zKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgICAgd2l0aERhcmtNb2RlXG4gICAgICAgICAgICAgICAgICAgID8gYEBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgICAgICAgICAgICAgICAgIGJvZHkgeyBjb2xvcjogI2ZmZjsgYmFja2dyb3VuZDogIzAwMDsgfVxuICAgICAgICAgICAgICAgICAgLm5leHQtZXJyb3ItaDEge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIC4zKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9YFxuICAgICAgICAgICAgICAgICAgICA6ICcnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgKi8gX19odG1sOiBcImJvZHl7Y29sb3I6IzAwMDtiYWNrZ3JvdW5kOiNmZmY7bWFyZ2luOjB9Lm5leHQtZXJyb3ItaDF7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCByZ2JhKDAsMCwwLC4zKX1cIiArICh3aXRoRGFya01vZGUgPyBcIkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6ZGFyayl7Ym9keXtjb2xvcjojZmZmO2JhY2tncm91bmQ6IzAwMH0ubmV4dC1lcnJvci1oMXtib3JkZXItcmlnaHQ6MXB4IHNvbGlkIHJnYmEoMjU1LDI1NSwyNTUsLjMpfX1cIiA6IFwiXCIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCBzdGF0dXNDb2RlID8gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5leHQtZXJyb3ItaDFcIixcbiAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMuaDFcbiAgICAgICAgfSwgc3RhdHVzQ29kZSkgOiBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICAgICAgc3R5bGU6IHN0eWxlcy53cmFwXG4gICAgICAgIH0sIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImgyXCIsIHtcbiAgICAgICAgICAgIHN0eWxlOiBzdHlsZXMuaDJcbiAgICAgICAgfSwgdGhpcy5wcm9wcy50aXRsZSB8fCBzdGF0dXNDb2RlID8gdGl0bGUgOiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIFwiQXBwbGljYXRpb24gZXJyb3I6IGEgY2xpZW50LXNpZGUgZXhjZXB0aW9uIGhhcyBvY2N1cnJlZCAoc2VlIHRoZSBicm93c2VyIGNvbnNvbGUgZm9yIG1vcmUgaW5mb3JtYXRpb24pXCIpLCBcIi5cIikpKSk7XG4gICAgfVxufVxuKCgpPT57XG4gICAgRXJyb3IuZGlzcGxheU5hbWUgPSBcIkVycm9yUGFnZVwiO1xufSkoKTtcbigoKT0+e1xuICAgIEVycm9yLmdldEluaXRpYWxQcm9wcyA9IF9nZXRJbml0aWFsUHJvcHM7XG59KSgpO1xuKCgpPT57XG4gICAgRXJyb3Iub3JpZ0dldEluaXRpYWxQcm9wcyA9IF9nZXRJbml0aWFsUHJvcHM7XG59KSgpO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1fZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIkVycm9yIiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl8iLCJfaGVhZCIsInN0YXR1c0NvZGVzIiwiX2dldEluaXRpYWxQcm9wcyIsInBhcmFtIiwicmVzIiwiZXJyIiwic3RhdHVzQ29kZSIsInN0eWxlcyIsImVycm9yIiwiZm9udEZhbWlseSIsImhlaWdodCIsInRleHRBbGlnbiIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZGVzYyIsImxpbmVIZWlnaHQiLCJoMSIsIm1hcmdpbiIsInBhZGRpbmdSaWdodCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsInZlcnRpY2FsQWxpZ24iLCJoMiIsIndyYXAiLCJkZWZhdWx0IiwiQ29tcG9uZW50IiwicmVuZGVyIiwid2l0aERhcmtNb2RlIiwicHJvcHMiLCJ0aXRsZSIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiX19odG1sIiwiY2xhc3NOYW1lIiwiRnJhZ21lbnQiLCJkaXNwbGF5TmFtZSIsImdldEluaXRpYWxQcm9wcyIsIm9yaWdHZXRJbml0aWFsUHJvcHMiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/pages/_error.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/head.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/head.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    defaultHead: function() {\n        return defaultHead;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"./node_modules/@swc/helpers/cjs/_interop_require_default.cjs\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"react\"));\nconst _sideeffect = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./side-effect */ \"./side-effect\"));\nconst _ampcontext = __webpack_require__(/*! ./amp-context */ \"./amp-context\");\nconst _headmanagercontext = __webpack_require__(/*! ./head-manager-context */ \"./head-manager-context\");\nconst _ampmode = __webpack_require__(/*! ./amp-mode */ \"./amp-mode\");\nconst _warnonce = __webpack_require__(/*! ./utils/warn-once */ \"./utils/warn-once\");\nfunction defaultHead(inAmpMode) {\n    if (inAmpMode === void 0) inAmpMode = false;\n    const head = [\n        /*#__PURE__*/ _react.default.createElement(\"meta\", {\n            charSet: \"utf-8\"\n        })\n    ];\n    if (!inAmpMode) {\n        head.push(/*#__PURE__*/ _react.default.createElement(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width\"\n        }));\n    }\n    return head;\n}\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === \"string\" || typeof child === \"number\") {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === _react.default.Fragment) {\n        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{\n            if (typeof fragmentChild === \"string\" || typeof fragmentChild === \"number\") {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = [\n    \"name\",\n    \"httpEquiv\",\n    \"charSet\",\n    \"itemProp\"\n];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/ function unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h)=>{\n        let isUnique = true;\n        let hasKey = false;\n        if (h.key && typeof h.key !== \"number\" && h.key.indexOf(\"$\") > 0) {\n            hasKey = true;\n            const key = h.key.slice(h.key.indexOf(\"$\") + 1);\n            if (keys.has(key)) {\n                isUnique = false;\n            } else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch(h.type){\n            case \"title\":\n            case \"base\":\n                if (tags.has(h.type)) {\n                    isUnique = false;\n                } else {\n                    tags.add(h.type);\n                }\n                break;\n            case \"meta\":\n                for(let i = 0, len = METATYPES.length; i < len; i++){\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype)) continue;\n                    if (metatype === \"charSet\") {\n                        if (metaTypes.has(metatype)) {\n                            isUnique = false;\n                        } else {\n                            metaTypes.add(metatype);\n                        }\n                    } else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if ((metatype !== \"name\" || !hasKey) && categories.has(category)) {\n                            isUnique = false;\n                        } else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return isUnique;\n    };\n}\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */ function reduceComponents(headChildrenElements, props) {\n    const { inAmpMode } = props;\n    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{\n        const key = c.key || i;\n        if (false) {}\n        if (true) {\n            // omit JSON-LD structured data snippets from the warning\n            if (c.type === \"script\" && c.props[\"type\"] !== \"application/ld+json\") {\n                const srcMessage = c.props[\"src\"] ? '<script> tag with src=\"' + c.props[\"src\"] + '\"' : \"inline <script>\";\n                (0, _warnonce.warnOnce)(\"Do not add <script> tags using next/head (see \" + srcMessage + \"). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component\");\n            } else if (c.type === \"link\" && c.props[\"rel\"] === \"stylesheet\") {\n                (0, _warnonce.warnOnce)('Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"' + c.props[\"href\"] + '\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component');\n            }\n        }\n        return /*#__PURE__*/ _react.default.cloneElement(c, {\n            key\n        });\n    });\n}\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */ function Head(param) {\n    let { children } = param;\n    const ampState = (0, _react.useContext)(_ampcontext.AmpStateContext);\n    const headManager = (0, _react.useContext)(_headmanagercontext.HeadManagerContext);\n    return /*#__PURE__*/ _react.default.createElement(_sideeffect.default, {\n        reduceComponentsToState: reduceComponents,\n        headManager: headManager,\n        inAmpMode: (0, _ampmode.isInAmpMode)(ampState)\n    }, children);\n}\nconst _default = Head;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/head.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Context_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Context/index */ \"./Context/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_hot_toast__WEBPACK_IMPORTED_MODULE_2__, _Context_index__WEBPACK_IMPORTED_MODULE_4__]);\n([react_hot_toast__WEBPACK_IMPORTED_MODULE_2__, _Context_index__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nfunction App({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Context_index__WEBPACK_IMPORTED_MODULE_4__.StateContextProvider, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                        lineNumber: 11,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.Toaster, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                        lineNumber: 12,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"vendor/global/global.min.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 15,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"vendor/bootstrap-select/dist/js/bootstrap-select.min.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"vendor/chart.js/chart.bundle.min.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"vendor/owl-carousel/owl.carousel.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"vendor/apexchart/apexchart.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"js/custom.min.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 21,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"js/deznav-init.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"js/demo.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"js/styleSwitcher.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\PC\\\\Downloads\\\\healthcare-app\\\\pages\\\\_app.js\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDb0I7QUFDbEI7QUFFeUI7QUFFekMsU0FBU0ksSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRTtJQUNsRCxxQkFDRTs7MEJBQ0UsOERBQUNILGdFQUFvQkE7O2tDQUNuQiw4REFBQ0U7d0JBQVcsR0FBR0MsU0FBUzs7Ozs7O2tDQUN4Qiw4REFBQ0osb0RBQU9BOzs7Ozs7Ozs7OzswQkFHViw4REFBQ0s7Z0JBQU9DLEtBQUk7Ozs7OzswQkFDWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7OzswQkFDWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7OzswQkFDWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7OzswQkFFWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7OzswQkFDWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7OzswQkFDWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7OzswQkFDWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7OzswQkFDWiw4REFBQ0Q7Z0JBQU9DLEtBQUk7Ozs7Ozs7O0FBR2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHRoY2FyZS1hcHAvLi9wYWdlcy9fYXBwLmpzP2UwYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IHRvYXN0LCB7IFRvYXN0ZXIgfSBmcm9tIFwicmVhY3QtaG90LXRvYXN0XCI7XG5pbXBvcnQgXCIuLi9zdHlsZXMvZ2xvYmFscy5jc3NcIjtcblxuaW1wb3J0IHsgU3RhdGVDb250ZXh0UHJvdmlkZXIgfSBmcm9tIFwiLi4vQ29udGV4dC9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxTdGF0ZUNvbnRleHRQcm92aWRlcj5cbiAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgICAgICA8VG9hc3RlciAvPlxuICAgICAgPC9TdGF0ZUNvbnRleHRQcm92aWRlcj5cblxuICAgICAgPHNjcmlwdCBzcmM9XCJ2ZW5kb3IvZ2xvYmFsL2dsb2JhbC5taW4uanNcIj48L3NjcmlwdD5cbiAgICAgIDxzY3JpcHQgc3JjPVwidmVuZG9yL2Jvb3RzdHJhcC1zZWxlY3QvZGlzdC9qcy9ib290c3RyYXAtc2VsZWN0Lm1pbi5qc1wiPjwvc2NyaXB0PlxuICAgICAgPHNjcmlwdCBzcmM9XCJ2ZW5kb3IvY2hhcnQuanMvY2hhcnQuYnVuZGxlLm1pbi5qc1wiPjwvc2NyaXB0PlxuICAgICAgPHNjcmlwdCBzcmM9XCJ2ZW5kb3Ivb3dsLWNhcm91c2VsL293bC5jYXJvdXNlbC5qc1wiPjwvc2NyaXB0PlxuXG4gICAgICA8c2NyaXB0IHNyYz1cInZlbmRvci9hcGV4Y2hhcnQvYXBleGNoYXJ0LmpzXCI+PC9zY3JpcHQ+XG4gICAgICA8c2NyaXB0IHNyYz1cImpzL2N1c3RvbS5taW4uanNcIj48L3NjcmlwdD5cbiAgICAgIDxzY3JpcHQgc3JjPVwianMvZGV6bmF2LWluaXQuanNcIj48L3NjcmlwdD5cbiAgICAgIDxzY3JpcHQgc3JjPVwianMvZGVtby5qc1wiPjwvc2NyaXB0PlxuICAgICAgPHNjcmlwdCBzcmM9XCJqcy9zdHlsZVN3aXRjaGVyLmpzXCI+PC9zY3JpcHQ+XG4gICAgPC8+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiSGVhZCIsInRvYXN0IiwiVG9hc3RlciIsIlN0YXRlQ29udGV4dFByb3ZpZGVyIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwic2NyaXB0Iiwic3JjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return isError;\n    },\n    getProperError: function() {\n        return getProperError;\n    }\n});\nconst _isplainobject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === \"object\" && err !== null && \"name\" in err && \"message\" in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === \"undefined\") {\n            return new Error(\"An undefined error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n        if (err === null) {\n            return new Error(\"A null error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n    }\n    return new Error((0, _isplainobject.isPlainObject)(err) ? JSON.stringify(err) : err + \"\");\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FHTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx1QkFBdUIsbUJBQU8sQ0FBQyxvRUFBK0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLElBQXNDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLWFwcC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL2lzLWVycm9yLmpzPzE3OGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBkZWZhdWx0OiBudWxsLFxuICAgIGdldFByb3BlckVycm9yOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIGRlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNFcnJvcjtcbiAgICB9LFxuICAgIGdldFByb3BlckVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldFByb3BlckVycm9yO1xuICAgIH1cbn0pO1xuY29uc3QgX2lzcGxhaW5vYmplY3QgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9pcy1wbGFpbi1vYmplY3RcIik7XG5mdW5jdGlvbiBpc0Vycm9yKGVycikge1xuICAgIHJldHVybiB0eXBlb2YgZXJyID09PSBcIm9iamVjdFwiICYmIGVyciAhPT0gbnVsbCAmJiBcIm5hbWVcIiBpbiBlcnIgJiYgXCJtZXNzYWdlXCIgaW4gZXJyO1xufVxuZnVuY3Rpb24gZ2V0UHJvcGVyRXJyb3IoZXJyKSB7XG4gICAgaWYgKGlzRXJyb3IoZXJyKSkge1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAgICAgICAvLyBwcm92aWRlIGJldHRlciBlcnJvciBmb3IgY2FzZSB3aGVyZSBgdGhyb3cgdW5kZWZpbmVkYFxuICAgICAgICAvLyBpcyBjYWxsZWQgaW4gZGV2ZWxvcG1lbnRcbiAgICAgICAgaWYgKHR5cGVvZiBlcnIgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJBbiB1bmRlZmluZWQgZXJyb3Igd2FzIHRocm93biwgXCIgKyBcInNlZSBoZXJlIGZvciBtb3JlIGluZm86IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3RocmV3LXVuZGVmaW5lZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiQSBudWxsIGVycm9yIHdhcyB0aHJvd24sIFwiICsgXCJzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWRcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFcnJvcigoMCwgX2lzcGxhaW5vYmplY3QuaXNQbGFpbk9iamVjdCkoZXJyKSA/IEpTT04uc3RyaW5naWZ5KGVycikgOiBlcnIgKyBcIlwiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/pretty-bytes.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/lib/pretty-bytes.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*\nMIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return prettyBytes;\n    }\n}));\nconst UNITS = [\n    \"B\",\n    \"kB\",\n    \"MB\",\n    \"GB\",\n    \"TB\",\n    \"PB\",\n    \"EB\",\n    \"ZB\",\n    \"YB\"\n];\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/ const toLocaleString = (number, locale)=>{\n    let result = number;\n    if (typeof locale === \"string\") {\n        result = number.toLocaleString(locale);\n    } else if (locale === true) {\n        result = number.toLocaleString();\n    }\n    return result;\n};\nfunction prettyBytes(number, options) {\n    if (!Number.isFinite(number)) {\n        throw new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n    }\n    options = Object.assign({}, options);\n    if (options.signed && number === 0) {\n        return \" 0 B\";\n    }\n    const isNegative = number < 0;\n    const prefix = isNegative ? \"-\" : options.signed ? \"+\" : \"\";\n    if (isNegative) {\n        number = -number;\n    }\n    if (number < 1) {\n        const numberString = toLocaleString(number, options.locale);\n        return prefix + numberString + \" B\";\n    }\n    const exponent = Math.min(Math.floor(Math.log10(number) / 3), UNITS.length - 1);\n    number = Number((number / Math.pow(1000, exponent)).toPrecision(3));\n    const numberString = toLocaleString(number, options.locale);\n    const unit = UNITS[exponent];\n    return prefix + numberString + \" \" + unit;\n}\n\n//# sourceMappingURL=pretty-bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9wcmV0dHktYnl0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLEdBQWdCO0FBQ2hCLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDJDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGNBQWMsSUFBSSxPQUFPO0FBQ3RGO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWx0aGNhcmUtYXBwLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvcHJldHR5LWJ5dGVzLmpzP2ZmMzAiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbk1JVCBMaWNlbnNlXG5cbkNvcHlyaWdodCAoYykgU2luZHJlIFNvcmh1cyA8c2luZHJlc29yaHVzQGdtYWlsLmNvbT4gKHNpbmRyZXNvcmh1cy5jb20pXG5cblBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cbiovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcHJldHR5Qnl0ZXM7XG4gICAgfVxufSk7XG5jb25zdCBVTklUUyA9IFtcbiAgICBcIkJcIixcbiAgICBcImtCXCIsXG4gICAgXCJNQlwiLFxuICAgIFwiR0JcIixcbiAgICBcIlRCXCIsXG4gICAgXCJQQlwiLFxuICAgIFwiRUJcIixcbiAgICBcIlpCXCIsXG4gICAgXCJZQlwiXG5dO1xuLypcbkZvcm1hdHMgdGhlIGdpdmVuIG51bWJlciB1c2luZyBgTnVtYmVyI3RvTG9jYWxlU3RyaW5nYC5cbi0gSWYgbG9jYWxlIGlzIGEgc3RyaW5nLCB0aGUgdmFsdWUgaXMgZXhwZWN0ZWQgdG8gYmUgYSBsb2NhbGUta2V5IChmb3IgZXhhbXBsZTogYGRlYCkuXG4tIElmIGxvY2FsZSBpcyB0cnVlLCB0aGUgc3lzdGVtIGRlZmF1bHQgbG9jYWxlIGlzIHVzZWQgZm9yIHRyYW5zbGF0aW9uLlxuLSBJZiBubyB2YWx1ZSBmb3IgbG9jYWxlIGlzIHNwZWNpZmllZCwgdGhlIG51bWJlciBpcyByZXR1cm5lZCB1bm1vZGlmaWVkLlxuKi8gY29uc3QgdG9Mb2NhbGVTdHJpbmcgPSAobnVtYmVyLCBsb2NhbGUpPT57XG4gICAgbGV0IHJlc3VsdCA9IG51bWJlcjtcbiAgICBpZiAodHlwZW9mIGxvY2FsZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXN1bHQgPSBudW1iZXIudG9Mb2NhbGVTdHJpbmcobG9jYWxlKTtcbiAgICB9IGVsc2UgaWYgKGxvY2FsZSA9PT0gdHJ1ZSkge1xuICAgICAgICByZXN1bHQgPSBudW1iZXIudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5mdW5jdGlvbiBwcmV0dHlCeXRlcyhudW1iZXIsIG9wdGlvbnMpIHtcbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZShudW1iZXIpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIGEgZmluaXRlIG51bWJlciwgZ290ICR7dHlwZW9mIG51bWJlcn06ICR7bnVtYmVyfWApO1xuICAgIH1cbiAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyk7XG4gICAgaWYgKG9wdGlvbnMuc2lnbmVkICYmIG51bWJlciA9PT0gMCkge1xuICAgICAgICByZXR1cm4gXCIgMCBCXCI7XG4gICAgfVxuICAgIGNvbnN0IGlzTmVnYXRpdmUgPSBudW1iZXIgPCAwO1xuICAgIGNvbnN0IHByZWZpeCA9IGlzTmVnYXRpdmUgPyBcIi1cIiA6IG9wdGlvbnMuc2lnbmVkID8gXCIrXCIgOiBcIlwiO1xuICAgIGlmIChpc05lZ2F0aXZlKSB7XG4gICAgICAgIG51bWJlciA9IC1udW1iZXI7XG4gICAgfVxuICAgIGlmIChudW1iZXIgPCAxKSB7XG4gICAgICAgIGNvbnN0IG51bWJlclN0cmluZyA9IHRvTG9jYWxlU3RyaW5nKG51bWJlciwgb3B0aW9ucy5sb2NhbGUpO1xuICAgICAgICByZXR1cm4gcHJlZml4ICsgbnVtYmVyU3RyaW5nICsgXCIgQlwiO1xuICAgIH1cbiAgICBjb25zdCBleHBvbmVudCA9IE1hdGgubWluKE1hdGguZmxvb3IoTWF0aC5sb2cxMChudW1iZXIpIC8gMyksIFVOSVRTLmxlbmd0aCAtIDEpO1xuICAgIG51bWJlciA9IE51bWJlcigobnVtYmVyIC8gTWF0aC5wb3coMTAwMCwgZXhwb25lbnQpKS50b1ByZWNpc2lvbigzKSk7XG4gICAgY29uc3QgbnVtYmVyU3RyaW5nID0gdG9Mb2NhbGVTdHJpbmcobnVtYmVyLCBvcHRpb25zLmxvY2FsZSk7XG4gICAgY29uc3QgdW5pdCA9IFVOSVRTW2V4cG9uZW50XTtcbiAgICByZXR1cm4gcHJlZml4ICsgbnVtYmVyU3RyaW5nICsgXCIgXCIgKyB1bml0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcmV0dHktYnl0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/pretty-bytes.js\n");

/***/ }),

/***/ "./node_modules/next/dist/server/future/route-kind.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-kind.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouteKind\", ({\n    enumerable: true,\n    get: function() {\n        return RouteKind;\n    }\n}));\nvar RouteKind;\n(function(RouteKind) {\n    RouteKind[/**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ \"PAGES\"] = \"PAGES\";\n    RouteKind[/**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ \"PAGES_API\"] = \"PAGES_API\";\n    RouteKind[/**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ \"APP_PAGE\"] = \"APP_PAGE\";\n    RouteKind[/**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ \"APP_ROUTE\"] = \"APP_ROUTE\";\n})(RouteKind || (RouteKind = {}));\n\n//# sourceMappingURL=route-kind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDZDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLElBQUksRUFBRSxHQUFHO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixJQUFJLEVBQUUsR0FBRztBQUNsQztBQUNBLENBQUMsOEJBQThCOztBQUUvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWx0aGNhcmUtYXBwLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmQuanM/Mzk3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJvdXRlS2luZFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUm91dGVLaW5kO1xuICAgIH1cbn0pO1xudmFyIFJvdXRlS2luZDtcbihmdW5jdGlvbihSb3V0ZUtpbmQpIHtcbiAgICBSb3V0ZUtpbmRbLyoqXG4gICAqIGBQQUdFU2AgcmVwcmVzZW50cyBhbGwgdGhlIFJlYWN0IHBhZ2VzIHRoYXQgYXJlIHVuZGVyIGBwYWdlcy9gLlxuICAgKi8gXCJQQUdFU1wiXSA9IFwiUEFHRVNcIjtcbiAgICBSb3V0ZUtpbmRbLyoqXG4gICAqIGBQQUdFU19BUElgIHJlcHJlc2VudHMgYWxsIHRoZSBBUEkgcm91dGVzIHVuZGVyIGBwYWdlcy9hcGkvYC5cbiAgICovIFwiUEFHRVNfQVBJXCJdID0gXCJQQUdFU19BUElcIjtcbiAgICBSb3V0ZUtpbmRbLyoqXG4gICAqIGBBUFBfUEFHRWAgcmVwcmVzZW50cyBhbGwgdGhlIFJlYWN0IHBhZ2VzIHRoYXQgYXJlIHVuZGVyIGBhcHAvYCB3aXRoIHRoZVxuICAgKiBmaWxlbmFtZSBvZiBgcGFnZS57aix0fXN7LHh9YC5cbiAgICovIFwiQVBQX1BBR0VcIl0gPSBcIkFQUF9QQUdFXCI7XG4gICAgUm91dGVLaW5kWy8qKlxuICAgKiBgQVBQX1JPVVRFYCByZXByZXNlbnRzIGFsbCB0aGUgQVBJIHJvdXRlcyBhbmQgbWV0YWRhdGEgcm91dGVzIHRoYXQgYXJlIHVuZGVyIGBhcHAvYCB3aXRoIHRoZVxuICAgKiBmaWxlbmFtZSBvZiBgcm91dGUue2osdH1zeyx4fWAuXG4gICAqLyBcIkFQUF9ST1VURVwiXSA9IFwiQVBQX1JPVVRFXCI7XG59KShSb3V0ZUtpbmQgfHwgKFJvdXRlS2luZCA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlLWtpbmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/future/route-kind.js\n");

/***/ }),

/***/ "./node_modules/next/dist/server/future/route-modules/pages/module.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/pages/module.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    PagesRouteModule: function() {\n        return PagesRouteModule;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _routemodule = __webpack_require__(/*! ../route-module */ \"../route-module\");\nconst _render = __webpack_require__(/*! ../../../render */ \"../../../render\");\nclass PagesRouteModule extends _routemodule.RouteModule {\n    constructor(options){\n        super(options);\n        this.components = options.components;\n    }\n    render(req, res, context) {\n        return (0, _render.renderToHTMLImpl)(req, res, context.page, context.query, context.renderOpts, {\n            App: this.components.App,\n            Document: this.components.Document\n        });\n    }\n}\nconst _default = PagesRouteModule;\n\n//# sourceMappingURL=module.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy9tb2R1bGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBR0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QscUJBQXFCLG1CQUFPLENBQUMsd0NBQWlCO0FBQzlDLGdCQUFnQixtQkFBTyxDQUFDLHdDQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHRoY2FyZS1hcHAvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy9tb2R1bGUuanM/YzljZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIFBhZ2VzUm91dGVNb2R1bGU6IG51bGwsXG4gICAgZGVmYXVsdDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBQYWdlc1JvdXRlTW9kdWxlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFBhZ2VzUm91dGVNb2R1bGU7XG4gICAgfSxcbiAgICBkZWZhdWx0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9kZWZhdWx0O1xuICAgIH1cbn0pO1xuY29uc3QgX3JvdXRlbW9kdWxlID0gcmVxdWlyZShcIi4uL3JvdXRlLW1vZHVsZVwiKTtcbmNvbnN0IF9yZW5kZXIgPSByZXF1aXJlKFwiLi4vLi4vLi4vcmVuZGVyXCIpO1xuY2xhc3MgUGFnZXNSb3V0ZU1vZHVsZSBleHRlbmRzIF9yb3V0ZW1vZHVsZS5Sb3V0ZU1vZHVsZSB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucyl7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmNvbXBvbmVudHMgPSBvcHRpb25zLmNvbXBvbmVudHM7XG4gICAgfVxuICAgIHJlbmRlcihyZXEsIHJlcywgY29udGV4dCkge1xuICAgICAgICByZXR1cm4gKDAsIF9yZW5kZXIucmVuZGVyVG9IVE1MSW1wbCkocmVxLCByZXMsIGNvbnRleHQucGFnZSwgY29udGV4dC5xdWVyeSwgY29udGV4dC5yZW5kZXJPcHRzLCB7XG4gICAgICAgICAgICBBcHA6IHRoaXMuY29tcG9uZW50cy5BcHAsXG4gICAgICAgICAgICBEb2N1bWVudDogdGhpcy5jb21wb25lbnRzLkRvY3VtZW50XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmNvbnN0IF9kZWZhdWx0ID0gUGFnZXNSb3V0ZU1vZHVsZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9kdWxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/future/route-modules/pages/module.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"react\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NTc3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("ethers");

/***/ }),

/***/ "../route-module":
/*!************************************************************************!*\
  !*** external "next/dist/server/future/route-modules/route-module.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/future/route-modules/route-module.js");

/***/ }),

/***/ "../server/get-page-files":
/*!*****************************************************!*\
  !*** external "next/dist/server/get-page-files.js" ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/get-page-files.js");

/***/ }),

/***/ "../server/htmlescape":
/*!*************************************************!*\
  !*** external "next/dist/server/htmlescape.js" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/htmlescape.js");

/***/ }),

/***/ "../../../render":
/*!*********************************************!*\
  !*** external "next/dist/server/render.js" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/render.js");

/***/ }),

/***/ "../server/utils":
/*!********************************************!*\
  !*** external "next/dist/server/utils.js" ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/utils.js");

/***/ }),

/***/ "./amp-context":
/*!******************************************************!*\
  !*** external "next/dist/shared/lib/amp-context.js" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/amp-context.js");

/***/ }),

/***/ "./amp-mode":
/*!***************************************************!*\
  !*** external "next/dist/shared/lib/amp-mode.js" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/amp-mode.js");

/***/ }),

/***/ "../shared/lib/constants":
/*!****************************************************!*\
  !*** external "next/dist/shared/lib/constants.js" ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/constants.js");

/***/ }),

/***/ "./head-manager-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/head-manager-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ "../shared/lib/html-context":
/*!*******************************************************!*\
  !*** external "next/dist/shared/lib/html-context.js" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/html-context.js");

/***/ }),

/***/ "../shared/lib/is-plain-object":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/is-plain-object.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ "./side-effect":
/*!******************************************************!*\
  !*** external "next/dist/shared/lib/side-effect.js" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/side-effect.js");

/***/ }),

/***/ "./utils/warn-once":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/utils/warn-once.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils/warn-once.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "web3modal":
/*!****************************!*\
  !*** external "web3modal" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("web3modal");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = import("axios");;

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = import("openai");;

/***/ }),

/***/ "react-hot-toast":
/*!**********************************!*\
  !*** external "react-hot-toast" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-hot-toast");;

/***/ }),

/***/ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs":
/*!********************************************************************!*\
  !*** ./node_modules/@swc/helpers/cjs/_interop_require_default.cjs ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports._ = exports._interop_require_default = _interop_require_default;\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2Nqcy9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuY2pzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFNBQVMsR0FBRyxnQ0FBZ0M7QUFDNUM7QUFDQSwyQ0FBMkM7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLWFwcC8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvY2pzL19pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdC5janM/NWYyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fID0gZXhwb3J0cy5faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQ7XG5mdW5jdGlvbiBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/cjs/_interop_require_default.cjs\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nexports._ = exports._interop_require_wildcard = _interop_require_wildcard;\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2Nqcy9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFNBQVMsR0FBRyxpQ0FBaUM7QUFDN0M7QUFDQTtBQUNBLHVGQUF1Rjs7QUFFdkY7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHRoY2FyZS1hcHAvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2Nqcy9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmNqcz8yM2JkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHtcbiAgICBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7XG5cbiAgICB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICAgIHZhciBjYWNoZU5vZGVJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTtcblxuICAgIHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24obm9kZUludGVyb3ApIHtcbiAgICAgICAgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wO1xuICAgIH0pKG5vZGVJbnRlcm9wKTtcbn1cbmV4cG9ydHMuXyA9IGV4cG9ydHMuX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCA9IF9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQ7XG5mdW5jdGlvbiBfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHtcbiAgICBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgcmV0dXJuIG9iajtcbiAgICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4geyBkZWZhdWx0OiBvYmogfTtcblxuICAgIHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7XG5cbiAgICBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHJldHVybiBjYWNoZS5nZXQob2JqKTtcblxuICAgIHZhciBuZXdPYmogPSB7fTtcbiAgICB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsO1xuICAgICAgICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTtcbiAgICAgICAgICAgIGVsc2UgbmV3T2JqW2tleV0gPSBvYmpba2V5XTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG5ld09iai5kZWZhdWx0ID0gb2JqO1xuXG4gICAgaWYgKGNhY2hlKSBjYWNoZS5zZXQob2JqLCBuZXdPYmopO1xuXG4gICAgcmV0dXJuIG5ld09iajtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs\n");

/***/ }),

/***/ "./Context/Healthcare.json":
/*!*********************************!*\
  !*** ./Context/Healthcare.json ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"Healthcare","sourceName":"contracts/Medical.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"patientId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"doctorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"date","type":"uint256"}],"name":"APPOINTMENT_BOOKED","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isApproved","type":"bool"}],"name":"APPROVE_DOCTOR_STATUSD","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"IPFS_URL","type":"string"},{"indexed":false,"internalType":"address","name":"accountAddress","type":"address"}],"name":"DOCTOR_REGISTERED","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"MEDICINE_ACTIVE","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"url","type":"string"},{"indexed":false,"internalType":"string","name":"location","type":"string"}],"name":"MEDICINE_ADDED","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"patientId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"medicineId","type":"uint256"}],"name":"MEDICINE_BOUGHT","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"discount","type":"uint256"}],"name":"MEDICINE_DISCOUNT","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"newLocation","type":"string"}],"name":"MEDICINE_LOCATION","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"medicineId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"patientId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"doctorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"date","type":"uint256"}],"name":"MEDICINE_PRESCRIBED","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"MEDICINE_PRICE","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"MEDICINE_QUANTITY","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"NOTIFICATiON_SENT","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"_IPFS_URL","type":"string"},{"indexed":false,"internalType":"string[]","name":"medicalHistory","type":"string[]"}],"name":"PATIENT_ADDED","type":"event"},{"inputs":[{"internalType":"string","name":"_IPFS_URL","type":"string"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"name":"ADD_DOCTOR","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_IPFS_URL","type":"string"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_quantity","type":"uint256"},{"internalType":"uint256","name":"_discount","type":"uint256"},{"internalType":"string","name":"_currentLocation","type":"string"}],"name":"ADD_MEDICINE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_IPFS_URL","type":"string"},{"internalType":"string[]","name":"_medicalHistory","type":"string[]"},{"internalType":"address","name":"_accountAddress","type":"address"},{"internalType":"uint256[]","name":"_boughtMedicines","type":"uint256[]"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_doctorAddress","type":"address"},{"internalType":"string","name":"_doctorName","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"name":"ADD_PATIENTS","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_doctorId","type":"uint256"}],"name":"APPROVE_DOCTOR_STATUS","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_patientId","type":"uint256"},{"internalType":"uint256","name":"_doctorId","type":"uint256"},{"internalType":"string","name":"_from","type":"string"},{"internalType":"string","name":"_to","type":"string"},{"internalType":"string","name":"_appointmentDate","type":"string"},{"internalType":"string","name":"_condition","type":"string"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"address","name":"_doctorAddress","type":"address"},{"internalType":"string","name":"_name","type":"string"}],"name":"BOOK_APPOINTMENT","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_patientId","type":"uint256"},{"internalType":"uint256","name":"_medicineId","type":"uint256"},{"internalType":"uint256","name":"_quantity","type":"uint256"}],"name":"BUY_MEDICINE","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pubkey","type":"address"}],"name":"CHECK_USER_EXISTS","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_appointmentId","type":"uint256"}],"name":"COMPLETE_APPOINTMENT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"GET_ALL_APPOINTMENTS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"},{"internalType":"string","name":"appointmentDate","type":"string"},{"internalType":"string","name":"condition","type":"string"},{"internalType":"string","name":"message","type":"string"},{"internalType":"bool","name":"isOpen","type":"bool"}],"internalType":"struct Healthcare.Appointment[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GET_ALL_APPROVED_DOCTORS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256","name":"appointmentCount","type":"uint256"},{"internalType":"uint256","name":"successfulTreatmentCount","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"}],"internalType":"struct Healthcare.Doctor[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GET_ALL_APP_USER","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"accountAddress","type":"address"}],"internalType":"struct Healthcare.AllUserStruck[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"patientId","type":"uint256"}],"name":"GET_ALL_PATIENT_ORDERS","outputs":[{"components":[{"internalType":"uint256","name":"medicineId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"payAmount","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"}],"internalType":"struct Healthcare.Order[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GET_ALL_PRESCRIBED_MEDICINES","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"medicineId","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"}],"internalType":"struct Healthcare.Prescription[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"patientId","type":"uint256"}],"name":"GET_ALL_PRESCRIBED_MEDICINES_OF_PATIENT","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"medicineId","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"}],"internalType":"struct Healthcare.Prescription[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GET_ALL_REGISTERED_DOCTORS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256","name":"appointmentCount","type":"uint256"},{"internalType":"uint256","name":"successfulTreatmentCount","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"}],"internalType":"struct Healthcare.Doctor[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GET_ALL_REGISTERED_MEDICINES","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"discount","type":"uint256"},{"internalType":"string","name":"currentLocation","type":"string"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct Healthcare.Medicine[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GET_ALL_REGISTERED_PATIENTS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"string[]","name":"medicalHistory","type":"string[]"},{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256[]","name":"boughtMedicines","type":"uint256[]"}],"internalType":"struct Healthcare.Patient[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_patientId","type":"uint256"}],"name":"GET_BOUGHT_MEDICINE_BY_PAITENT","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_doctorId","type":"uint256"}],"name":"GET_DOCTOR_APPOINTMENTS_HISTORYS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"},{"internalType":"string","name":"appointmentDate","type":"string"},{"internalType":"string","name":"condition","type":"string"},{"internalType":"string","name":"message","type":"string"},{"internalType":"bool","name":"isOpen","type":"bool"}],"internalType":"struct Healthcare.Appointment[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_doctorId","type":"uint256"}],"name":"GET_DOCTOR_DETAILS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256","name":"appointmentCount","type":"uint256"},{"internalType":"uint256","name":"successfulTreatmentCount","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"}],"internalType":"struct Healthcare.Doctor","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_doctorAddress","type":"address"}],"name":"GET_DOCTOR_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_medicineId","type":"uint256"}],"name":"GET_MEDICINE_DETAILS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"discount","type":"uint256"},{"internalType":"string","name":"currentLocation","type":"string"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct Healthcare.Medicine","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GET_MOST_POPULAR_DOCTOR","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256","name":"appointmentCount","type":"uint256"},{"internalType":"uint256","name":"successfulTreatmentCount","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"}],"internalType":"struct Healthcare.Doctor","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"GET_MY_FRIEND_LIST","outputs":[{"components":[{"internalType":"address","name":"pubkey","type":"address"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct Healthcare.friend[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"GET_NOTIFICATIONS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"message","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"categoryType","type":"string"}],"internalType":"struct Healthcare.Notification[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_appointmentId","type":"uint256"}],"name":"GET_PATIENT_APPOINTMENT","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"},{"internalType":"string","name":"appointmentDate","type":"string"},{"internalType":"string","name":"condition","type":"string"},{"internalType":"string","name":"message","type":"string"},{"internalType":"bool","name":"isOpen","type":"bool"}],"internalType":"struct Healthcare.Appointment","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_patientId","type":"uint256"}],"name":"GET_PATIENT_APPOINTMENT_HISTORYS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"},{"internalType":"string","name":"appointmentDate","type":"string"},{"internalType":"string","name":"condition","type":"string"},{"internalType":"string","name":"message","type":"string"},{"internalType":"bool","name":"isOpen","type":"bool"}],"internalType":"struct Healthcare.Appointment[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_patientId","type":"uint256"}],"name":"GET_PATIENT_DETAILS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"string[]","name":"medicalHistory","type":"string[]"},{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256[]","name":"boughtMedicines","type":"uint256[]"}],"internalType":"struct Healthcare.Patient","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_patientAddress","type":"address"}],"name":"GET_PATIENT_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_patientId","type":"uint256"}],"name":"GET_PATIENT_MEDICIAL_HISTORY","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_prescriptionId","type":"uint256"}],"name":"GET_PRESCRIPTION_DETAILS","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"medicineId","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"}],"internalType":"struct Healthcare.Prescription","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"friend_key","type":"address"},{"internalType":"address","name":"_myAddress","type":"address"}],"name":"GET_READ_MESSAGE","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"msg","type":"string"}],"internalType":"struct Healthcare.message[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pubkey","type":"address"}],"name":"GET_USERNAME_TYPE","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"userType","type":"string"},{"components":[{"internalType":"address","name":"pubkey","type":"address"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct Healthcare.friend[]","name":"friendList","type":"tuple[]"}],"internalType":"struct Healthcare.User","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_medicineId","type":"uint256"},{"internalType":"uint256","name":"_patientId","type":"uint256"}],"name":"PRESCRIBE_MEDICINE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_newAddress","type":"address"}],"name":"UPDATE_ADMIN_ADDRESS","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"UPDATE_APPOINTMENT_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_medicineId","type":"uint256"}],"name":"UPDATE_MEDICINE_ACTIVE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_medicineId","type":"uint256"},{"internalType":"uint256","name":"_discount","type":"uint256"}],"name":"UPDATE_MEDICINE_DISCOUNT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_medicineId","type":"uint256"},{"internalType":"string","name":"_newLocation","type":"string"}],"name":"UPDATE_MEDICINE_LOCATION","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_medicineId","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"UPDATE_MEDICINE_PRICE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_medicineId","type":"uint256"},{"internalType":"uint256","name":"_quantity","type":"uint256"}],"name":"UPDATE_MEDICINE_QUANTITY","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_patientId","type":"uint256"},{"internalType":"string","name":"_newMedicalHistory","type":"string"}],"name":"UPDATE_PATIENT_MEDICAL_HISTORY","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"UPDATE_REGISTRATION_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"UPDATE_REGISTRATION_PATIENT_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"friend_key","type":"address"},{"internalType":"address","name":"_myAddress","type":"address"},{"internalType":"string","name":"_msg","type":"string"}],"name":"_SEND_MESSAGE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"appointmentCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"appointmentFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"appointments","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"},{"internalType":"string","name":"appointmentDate","type":"string"},{"internalType":"string","name":"condition","type":"string"},{"internalType":"string","name":"message","type":"string"},{"internalType":"bool","name":"isOpen","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"doctorCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"doctors","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256","name":"appointmentCount","type":"uint256"},{"internalType":"uint256","name":"successfulTreatmentCount","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"medicineCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"medicines","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"discount","type":"uint256"},{"internalType":"string","name":"currentLocation","type":"string"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"patientCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"patientOrders","outputs":[{"internalType":"uint256","name":"medicineId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"payAmount","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"patients","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"IPFS_URL","type":"string"},{"internalType":"address","name":"accountAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"prescriptionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"prescriptions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"medicineId","type":"uint256"},{"internalType":"uint256","name":"patientId","type":"uint256"},{"internalType":"uint256","name":"doctorId","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"registeredDoctors","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"registeredPatients","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registrationDoctorFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registrationPatientFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x60808060405234610043576608e1bc9bf04000601281905565e35fa931a000601355601455601180546001600160a01b031916331790556158729081620000498239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806302cce770146140e5578063046a07ed1461405f57806304c0adb71461403c578063082ed5471461401157806312dc901314613f185780631b82207e14613eeb5780632a42e74c14613d855780632c486bd514613cd157806331dfc91b14613c69578063354b365f14613ace57806337a92da7146138b157806339d519a9146138005780633f308cd2146137c15780634dafd490146137a3578063540a661414613785578063559160b81461360b5780635597958e1461346357806356baa64e1461333f5780635970cea414612db4578063636d362714612d635780636efb1b8414612cda57806372de440114612b6757806374cdd53414612aee578063770d954d14612a8757806378522bc414612a695780637c0b501a1461295a578063828b10da1461283a5780638366304b1461248d578063842f8dd01461234357806384e7aa2e146121c85780638c9e245d1461213257806393119a83146120e65780639cdaaad8146120a75780639fea8c2614611f42578063a0303c4114611f24578063a48f87d014611eb2578063a72c162314611dc5578063b039ece914611c93578063b27b24f814611b7b578063b3e0c71014611ac8578063b655849814611aaa578063b884db75146117c6578063bbece2bb14611705578063c0a5999a1461160f578063c85e766d14611572578063d0da23061461144a578063d174ea41146113bb578063dabf826a1461139d578063dd1bf902146111e9578063e40b850e146111cb578063e92f0a681461112b578063ea51cd6c14611022578063ebd557d914610b85578063ed74e8481461092c578063eebc3fb21461090e578063f27e44cc14610873578063f28136a9146107ec578063f851a440146107c3578063fb5333b7146106e5578063fd9510d5146104b0578063fe60efa1146104155763ff09a64e146102c657600080fd5b34610410576020366003190112610410576102df614181565b6060604080516102ee8161426f565b828152826020820152015261030a6103058261515d565b615422565b60018060a01b03166000526001806020526040600020906040519061032e8261426f565b610337836142ab565b825261039261035a600261034c8487016142ab565b956020860196875201615467565b936040840194855261037f604051946020865251606060208701526080860190614351565b9051848203601f19016040860152614351565b925192601f19838203016060840152835180825260208201916020808360051b8301019601926000915b8383106103c95786880387f35b90919293946020806103ff839a601f198682030187526040838b5160018060a01b03815116845201519181858201520190614351565b9997019594919091019201906103bc565b600080fd5b346104105760203660031901126104105761042e615029565b5060043560005260066020526104ac604060002060ff6005604051926104538461421e565b80548452610463600182016142ab565b602085015260018060a01b0360028201541660408501526003810154606085015260048101546080850152015416151560a0820152604051918291602083526020830190614666565b0390f35b3461041057602080600319360112610410576004359033600052600a81526104df60ff60406000205416614c0b565b6104ed601054831115614ccc565b8160005260098152600260406000200154610507336150ab565b0361068357816106819260005260098252600960406000200160ff198154169055610531336150ab565b60005260068252600460406000200161054a8154614889565b90556105ab60405161055b8161426f565b602f81527f596f752068617665207375636365737366756c6c7920636f6d706c6574656420848201526e1d1a1948185c1c1bda5b9d1b595b9d608a1b60408201526105a4614ba5565b90336149df565b600052600981526001604060002001546000526007815260018060a01b0361062d81600360406000200154166040516105e38161426f565b602a81527f596f7572204170706f696e746d656e74206973207375636365737366756c6c7985820152690818dbdb5c1b195d195960b21b6040820152610627614ba5565b916149df565b60115416907f446f63746f7220636f6d706c65746564206170706f696e746d656e7420737563604051916106608361426f565b60298352820152686365737366756c6c7960b81b6040820152610627614ba5565b005b6084906040519062461bcd60e51b82526004820152603560248201527f4f6e6c79207468652061737369676e656420646f63746f722063616e20636f6d6044820152741c1b195d19481d1a1948185c1c1bda5b9d1b595b9d605a1b6064820152fd5b34610410577f573cca7a8cd583da809cdb83b4ea8dec06c87da579a25478cc69566672e2b5896107143661440b565b9061072a60018060a01b03601154163314614832565b610738600c54821115614b0d565b8060005260056020526107528260056040600020016148f4565b6107a26040516107618161426f565b602681527f4d65646963696e65206c6f636174696f6e2075706461746564207375636365736020820152657366756c6c7960d01b60408201526105a46149bb565b6107be6040519283928352604060208401526040830190614351565b0390a1005b34610410576000366003190112610410576011546040516001600160a01b039091168152602090f35b3461041057602036600319011261041057601154610681906001600160a01b0316610818338214614832565b60043560125560405161082a8161426f565b602e81527f596f752068617665207375636365737366756c6c79207570646174656420526560208201526d67697374726174696f6e2066656560901b6040820152610627614d8d565b346104105760203660031901126104105761088c614dae565b50600435600052600860205260a060406000206004604051916108ae836141e7565b805483526001810154602084015260028101546040840152600381015460608401520154608082015261090c604051809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565bf35b34610410576000366003190112610410576020601054604051908152f35b3461041057606036600319011261041057610945614181565b61094d614197565b906044356001600160401b0381116104105761096d903690600401614555565b92909161098161097c8361515d565b6154e2565b61098d6103058261515d565b610997818361564e565b15610b31576109a681836157a6565b90604051946109b48661426f565b60018060a01b039384811687526109d56020968789019342855236916143a7565b9360408801948552600052600286526040600020805497600160401b891015610b1b5760018901808355891015610b05576002610ac396610a8f95896106819c610a479660005260038d6000209102019451166001600160601b0360a01b8554161784555160018401555191016148f4565b604051610a538161426f565b602281527f596f752068617665207375636365737366756c6c792073656e64206d657373618782015261676560f01b6040820152610627615783565b604051610a9b81614239565b6014815273596f752068617665206e6577206d65737361676560601b85820152610627615783565b60115416907f6d6573736167652073656e64207375636365737366756c6c790000000000000060405191610af683614239565b60198352820152610627615783565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602660248201527f596f7520617265206e6f7420667269656e64207769746820746865206769766560448201526537103ab9b2b960d11b6064820152608490fd5b610120366003190112610410576001600160401b0360443581811161041057610bb29036906004016143ed565b60643582811161041057610bca9036906004016143ed565b9060843583811161041057610be39036906004016143ed565b9060a43584811161041057610bfc9036906004016143ed565b9260c43585811161041057610c159036906004016143ed565b9460e4356001600160a01b0381169003610410576101043590811161041057610c42903690600401614555565b959094610c55600e546004351115614c6f565b610c65600d546024351115614bc7565b6024356000526006602052610c8460ff60056040600020015416614d18565b6004356000908152600760205260409020600301546001600160a01b03163303610fc9576014543403610f8457610cc0600a3490810490614d80565b94601054610ccd90614889565b938460105560405195610cdf87614202565b858752602087016004358152604088016024358152606089019142835260808a0193845260a08a0194855260c08a0195865260e08a019687526101008a019788526101208a019860018a526000526009602052604060002099518a555160018a0155516002890155516003880155516004870190610d5c916148f4565b51610d6a90600587016148f4565b51610d7890600686016148f4565b51610d8690600785016148f4565b51610d9490600884016148f4565b5115159060090190610db1919060ff801983541691151516179055565b602435600052600660205260406000206003018054610dcf90614889565b905560115460009081908190819081906001600160a01b0316600a340415610f7a575b600a340491f115610f65576000808080936024358252600660205260018060a01b03600260408420015416828215610f71575bf115610f6557610e3991339160e43561552e565b610e83604051610e4881614239565b601a81527f596f7520686176652061206e6577206170706f696e746d656e740000000000006020820152610e7a614d5d565b9060e4356149df565b610ed8604051610e928161426f565b602b81527f596f752068617665207375636365737366756c6c7920626f6f6b656420616e2060208201526a185c1c1bda5b9d1b595b9d60aa1b60408201526105a4614d5d565b601154604051610f20916001600160a01b031690610ef581614239565b601681527513995dc8185c1c1bda5b9d1b595b9d08189bdbdad95960521b6020820152610627614d5d565b7f3ac6f9df28ef09d1b346be1f7d771f61872f07de8da7b88f490fe4f61b2b3e2c608060105460405190815260043560208201526024356040820152426060820152a1005b6040513d6000823e3d90fd5b506108fc610e25565b6108fc9150610df2565b60405162461bcd60e51b815260206004820152601960248201527f496e636f7272656374206170706f696e746d656e7420666565000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f6e6c79207468652070617469656e742063616e20626f6f6b2074686569722060448201526a185c1c1bda5b9d1b595b9d60aa1b6064820152608490fd5b346104105760003660031901126104105760105461103f81614fd9565b9060018060005b8383111561105c57604051806104ac87826144dc565b61111f6111259184600052600960ff60209180835260406000206040519361108385614202565b81548552888201549085015260028101546040850152600381015460608501526110af600482016142ab565b60808501526110c0600582016142ab565b60a08501526110d1600682016142ab565b60c08501526110e2600782016142ab565b60e08501526110f3600882016142ab565b610100850152015416151561012082015261110e8289614e29565b526111198188614e29565b50614889565b92614889565b91611046565b3461041057602036600319011261041057611144615124565b5060043560005260056020526104ac604060002060ff60066040519261116984614254565b80548452611179600182016142ab565b60208501526002810154604085015260038101546060850152600481015460808501526111a8600582016142ab565b60a0850152015416151560c08201526040519182916020835260208301906147b7565b34610410576000366003190112610410576020601254604051908152f35b346104105760a0366003190112610410576001600160401b036004358181116104105761121a9036906004016143ed565b608435918211610410576112537f4bd6730197eeaa6a5861ee6770b4a7ea4945e177c1b8f8e196812da34b52b6209236906004016143ed565b61126860018060a01b03601154163314614832565b611313611276600c54614889565b80600c5560066040519161128983614254565b8083526112fd60208401878152604085016024358152606086016044358152608087019160643583526112e160a08901948b865260c08a0197600189526000526005602052604060002099518a555160018a016148f4565b51600288015551600387015551600486015551600585016148f4565b51151591019060ff801983541691151516179055565b61136c6040516113228161426f565b602f81527f4e6577204d65646963696e6520616464656420746f206d61726b6574706c616360208201526e65207375636365737366756c6c792160881b60408201526105a46149bb565b6107be600c549161138f6040519485948552606060208601526060850190614351565b908382036040850152614351565b34610410576000366003190112610410576020601454604051908152f35b3461041057602036600319011261041057601154610681906001600160a01b03166113e7338214614832565b6004356013556040516113f98161426f565b603681527f596f752068617665207375636365737366756c6c7920757064617465642050616020820152757469656e7420526567697374726174696f6e2066656560501b6040820152610627614d8d565b3461041057600036600319011261041057600d546001906000825b8281111561153557506114779061505b565b91600090805b8381111561149357604051806104ac87826146b7565b8060005260206006815260ff6005818160406000200154166114c1575b5050506114bc90614889565b61147d565b916114bc93959161152c936040600020604051936114de8561421e565b815485526114ed8983016142ab565b9085015260028101546001600160a01b031660408501526003810154606085015260048101546080850152015416151560a082015261110e8289614e29565b929086806114b0565b80600052600660205260ff6005604060002001541661155d575b61155890614889565b611465565b9061156a61155891614889565b91905061154f565b34610410576020366003190112610410576004356000526005602052604060002080546115a1600183016142ab565b916116036002820154600383015492600481015460ff60066115c5600585016142ab565b93015416946115e6604051988998895260e060208a015260e0890190614351565b9360408801526060870152608086015284820360a0860152614351565b90151560c08301520390f35b34610410576020366003190112610410577f954090adef24b59354b88966afb6b169cf1790275cc1c22d9d599cfa745041a560043561165960018060a01b03601154163314614832565b611667600c54821115614b0d565b6000818152600560205260409020600601805460ff818116151660ff199091161790556116d86040516116998161426f565b602481527f4d65646963696e65207374617475732075706461746564207375636365737366602082015263756c6c7960e01b60408201526105a46149bb565b60008181526005602090815260409182902060060154825193845260ff16151590830152819081016107be565b34610410577f611a96f8a84b78b34d3917accd31d6e94ffc712cdd95a8ce7b8e2f9c5e093ae9604061173636614391565b61174b60018060a01b03601154163314614832565b611759600c54831115614b0d565b8160005260056020528060048460002001556117b983516117798161426f565b602681527f4d65646963696e6520646973636f756e742075706461746564207375636365736020820152657366756c6c7960d01b858201526105a46149bb565b82519182526020820152a1005b6080366003190112610410576001600160401b03600435818111610410576117f29036906004016143ed565b6117fa614197565b60443583811161041057611812903690600401614555565b906064358581116104105761182b9036906004016143ed565b916118396012543414614b59565b60018060a01b03928385169283600052602093600a855260ff60406000205416611a655761190161186b600d54614889565b80600d5560056040519161187e8361421e565b808352888084018d8152604085018781526118c6606087019260008452600660808901956000875260a08a0197600089526000525260406000209751885551600188016148f4565b8c600287019151166001600160601b0360a01b82541617905551600385015551600484015551151591019060ff801983541691151516179055565b600052600a84526040600020600160ff198254161790556000808080886011541681903415611a5b575b3491f115610f655761193e92869161519f565b60405191608083019583871090871117610b1b576119ee611a48937f8c4e93915e8e9956f3984eef613c813c83672180f22083646e395379663dd76997604052604981527f596f752068617665207375636365737366756c6c7920636f6d706c6574656420848201527f74686520726567697374726174696f6e2c206e6f7720776174696e6720666f7260408201526808185c1c1c9bdd985b60ba1b60608201526119e7614ba5565b90866149df565b60115416907f4e657720646f63746f72206973207265676973746f722c206e6f77207761746960405191611a218361426f565b602f83528201526e1b99c8199bdc88185c1c1c9bdd985b608a1b6040820152610627614ba5565b6107be600d549160405193849384614789565b6108fc915061192b565b60405162461bcd60e51b815260048101869052601c60248201527f446f63746f7220697320616c72656164792072656769737465726564000000006044820152606490fd5b34610410576000366003190112610410576020600f54604051908152f35b3461041057602080600319360112610410576001600160a01b039081611aec614181565b166000526001808252611b056002604060002001615467565b926040519280840190808552855180925260408501928160408460051b8801019701936000915b848310611b395787890388f35b9091929394958480611b69839b603f198c82030187526040838c5188815116845201519181858201520190614351565b9a980196959491909101920190611b2c565b3461041057600036600319011261041057611b94615029565b50611b9d615029565b600090600180600d54915b82811115611bc657604051602080825281906104ac90820187614666565b8060005260066020818152600380604060002001546004604060002001548101809111611c7d57888111611c07575b50505050611c0290614889565b611ba8565b60ff92939850611c02949750906005919888600052845260406000209060405194611c318661421e565b82548652611c408884016142ab565b9086015260028201546001600160a01b03166040860152810154606085015260048101546080850152015416151560a08201529390868080611bf5565b634e487b7160e01b600052601160045260246000fd5b3461041057604036600319011261041057611cbc611caf614181565b611cb7614197565b6157a6565b6000526002602081815260406000208054611cd68161453e565b93611ce4604051958661428a565b81855260009283528383208486019391845b848410611d7c57604080518881528951818a01819052600092600582901b83018101918a918c9085015b828710611d2d5785850386f35b909192938280611d6c600193603f198a820301865260408951868060a01b03815116835284810151858401520151906060908160408201520190614351565b9601920196019592919092611d20565b60038760019260409a999a51611d918161426f565b848060a01b0387541681528487015483820152611daf8688016142ab565b6040820152815201930193019291969596611cf6565b346104105760208060031936011261041057600435611de8600e54821115614c6f565b6000818152600783526040902060030154336001600160a01b0391821614908115611ea4575b5015611e405760005260078152611e2b6002604060002001614e69565b906104ac6040519282849384528301906145b6565b60405162461bcd60e51b815260048101839052603660248201527f4f6e6c79207468652070617469656e74206f722061646d696e2063616e207669604482015275657720746865206d65646963616c20686973746f727960501b6064820152608490fd5b905060115416331483611e0e565b3461041057611ec036614391565b906000526004602052604060002080548210156104105760c091611ee391614816565b5080549060018101549060028101546003820154906005600484015493015493604051958652602086015260408501526060840152608083015260a0820152f35b34610410576000366003190112610410576020600e54604051908152f35b3461041057600036600319011261041057600c54611f5f8161453e565b611f6c604051918261428a565b818152601f19611f7b8361453e565b0160005b818110612090575060019290508260005b82821115611ffb578385604051906020808301818452845180915260408401918060408360051b8701019601926000905b838210611fce5786880387f35b90919293948380611fea839a603f198b820301865289516147b7565b999701959493919091019101611fc1565b61208461208a91836000528660ff600660056120606020918083526040600020926120376040519761202c89614254565b8554895285016142ab565b9087015260028301546040870152600383015460608701526004830154608087015282016142ab565b60a0850152015416151560c08201526120798288614e29565b526111198187614e29565b91614889565b90611f90565b60209061209b615124565b82828601015201611f7f565b34610410576020366003190112610410576001600160a01b036120c8614181565b16600052600b602052602060ff604060002054166040519015158152f35b34610410576020366003190112610410576004356000526007602052604060002080546104ac612118600184016142ab565b92600360018060a01b039101541660405193849384614789565b3461041057600036600319011261041057600f5461214f81614dd9565b9060018060005b8383111561216c57604051806104ac8782614719565b61111f6121c291846000526020600881526004604060002060405192612191846141e7565b81548452878201549084015260028101546040840152600381015460608401520154608082015261110e8289614e29565b91612156565b3461041057602080600319360112610410576004356121e5614f8e565b506121f4601054821115614ccc565b806000526009825260016040600020015461220e33614f0d565b14801561232f575b156122cf576000526009815260406000209060ff60096040519361223985614202565b805485526001810154848601526002810154604086015260038101546060860152612266600482016142ab565b6080860152612277600582016142ab565b60a0860152612288600682016142ab565b60c0860152612299600782016142ab565b60e08601526122aa600882016142ab565b61010086015201541615156101208301526104ac60405192828493845283019061443a565b60405162461bcd60e51b815260048101839052603260248201527f4f6e6c79207468652070617469656e74206f722061646d696e2063616e207669604482015271195dc81d1a1948185c1c1bda5b9d1b595b9d60721b6064820152608490fd5b506011546001600160a01b03163314612216565b3461041057600036600319011261041057600e546123608161453e565b61236d604051918261428a565b818152601f1961237c8361453e565b0160005b818110612476575060019290508260005b828211156123fc578385604051906020808301818452845180915260408401918060408360051b8701019601926000905b8382106123cf5786880387f35b909192939483806123eb839a603f198b8203018652895161460b565b9997019594939190910191016123c2565b61208461247091836000526020600781526124616004604060002060405193612424856141e7565b815485526124338c83016142ab565b9085015261244360028201614e69565b604085015260038101546001600160a01b0316606085015201614ebe565b60808201526120798288614e29565b90612391565b602090612481614e3d565b82828601015201612380565b60603660031901126104105760043560248035906044356124b2600e54851115614c6f565b6124c0600c54841115614b0d565b836000526020916007835260018060a01b0391826003604060002001541633036127e6578460005260059081855260ff60066040600020015416156127a9578560005281855280600360406000200154106127655785600052818552600260406000200154908082029180830482149015171561275057866000528286526003604060002001612551828254614d80565b905587600052600786526004604060002001908154600160401b928382101561273b57816125859160018c94018155614cb4565b819291549060031b600019811b9283911b169119161790558860005260048752604060002092886000528488526002604060002001546040516125c78161421e565b8a8152898101918252604081019283526060810193845260808101948c865260a0820196428852805491821015612726579061260891600182018155614816565b989098612712577f1d62f96054391d98915909b52fc6b2182af4ce3748f5ddd6c0047dd725a969df60408e8e8e6127078f8f8f8f8f8f8f8f8f518755516001870155516002860155516003850155516004840155519101556126ac865161266e8161426f565b602581527f596f752068617665207375636365737366756c6c7920626f75676874206d656485820152646963696e6560d81b888201526105a4614d5d565b6011541685516126bb8161426f565b603381527f5472616e73616374696f6e20636f6d706c657465642c206d61646963696e65208482015272626f75676874207375636365737366756c6c7960681b87820152610627614d5d565b8351928352820152a1005b634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b86634e487b7160e01b60005260416004526000fd5b83634e487b7160e01b60005260116004526000fd5b60405162461bcd60e51b815260048101869052601c818501527f4e6f7420656e6f756768206d65646963696e6520696e2073746f636b000000006044820152606490fd5b60405162461bcd60e51b815260048101869052601681850152754d65646963696e65206973206e6f742061637469766560501b6044820152606490fd5b60405162461bcd60e51b8152600481018590526027818401527f4f6e6c79207468652070617469656e742063616e20627579207468656972206d60448201526665646963696e6560c81b6064820152608490fd5b34610410576000366003190112610410576000546128578161453e565b90612865604051928361428a565b8082526000808052602091828401917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563835b83831061291a5750505050604051918083019381845251809452604083019360408160051b85010192916000955b8287106128d25785850386f35b909192938280600192603f19898203018552875190826128fb8351604084526040840190614351565b9281878060a01b039101511691015296019201960195929190926128c5565b60028660019260409998995161292f81614239565b612938866142ab565b8152848060a01b03858701541683820152815201920192019190959495612897565b346104105760208060031936011261041057600f54600435916001906000825b84811115612a2e575061298c90614dd9565b93600091835b858111156129a857604051806104ac8982614719565b80600052600882526002838160406000200154146129d0575b506129cb90614889565b612992565b6129cb9194612a279160046040600020604051926129ed846141e7565b815484528a8201548885015281015460408401526003810154606084015201546080820152612a1c828b614e29565b52611119818a614e29565b93906129c1565b80600052600883528560026040600020015414612a54575b612a4f90614889565b61297a565b90612a61612a4f91614889565b919050612a46565b34610410576000366003190112610410576020600d54604051908152f35b3461041057600036600319011261041057600d54612aa48161505b565b9060018060005b83831115612ac157604051806104ac87826146b7565b61111f612ae8918460005260206006815260ff60056040600020604051936114de8561421e565b91612aab565b3461041057602036600319011261041057612b07614e3d565b5060043560005260076020526104ac6040600020612b4e600460405192612b2d846141e7565b80548452612b3d600182016142ab565b602085015261244360028201614e69565b608082015260405191829160208352602083019061460b565b346104105760208060031936011261041057600435612b8a600d54821115614bc7565b6000906001928392601054935b84811115612c9f5750612ba990614fd9565b93600091815b85811115612bc557604051806104ac89826144dc565b80600052600980835260029086826040600020015414612bf0575b5050612beb90614889565b612baf565b94612c979160ff612beb9497604060002060405193612c0e85614202565b815485528982015489860152810154604085015260038101546060850152612c38600482016142ab565b6080850152612c49600582016142ab565b60a0850152612c5a600682016142ab565b60c0850152612c6b600782016142ab565b60e0850152612c7c600882016142ab565b6101008501520154161515610120820152612a1c828b614e29565b939088612be0565b80600052600983528360026040600020015414612cc5575b612cc090614889565b612b97565b90612cd2612cc091614889565b919050612cb7565b3461041057602036600319011261041057600435600052600660205260406000208054612d09600183016142ab565b9160018060a01b036002820154169060038101549060ff600560048301549201541691612d48604051968796875260c0602088015260c0870190614351565b93604086015260608501526080840152151560a08301520390f35b3461041057602036600319011261041057600435612d85600e54821115614c6f565b60005260076020526104ac612da06004604060002001614ebe565b604051918291602083526020830190614582565b610100366003190112610410576004356001600160401b03811161041057612de09036906004016143ed565b602435906001600160401b0382116104105736602383011215610410578160040135612e0b8161453e565b92612e19604051948561428a565b8184526024602085019260051b820101903682116104105760248101925b8284106133105785856044356001600160a01b038116900361041057606435916001600160401b038311610410573660238401121561041057826004013592612e7f8461453e565b93612e8d604051958661428a565b8085526024602086019160051b8301019136831161041057602401905b828210613300575050506084356001600160401b03811161041057612ed3903690600401614555565b60a4356001600160a01b03811690036104105760c4356001600160401b03811161041057612f05903690600401614555565b909160e4356001600160401b03811161041057612f269036906004016143ed565b96612f346013543414614b59565b6044356001600160a01b03166000908152600b602052604090205460ff166132bb57612f61600e54614889565b9081600e5560405190612f73826141e7565b8282526020820192898452604083019189835260018060a01b0360443516606085015260808401526000526007602052612fba6040600020938351855551600185016148f4565b51805190600160401b8211610b1b57600284015482600286015580831061323c575b506020016002840160005260206000206000915b83831061321f5750505060608201516003840180546001600160a01b0319166001600160a01b03929092169190911790555060800151805191906001600160401b038311610b1b57600160401b8311610b1b576020600491828401548584860155808610613200575b50019101600052602060002060005b8381106131ec57505050506044356001600160a01b039081166000908152600b60205260408120805460ff19166001179055601154909182918291829182911634156131e2575b3491f115610f65577fc66c47c46a9613cb876ef0205ca8c4597eb05703969f8458f4a762107e865dc2966130f6946130ea926044359161519f565b6044359160a43561552e565b6131556040516131058161426f565b602c81527f596f752068617665207375636365737366756c6c7920636f6d706c657465642060208201526b3932b3b4b9ba3930ba34b7b760a11b604082015261314c614d5d565b906044356149df565b6011546040516131b1916001600160a01b0316906131728161426f565b602481527f4e65772050617469656e74206973207265676973746f72207375636365737366602082015263756c6c7960e01b6040820152610627614d5d565b6107be600e54916131d46040519485948552606060208601526060850190614351565b9083820360408501526145b6565b6108fc91506130af565b600190602084519401938184015501613068565b6132199084860160005286846000209182019101614898565b8c613059565b6001602082613230839451866148f4565b01920192019190612ff0565b600285016000526020600020908382015b818301811061325d575050612fdc565b8061326a600192546141ad565b80613277575b500161324d565b601f908181118414613290575050600081555b8f613270565b836132ac92846000526020600020920160051c82019101614898565b6000602081208183555561328a565b60405162461bcd60e51b815260206004820152601d60248201527f50617469656e7420697320616c726561647920726567697374657265640000006044820152606490fd5b8135815260209182019101612eaa565b83356001600160401b038111610410576020916133348392602436918701016143ed565b815201930192612e37565b346104105760208060031936011261041057600435613362600e54821115614c6f565b60005260048152604060002090815461337a8161453e565b90613388604051928361428a565b8082528282018094600052836000206000915b83831061340f5760408051878152865181890181905289928201908960005b8281106133c75784840385f35b855180518552808301518584015260408082015190860152606080820151908601526080808201519086015260a090810151908501529481019460c0909301926001016133ba565b6006866001926040516134218161421e565b855481528486015483820152600286015460408201526003860154606082015260048601546080820152600586015460a082015281520192019201919061339b565b34610410576020806003193601126104105760043560018060a01b0361348e81601154163314614832565b61349c600d54831115614bc7565b816000526006835260ff600560406000200154166135c657600082815260068085526040909120600501805460ff818116151660ff199091161790557ffb071d6299bd71490cb62d5ce7358d7d43ab700c9b4a8bff1f869d2d52c0f11793909161359c9061354e60405161350f8161426f565b602581527f596f75206861766520617070726f76656420446f636f74722072656769737472858201526430ba34b7b760d91b60408201526105a4614ba5565b846000528383526002604060002001541660405161356b81614239565b601d81527f596f757220726567697374726174696f6e20697320617070726f76656400000084820152610627614ba5565b600083815291905260409081902060050154815192835260ff1615156020830152819081016107be565b60405162461bcd60e51b815260048101849052601a60248201527f446f63746f7220697320616c726561647920617070726f7665640000000000006044820152606490fd5b34610410576020806003193601126104105760043561362e600e54821115614c6f565b60105490600060015b8381111561374a575061364990614fd9565b9260009160015b8481111561366657604051806104ac88826144dc565b806000526009808452826001604060002001541461368e575b5061368990614889565b613650565b61368991946137439160ff604060002091604051926136ac84614202565b8054845260018101548985015260028101546040850152600381015460608501526136d9600482016142ab565b60808501526136ea600582016142ab565b60a08501526136fb600682016142ab565b60c085015261370c600782016142ab565b60e085015261371d600882016142ab565b6101008501520154161515610120820152613738828a614e29565b526111198189614e29565b939061367f565b80600052600985528260016040600020015414613770575b61376b90614889565b613637565b9061377d61376b91614889565b919050613762565b34610410576000366003190112610410576020601354604051908152f35b34610410576000366003190112610410576020600c54604051908152f35b34610410576020366003190112610410576001600160a01b036137e2614181565b16600052600a602052602060ff604060002054166040519015158152f35b34610410577f72c1daf6e13ce6ca90b14e03629096ad6d0db94b6cffdce97e62cf5008ab1fd4604061383136614391565b61384660018060a01b03601154163314614832565b613854600c54831115614b0d565b8160005260056020528060028460002001556117b983516138748161426f565b602381527f4d65646963696e652070726963652075706461746564207375636365737366756020820152626c6c7960e81b858201526105a46149bb565b34610410576106816138c236614391565b336000527f90d667bfa211b72f96ed398bbcfae5988d97e3a4c929a0f5d46888f6899d77a081602093600a855261390060ff60406000205416614c0b565b613909336150ab565b6000526006855261392460ff60056040600020015416614d18565b61392f600f54614889565b80600f55600461393e336150ab565b916040519261394c846141e7565b818452888401858152604085019087825260608601928352608086019342855260005260088b52604060002095518655516001860155516002850155516003840155519101556139ce600f546139a1336150ab565b6040519485944293869192608093969594919660a084019784526020840152604083015260608201520152565b0390a1613a236040516139e08161426f565b602981527f596f752068617665207375636365737366756c6c7920707265736372696265648482015268206d65646963696e6560b81b60408201526105a4614ba5565b6000526007815260018060a01b03613a7c8160036040600020015416604051613a4b81614239565b601e81527f446f63746f72207072657363726962656420796f75206d65646963696e65000085820152610627614ba5565b60115416907f446f63746f722070726573637269626564206d65646963696e6520737563636560405191613aaf8361426f565b6027835282015266737366756c6c7960c81b6040820152610627614ba5565b3461041057613adc3661440b565b9033600052602090600a8252613af960ff60406000205416614c0b565b613b07600e54821115614c6f565b806000526007825260026040600020018054600160401b811015610b1b57613b3491600182018155614cb4565b613c535761068193613b45916148f4565b613ba3604051613b548161426f565b603581527f596f752068617665207375636365737366756c6c79207570646174652c20706184820152747469656e74206d65646963616c20686973746f727960581b60408201526105a4614ba5565b60005260078152613c0a60018060a01b0360036040600020015416604051613bca8161426f565b602681527f596f7572206d65646963616c20686973746f727920757064617465642062792084820152653237b1ba37b960d11b6040820152610627614ba5565b7f50617469656e74206d6564696369616c20686973746f7279206973207570646160405191613c388361426f565b60238352820152621d195960ea1b60408201526105a4614ba5565b634e487b7160e01b600052600060045260246000fd5b34610410576020366003190112610410576004356000526008602052604060002080546104ac6001830154926002810154906004600382015491015491604051958695869192608093969594919660a084019784526020840152604083015260608201520152565b34610410577f1e689cd9ac52751e42953a5acd30b7eac0cc9804ec5c814b2cb6bff6e8ab852b6040613d0236614391565b613d1760018060a01b03601154163314614832565b613d25600c54831115614b0d565b8160005260056020528060038460002001556117b98351613d458161426f565b602681527f4d65646963696e65207175616e746974792075706461746564207375636365736020820152657366756c6c7960d01b858201526105a46149bb565b3461041057602080600319360112610410576001600160a01b039081613da9614181565b166000526003908181526040600020908154613dc48161453e565b93613dd2604051958661428a565b81855260009384528284208386019491855b848410613e8c575050505050604051928184019082855251809152604084019160408260051b86010193926000965b838810613e205786860387f35b90919293948380613e7b600193603f198b820301875289518051825286848201511684830152613e5e604082015160a0806040860152840190614351565b916060808301519082015260808092015191818403910152614351565b970193019701969093929193613e13565b60058660019260409a989a51613ea1816141e7565b865481528c858801541683820152613ebb600288016142ab565b6040820152858701546060820152613ed5600488016142ab565b6080820152815201930193019291969496613de4565b34610410576020366003190112610410576020613f0e613f09614181565b61515d565b6040519015158152f35b3461041057602036600319011261041057600435600052600960205260406000208054600182015491600281015490600381015460048201613f59906142ab565b613f65600584016142ab565b613f71600685016142ab565b91613f7e600786016142ab565b93613f8b600887016142ab565b956009015460ff1696604051998a998a5260208a0152604089015260608801526101408060808901528701613fbf91614351565b86810360a0880152613fd091614351565b85810360c0870152613fe191614351565b84810360e0860152613ff291614351565b83810361010085015261400491614351565b9015156101208301520390f35b3461041057602036600319011261041057602061403461402f614181565b6150ab565b604051908152f35b3461041057602036600319011261041057602061403461405a614181565b614f0d565b3461041057602036600319011261041057601154610681906001600160a01b031661408b338214614832565b60043560145560405161409d8161426f565b602d81527f596f752068617665207375636365737366756c6c79207570646174656420417060208201526c706f696e746d656e742066656560981b6040820152610627614d8d565b34610410576020366003190112610410576001600160a01b03600435818116908190036104105780610681926141216011549182163314614832565b6001600160a01b0319161760115560405161413b8161426f565b602b81527f596f752068617665207375636365737366756c6c79207570646174656420616460208201526a6d696e206164647265737360a81b6040820152610627614d8d565b600435906001600160a01b038216820361041057565b602435906001600160a01b038216820361041057565b90600182811c921680156141dd575b60208310146141c757565b634e487b7160e01b600052602260045260246000fd5b91607f16916141bc565b60a081019081106001600160401b03821117610b1b57604052565b61014081019081106001600160401b03821117610b1b57604052565b60c081019081106001600160401b03821117610b1b57604052565b604081019081106001600160401b03821117610b1b57604052565b60e081019081106001600160401b03821117610b1b57604052565b606081019081106001600160401b03821117610b1b57604052565b90601f801991011681019081106001600160401b03821117610b1b57604052565b90604051918260008254926142bf846141ad565b90818452600194858116908160001461432e57506001146142eb575b50506142e99250038361428a565b565b9093915060005260209081600020936000915b8183106143165750506142e9935082010138806142db565b855488840185015294850194879450918301916142fe565b9150506142e994506020925060ff191682840152151560051b82010138806142db565b919082519283825260005b84811061437d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161435c565b6040906003190112610410576004359060243590565b9291926001600160401b038211610b1b57604051916143d0601f8201601f19166020018461428a565b829481845281830111610410578281602093846000960137010152565b9080601f8301121561041057816020614408933591016143a7565b90565b9060406003198301126104105760043591602435906001600160401b03821161041057614408916004016143ed565b90815181526020820151602082015260408201516040820152606082015160608201526144cc6144b86144a66144946144826080870151610140806080890152870190614351565b60a087015186820360a0880152614351565b60c086015185820360c0870152614351565b60e085015184820360e0860152614351565b610100808501519084830390850152614351565b9161012080910151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106145105750505050505090565b909192939495848061452e600193603f198682030187528a5161443a565b9801930193019194939290614500565b6001600160401b038111610b1b5760051b60200190565b9181601f84011215610410578235916001600160401b038311610410576020838186019501011161041057565b90815180825260208080930193019160005b8281106145a2575050505090565b835185529381019392810192600101614594565b90815180825260208092019182818360051b85019501936000915b8483106145e15750505050505090565b90919293949584806145fb83856001950387528a51614351565b98019301930191949392906145d1565b61440891815181526080614643614631602085015160a0602086015260a0850190614351565b604085015184820360408601526145b6565b9260018060a01b0360608201511660608401520151906080818403910152614582565b908151815260a080614687602085015160c0602086015260c0850190614351565b93600180831b03604082015116604085015260608101516060850152608081015160808501520151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106146eb5750505050505090565b9091929394958480614709600193603f198682030187528a51614666565b98019301930191949392906146db565b6020908160408183019282815285518094520193019160005b828110614740575050505090565b909192938260a08261477d600194895160808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b01950193929101614732565b916147a7906040929594958452606060208501526060840190614351565b6001600160a01b03909416910152565b908151815260c08061480b6147db602086015160e0602087015260e0860190614351565b60408601516040860152606086015160608601526080860151608086015260a086015185820360a0870152614351565b930151151591015290565b8054821015610b05576000526006602060002091020190600090565b1561483957565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201526137b760f11b6064820152608490fd5b6000198114611c7d5760010190565b8181106148a3575050565b60008155600101614898565b9190601f81116148be57505050565b6142e9926000526020600020906020601f840160051c830193106148ea575b601f0160051c0190614898565b90915081906148dd565b91909182516001600160401b038111610b1b5761491b8161491584546141ad565b846148af565b602080601f831160011461495757508192939460009261494c575b50508160011b916000199060031b1c1916179055565b015190503880614936565b90601f198316958460005282600020926000905b8882106149a35750508360019596971061498a575b505050811b019055565b015160001960f88460031b161c19169055388080614980565b8060018596829496860151815501950193019061496b565b604051906149c882614239565b60088252674d65646963696e6560c01b6020830152565b6001600160a01b039081166000818152600360205260408082205481519396919491929190614a0d856141e7565b84526020840187815285850191878352606086019342855260808701958652898152600360205287812090815491600160401b831015614af95760018301808255831015614ae557937f9c26059514ab57d9b1c23a991546f58e9339e76427bf2909f3eb15feb61cd5719a99989693614ab9936005602085614ac79c9960049b97522091020197518855600188019151166001600160601b0360a01b82541617905551600286016148f4565b5160038401555191016148f4565b614ada8151928284938452830190614351565b4260208301520390a2565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b15614b1457565b60405162461bcd60e51b815260206004820152601760248201527f4d65646963696e6520646f6573206e6f742065786973740000000000000000006044820152606490fd5b15614b6057565b60405162461bcd60e51b815260206004820152601a60248201527f496e636f727265637420726567697374726174696f6e206665650000000000006044820152606490fd5b60405190614bb282614239565b60068252652237b1ba37b960d11b6020830152565b15614bce57565b60405162461bcd60e51b8152602060048201526015602482015274111bd8dd1bdc88191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b15614c1257565b60405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79207265676973746572656420646f63746f72732063616e207065726660448201526e37b936903a3434b99030b1ba34b7b760891b6064820152608490fd5b15614c7657565b60405162461bcd60e51b815260206004820152601660248201527514185d1a595b9d08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b8054821015610b055760005260206000200190600090565b15614cd357565b60405162461bcd60e51b815260206004820152601a60248201527f4170706f696e746d656e7420646f6573206e6f742065786973740000000000006044820152606490fd5b15614d1f57565b60405162461bcd60e51b8152602060048201526016602482015275111bd8dd1bdc881a5cc81b9bdd08185c1c1c9bdd995960521b6044820152606490fd5b60405190614d6a82614239565b600782526614185d1a595b9d60ca1b6020830152565b91908203918211611c7d57565b60405190614d9a82614239565b600582526420b236b4b760d91b6020830152565b60405190614dbb826141e7565b60006080838281528260208201528260408201528260608201520152565b90614de38261453e565b614df0604051918261428a565b8281528092614e01601f199161453e565b019060005b828110614e1257505050565b602090614e1d614dae565b82828501015201614e06565b8051821015610b055760209160051b010190565b60405190614e4a826141e7565b6060608083600081528260208201528260408201526000838201520152565b908154614e758161453e565b92614e83604051948561428a565b818452600090815260208082208186015b848410614ea2575050505050565b6001838192614eb0856142ab565b815201920193019290614e94565b9060405191828154918282526020928383019160005283600020936000905b828210614ef3575050506142e99250038361428a565b855484526001958601958895509381019390910190614edd565b600e5490600060015b83811115614f575760405162461bcd60e51b815260206004820152601160248201527014185d1a595b9d081b9bdd08199bdd5b99607a1b6044820152606490fd5b808252600760205260408220600301546001600160a01b03848116911614614f8757614f8290614889565b614f16565b9250505090565b60405190614f9b82614202565b600061012083828152826020820152826040820152606083818301528060808301528060a08301528060c08301528060e08301526101008201520152565b90614fe38261453e565b614ff0604051918261428a565b8281528092615001601f199161453e565b019060005b82811061501257505050565b60209061501d614f8e565b82828501015201615006565b604051906150368261421e565b600060a083828152606060208201528260408201528260608201528260808201520152565b906150658261453e565b615072604051918261428a565b8281528092615083601f199161453e565b019060005b82811061509457505050565b60209061509f615029565b82828501015201615088565b600d5490600060015b838111156150f45760405162461bcd60e51b815260206004820152601060248201526f111bd8dd1bdc881b9bdd08199bdd5b9960821b6044820152606490fd5b808252600660205260408220600201546001600160a01b03848116911614614f875761511f90614889565b6150b4565b6040519061513182614254565b600060c08382815260606020820152826040820152826060820152826080820152606060a08201520152565b6001600160a01b031660009081526001602052604090205461517e906141ad565b151590565b8054821015610b055760005260206000209060011b0190600090565b92906151aa8361515d565b6153e75780156153a25760018060a01b0380931693600091858352600191602091838352604085206001600160401b039687831161538e576151f08361491584546141ad565b869183601f81116001146153265761522d93899161531b575b50600019600386901b1c191684881b1790555b8987528585528560408820016148f4565b6040519560408701908782109082111761530757604052615250913691906143a7565b84528301948552815491600160401b8310156152f3578183018082558310156152df57916152c891837f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5649594521b9151827f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563016148f4565b019151166001600160601b0360a01b825416179055565b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b81526041600452602490fd5b634e487b7160e01b86526041600452602486fd5b905085013538615209565b50808852858820889385601f1981165b898b82891061537457505061522d96501061535a575b50508684811b01905561521c565b860135600019600387901b60f8161c19169055388061534c565b848b01358655978101979094019390920191879150615336565b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601860248201527f557365726e616d652063616e6e6f7420626520656d70747900000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b6044820152606490fd5b1561542957565b60405162461bcd60e51b8152602060048201526016602482015275155cd95c881a5cc81b9bdd081c9959da5cdd195c995960521b6044820152606490fd5b9081546154738161453e565b926040936154838551918261428a565b828152809460208092019260005281600020906000935b8585106154a957505050505050565b60028460019284516154ba81614239565b848060a01b0387541681526154d08588016142ab565b8382015281520193019401939161549a565b156154e957565b60405162461bcd60e51b815260206004820152601760248201527f43726561746520616e206163636f756e742066697273740000000000000000006044820152606490fd5b91929061553d61097c8361515d565b6155468361515d565b15615609576001600160a01b038281169190841682146155b55761556a848461564e565b15615577575b5050505050565b615589615590916155ab9636916143a7565b84846156f2565b60005260016020526155a560406000206142ab565b916156f2565b3880808080615570565b60405162461bcd60e51b815260206004820152602660248201527f55736572732063616e6e6f7420616464207468656d73656c76657320617320666044820152657269656e647360d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f55736572206973206e6f742072656769737465726564210000000000000000006044820152606490fd5b60018060a01b03906000928282168452600192839260209084825260029160409183838a2001548587168a5284848b200154106156ec575b88975b61569a575b50505050505050905090565b84811688528682528383892001548910156156e757846156be8a86868c2001615183565b505416858716146156db576156d4879899614889565b9897615689565b50505050505091505090565b61568e565b94615686565b919060405161570081614239565b6001600160a01b03918216815260208082019384529382166000908152600190945260408420600201805490600160401b821015615307579061574891600182018155615183565b94909461576f57505183546001600160a01b0319169116178255516142e9916001016148f4565b634e487b7160e01b81526004819052602490fd5b6040519061579082614239565b60078252664d65737361676560c81b6020830152565b906001600160a01b038082169083161015615804576157fe6157f091604051928391602083019586906028926001600160601b0319809260601b16835260601b1660148201520190565b03601f19810183528261428a565b51902090565b6040516bffffffffffffffffffffffff19606092831b8116602083019081529390921b90911660348201526157fe81604881016157f056fea26469706673582212204c0daf9756f0671fc6c78064deac0cabe4a4bb14cbb3a9bb1006497a8bcd914164736f6c63430008110033","deployedBytecode":"0x6080604052600436101561001257600080fd5b60003560e01c806302cce770146140e5578063046a07ed1461405f57806304c0adb71461403c578063082ed5471461401157806312dc901314613f185780631b82207e14613eeb5780632a42e74c14613d855780632c486bd514613cd157806331dfc91b14613c69578063354b365f14613ace57806337a92da7146138b157806339d519a9146138005780633f308cd2146137c15780634dafd490146137a3578063540a661414613785578063559160b81461360b5780635597958e1461346357806356baa64e1461333f5780635970cea414612db4578063636d362714612d635780636efb1b8414612cda57806372de440114612b6757806374cdd53414612aee578063770d954d14612a8757806378522bc414612a695780637c0b501a1461295a578063828b10da1461283a5780638366304b1461248d578063842f8dd01461234357806384e7aa2e146121c85780638c9e245d1461213257806393119a83146120e65780639cdaaad8146120a75780639fea8c2614611f42578063a0303c4114611f24578063a48f87d014611eb2578063a72c162314611dc5578063b039ece914611c93578063b27b24f814611b7b578063b3e0c71014611ac8578063b655849814611aaa578063b884db75146117c6578063bbece2bb14611705578063c0a5999a1461160f578063c85e766d14611572578063d0da23061461144a578063d174ea41146113bb578063dabf826a1461139d578063dd1bf902146111e9578063e40b850e146111cb578063e92f0a681461112b578063ea51cd6c14611022578063ebd557d914610b85578063ed74e8481461092c578063eebc3fb21461090e578063f27e44cc14610873578063f28136a9146107ec578063f851a440146107c3578063fb5333b7146106e5578063fd9510d5146104b0578063fe60efa1146104155763ff09a64e146102c657600080fd5b34610410576020366003190112610410576102df614181565b6060604080516102ee8161426f565b828152826020820152015261030a6103058261515d565b615422565b60018060a01b03166000526001806020526040600020906040519061032e8261426f565b610337836142ab565b825261039261035a600261034c8487016142ab565b956020860196875201615467565b936040840194855261037f604051946020865251606060208701526080860190614351565b9051848203601f19016040860152614351565b925192601f19838203016060840152835180825260208201916020808360051b8301019601926000915b8383106103c95786880387f35b90919293946020806103ff839a601f198682030187526040838b5160018060a01b03815116845201519181858201520190614351565b9997019594919091019201906103bc565b600080fd5b346104105760203660031901126104105761042e615029565b5060043560005260066020526104ac604060002060ff6005604051926104538461421e565b80548452610463600182016142ab565b602085015260018060a01b0360028201541660408501526003810154606085015260048101546080850152015416151560a0820152604051918291602083526020830190614666565b0390f35b3461041057602080600319360112610410576004359033600052600a81526104df60ff60406000205416614c0b565b6104ed601054831115614ccc565b8160005260098152600260406000200154610507336150ab565b0361068357816106819260005260098252600960406000200160ff198154169055610531336150ab565b60005260068252600460406000200161054a8154614889565b90556105ab60405161055b8161426f565b602f81527f596f752068617665207375636365737366756c6c7920636f6d706c6574656420848201526e1d1a1948185c1c1bda5b9d1b595b9d608a1b60408201526105a4614ba5565b90336149df565b600052600981526001604060002001546000526007815260018060a01b0361062d81600360406000200154166040516105e38161426f565b602a81527f596f7572204170706f696e746d656e74206973207375636365737366756c6c7985820152690818dbdb5c1b195d195960b21b6040820152610627614ba5565b916149df565b60115416907f446f63746f7220636f6d706c65746564206170706f696e746d656e7420737563604051916106608361426f565b60298352820152686365737366756c6c7960b81b6040820152610627614ba5565b005b6084906040519062461bcd60e51b82526004820152603560248201527f4f6e6c79207468652061737369676e656420646f63746f722063616e20636f6d6044820152741c1b195d19481d1a1948185c1c1bda5b9d1b595b9d605a1b6064820152fd5b34610410577f573cca7a8cd583da809cdb83b4ea8dec06c87da579a25478cc69566672e2b5896107143661440b565b9061072a60018060a01b03601154163314614832565b610738600c54821115614b0d565b8060005260056020526107528260056040600020016148f4565b6107a26040516107618161426f565b602681527f4d65646963696e65206c6f636174696f6e2075706461746564207375636365736020820152657366756c6c7960d01b60408201526105a46149bb565b6107be6040519283928352604060208401526040830190614351565b0390a1005b34610410576000366003190112610410576011546040516001600160a01b039091168152602090f35b3461041057602036600319011261041057601154610681906001600160a01b0316610818338214614832565b60043560125560405161082a8161426f565b602e81527f596f752068617665207375636365737366756c6c79207570646174656420526560208201526d67697374726174696f6e2066656560901b6040820152610627614d8d565b346104105760203660031901126104105761088c614dae565b50600435600052600860205260a060406000206004604051916108ae836141e7565b805483526001810154602084015260028101546040840152600381015460608401520154608082015261090c604051809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565bf35b34610410576000366003190112610410576020601054604051908152f35b3461041057606036600319011261041057610945614181565b61094d614197565b906044356001600160401b0381116104105761096d903690600401614555565b92909161098161097c8361515d565b6154e2565b61098d6103058261515d565b610997818361564e565b15610b31576109a681836157a6565b90604051946109b48661426f565b60018060a01b039384811687526109d56020968789019342855236916143a7565b9360408801948552600052600286526040600020805497600160401b891015610b1b5760018901808355891015610b05576002610ac396610a8f95896106819c610a479660005260038d6000209102019451166001600160601b0360a01b8554161784555160018401555191016148f4565b604051610a538161426f565b602281527f596f752068617665207375636365737366756c6c792073656e64206d657373618782015261676560f01b6040820152610627615783565b604051610a9b81614239565b6014815273596f752068617665206e6577206d65737361676560601b85820152610627615783565b60115416907f6d6573736167652073656e64207375636365737366756c6c790000000000000060405191610af683614239565b60198352820152610627615783565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602660248201527f596f7520617265206e6f7420667269656e64207769746820746865206769766560448201526537103ab9b2b960d11b6064820152608490fd5b610120366003190112610410576001600160401b0360443581811161041057610bb29036906004016143ed565b60643582811161041057610bca9036906004016143ed565b9060843583811161041057610be39036906004016143ed565b9060a43584811161041057610bfc9036906004016143ed565b9260c43585811161041057610c159036906004016143ed565b9460e4356001600160a01b0381169003610410576101043590811161041057610c42903690600401614555565b959094610c55600e546004351115614c6f565b610c65600d546024351115614bc7565b6024356000526006602052610c8460ff60056040600020015416614d18565b6004356000908152600760205260409020600301546001600160a01b03163303610fc9576014543403610f8457610cc0600a3490810490614d80565b94601054610ccd90614889565b938460105560405195610cdf87614202565b858752602087016004358152604088016024358152606089019142835260808a0193845260a08a0194855260c08a0195865260e08a019687526101008a019788526101208a019860018a526000526009602052604060002099518a555160018a0155516002890155516003880155516004870190610d5c916148f4565b51610d6a90600587016148f4565b51610d7890600686016148f4565b51610d8690600785016148f4565b51610d9490600884016148f4565b5115159060090190610db1919060ff801983541691151516179055565b602435600052600660205260406000206003018054610dcf90614889565b905560115460009081908190819081906001600160a01b0316600a340415610f7a575b600a340491f115610f65576000808080936024358252600660205260018060a01b03600260408420015416828215610f71575bf115610f6557610e3991339160e43561552e565b610e83604051610e4881614239565b601a81527f596f7520686176652061206e6577206170706f696e746d656e740000000000006020820152610e7a614d5d565b9060e4356149df565b610ed8604051610e928161426f565b602b81527f596f752068617665207375636365737366756c6c7920626f6f6b656420616e2060208201526a185c1c1bda5b9d1b595b9d60aa1b60408201526105a4614d5d565b601154604051610f20916001600160a01b031690610ef581614239565b601681527513995dc8185c1c1bda5b9d1b595b9d08189bdbdad95960521b6020820152610627614d5d565b7f3ac6f9df28ef09d1b346be1f7d771f61872f07de8da7b88f490fe4f61b2b3e2c608060105460405190815260043560208201526024356040820152426060820152a1005b6040513d6000823e3d90fd5b506108fc610e25565b6108fc9150610df2565b60405162461bcd60e51b815260206004820152601960248201527f496e636f7272656374206170706f696e746d656e7420666565000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f6e6c79207468652070617469656e742063616e20626f6f6b2074686569722060448201526a185c1c1bda5b9d1b595b9d60aa1b6064820152608490fd5b346104105760003660031901126104105760105461103f81614fd9565b9060018060005b8383111561105c57604051806104ac87826144dc565b61111f6111259184600052600960ff60209180835260406000206040519361108385614202565b81548552888201549085015260028101546040850152600381015460608501526110af600482016142ab565b60808501526110c0600582016142ab565b60a08501526110d1600682016142ab565b60c08501526110e2600782016142ab565b60e08501526110f3600882016142ab565b610100850152015416151561012082015261110e8289614e29565b526111198188614e29565b50614889565b92614889565b91611046565b3461041057602036600319011261041057611144615124565b5060043560005260056020526104ac604060002060ff60066040519261116984614254565b80548452611179600182016142ab565b60208501526002810154604085015260038101546060850152600481015460808501526111a8600582016142ab565b60a0850152015416151560c08201526040519182916020835260208301906147b7565b34610410576000366003190112610410576020601254604051908152f35b346104105760a0366003190112610410576001600160401b036004358181116104105761121a9036906004016143ed565b608435918211610410576112537f4bd6730197eeaa6a5861ee6770b4a7ea4945e177c1b8f8e196812da34b52b6209236906004016143ed565b61126860018060a01b03601154163314614832565b611313611276600c54614889565b80600c5560066040519161128983614254565b8083526112fd60208401878152604085016024358152606086016044358152608087019160643583526112e160a08901948b865260c08a0197600189526000526005602052604060002099518a555160018a016148f4565b51600288015551600387015551600486015551600585016148f4565b51151591019060ff801983541691151516179055565b61136c6040516113228161426f565b602f81527f4e6577204d65646963696e6520616464656420746f206d61726b6574706c616360208201526e65207375636365737366756c6c792160881b60408201526105a46149bb565b6107be600c549161138f6040519485948552606060208601526060850190614351565b908382036040850152614351565b34610410576000366003190112610410576020601454604051908152f35b3461041057602036600319011261041057601154610681906001600160a01b03166113e7338214614832565b6004356013556040516113f98161426f565b603681527f596f752068617665207375636365737366756c6c7920757064617465642050616020820152757469656e7420526567697374726174696f6e2066656560501b6040820152610627614d8d565b3461041057600036600319011261041057600d546001906000825b8281111561153557506114779061505b565b91600090805b8381111561149357604051806104ac87826146b7565b8060005260206006815260ff6005818160406000200154166114c1575b5050506114bc90614889565b61147d565b916114bc93959161152c936040600020604051936114de8561421e565b815485526114ed8983016142ab565b9085015260028101546001600160a01b031660408501526003810154606085015260048101546080850152015416151560a082015261110e8289614e29565b929086806114b0565b80600052600660205260ff6005604060002001541661155d575b61155890614889565b611465565b9061156a61155891614889565b91905061154f565b34610410576020366003190112610410576004356000526005602052604060002080546115a1600183016142ab565b916116036002820154600383015492600481015460ff60066115c5600585016142ab565b93015416946115e6604051988998895260e060208a015260e0890190614351565b9360408801526060870152608086015284820360a0860152614351565b90151560c08301520390f35b34610410576020366003190112610410577f954090adef24b59354b88966afb6b169cf1790275cc1c22d9d599cfa745041a560043561165960018060a01b03601154163314614832565b611667600c54821115614b0d565b6000818152600560205260409020600601805460ff818116151660ff199091161790556116d86040516116998161426f565b602481527f4d65646963696e65207374617475732075706461746564207375636365737366602082015263756c6c7960e01b60408201526105a46149bb565b60008181526005602090815260409182902060060154825193845260ff16151590830152819081016107be565b34610410577f611a96f8a84b78b34d3917accd31d6e94ffc712cdd95a8ce7b8e2f9c5e093ae9604061173636614391565b61174b60018060a01b03601154163314614832565b611759600c54831115614b0d565b8160005260056020528060048460002001556117b983516117798161426f565b602681527f4d65646963696e6520646973636f756e742075706461746564207375636365736020820152657366756c6c7960d01b858201526105a46149bb565b82519182526020820152a1005b6080366003190112610410576001600160401b03600435818111610410576117f29036906004016143ed565b6117fa614197565b60443583811161041057611812903690600401614555565b906064358581116104105761182b9036906004016143ed565b916118396012543414614b59565b60018060a01b03928385169283600052602093600a855260ff60406000205416611a655761190161186b600d54614889565b80600d5560056040519161187e8361421e565b808352888084018d8152604085018781526118c6606087019260008452600660808901956000875260a08a0197600089526000525260406000209751885551600188016148f4565b8c600287019151166001600160601b0360a01b82541617905551600385015551600484015551151591019060ff801983541691151516179055565b600052600a84526040600020600160ff198254161790556000808080886011541681903415611a5b575b3491f115610f655761193e92869161519f565b60405191608083019583871090871117610b1b576119ee611a48937f8c4e93915e8e9956f3984eef613c813c83672180f22083646e395379663dd76997604052604981527f596f752068617665207375636365737366756c6c7920636f6d706c6574656420848201527f74686520726567697374726174696f6e2c206e6f7720776174696e6720666f7260408201526808185c1c1c9bdd985b60ba1b60608201526119e7614ba5565b90866149df565b60115416907f4e657720646f63746f72206973207265676973746f722c206e6f77207761746960405191611a218361426f565b602f83528201526e1b99c8199bdc88185c1c1c9bdd985b608a1b6040820152610627614ba5565b6107be600d549160405193849384614789565b6108fc915061192b565b60405162461bcd60e51b815260048101869052601c60248201527f446f63746f7220697320616c72656164792072656769737465726564000000006044820152606490fd5b34610410576000366003190112610410576020600f54604051908152f35b3461041057602080600319360112610410576001600160a01b039081611aec614181565b166000526001808252611b056002604060002001615467565b926040519280840190808552855180925260408501928160408460051b8801019701936000915b848310611b395787890388f35b9091929394958480611b69839b603f198c82030187526040838c5188815116845201519181858201520190614351565b9a980196959491909101920190611b2c565b3461041057600036600319011261041057611b94615029565b50611b9d615029565b600090600180600d54915b82811115611bc657604051602080825281906104ac90820187614666565b8060005260066020818152600380604060002001546004604060002001548101809111611c7d57888111611c07575b50505050611c0290614889565b611ba8565b60ff92939850611c02949750906005919888600052845260406000209060405194611c318661421e565b82548652611c408884016142ab565b9086015260028201546001600160a01b03166040860152810154606085015260048101546080850152015416151560a08201529390868080611bf5565b634e487b7160e01b600052601160045260246000fd5b3461041057604036600319011261041057611cbc611caf614181565b611cb7614197565b6157a6565b6000526002602081815260406000208054611cd68161453e565b93611ce4604051958661428a565b81855260009283528383208486019391845b848410611d7c57604080518881528951818a01819052600092600582901b83018101918a918c9085015b828710611d2d5785850386f35b909192938280611d6c600193603f198a820301865260408951868060a01b03815116835284810151858401520151906060908160408201520190614351565b9601920196019592919092611d20565b60038760019260409a999a51611d918161426f565b848060a01b0387541681528487015483820152611daf8688016142ab565b6040820152815201930193019291969596611cf6565b346104105760208060031936011261041057600435611de8600e54821115614c6f565b6000818152600783526040902060030154336001600160a01b0391821614908115611ea4575b5015611e405760005260078152611e2b6002604060002001614e69565b906104ac6040519282849384528301906145b6565b60405162461bcd60e51b815260048101839052603660248201527f4f6e6c79207468652070617469656e74206f722061646d696e2063616e207669604482015275657720746865206d65646963616c20686973746f727960501b6064820152608490fd5b905060115416331483611e0e565b3461041057611ec036614391565b906000526004602052604060002080548210156104105760c091611ee391614816565b5080549060018101549060028101546003820154906005600484015493015493604051958652602086015260408501526060840152608083015260a0820152f35b34610410576000366003190112610410576020600e54604051908152f35b3461041057600036600319011261041057600c54611f5f8161453e565b611f6c604051918261428a565b818152601f19611f7b8361453e565b0160005b818110612090575060019290508260005b82821115611ffb578385604051906020808301818452845180915260408401918060408360051b8701019601926000905b838210611fce5786880387f35b90919293948380611fea839a603f198b820301865289516147b7565b999701959493919091019101611fc1565b61208461208a91836000528660ff600660056120606020918083526040600020926120376040519761202c89614254565b8554895285016142ab565b9087015260028301546040870152600383015460608701526004830154608087015282016142ab565b60a0850152015416151560c08201526120798288614e29565b526111198187614e29565b91614889565b90611f90565b60209061209b615124565b82828601015201611f7f565b34610410576020366003190112610410576001600160a01b036120c8614181565b16600052600b602052602060ff604060002054166040519015158152f35b34610410576020366003190112610410576004356000526007602052604060002080546104ac612118600184016142ab565b92600360018060a01b039101541660405193849384614789565b3461041057600036600319011261041057600f5461214f81614dd9565b9060018060005b8383111561216c57604051806104ac8782614719565b61111f6121c291846000526020600881526004604060002060405192612191846141e7565b81548452878201549084015260028101546040840152600381015460608401520154608082015261110e8289614e29565b91612156565b3461041057602080600319360112610410576004356121e5614f8e565b506121f4601054821115614ccc565b806000526009825260016040600020015461220e33614f0d565b14801561232f575b156122cf576000526009815260406000209060ff60096040519361223985614202565b805485526001810154848601526002810154604086015260038101546060860152612266600482016142ab565b6080860152612277600582016142ab565b60a0860152612288600682016142ab565b60c0860152612299600782016142ab565b60e08601526122aa600882016142ab565b61010086015201541615156101208301526104ac60405192828493845283019061443a565b60405162461bcd60e51b815260048101839052603260248201527f4f6e6c79207468652070617469656e74206f722061646d696e2063616e207669604482015271195dc81d1a1948185c1c1bda5b9d1b595b9d60721b6064820152608490fd5b506011546001600160a01b03163314612216565b3461041057600036600319011261041057600e546123608161453e565b61236d604051918261428a565b818152601f1961237c8361453e565b0160005b818110612476575060019290508260005b828211156123fc578385604051906020808301818452845180915260408401918060408360051b8701019601926000905b8382106123cf5786880387f35b909192939483806123eb839a603f198b8203018652895161460b565b9997019594939190910191016123c2565b61208461247091836000526020600781526124616004604060002060405193612424856141e7565b815485526124338c83016142ab565b9085015261244360028201614e69565b604085015260038101546001600160a01b0316606085015201614ebe565b60808201526120798288614e29565b90612391565b602090612481614e3d565b82828601015201612380565b60603660031901126104105760043560248035906044356124b2600e54851115614c6f565b6124c0600c54841115614b0d565b836000526020916007835260018060a01b0391826003604060002001541633036127e6578460005260059081855260ff60066040600020015416156127a9578560005281855280600360406000200154106127655785600052818552600260406000200154908082029180830482149015171561275057866000528286526003604060002001612551828254614d80565b905587600052600786526004604060002001908154600160401b928382101561273b57816125859160018c94018155614cb4565b819291549060031b600019811b9283911b169119161790558860005260048752604060002092886000528488526002604060002001546040516125c78161421e565b8a8152898101918252604081019283526060810193845260808101948c865260a0820196428852805491821015612726579061260891600182018155614816565b989098612712577f1d62f96054391d98915909b52fc6b2182af4ce3748f5ddd6c0047dd725a969df60408e8e8e6127078f8f8f8f8f8f8f8f8f518755516001870155516002860155516003850155516004840155519101556126ac865161266e8161426f565b602581527f596f752068617665207375636365737366756c6c7920626f75676874206d656485820152646963696e6560d81b888201526105a4614d5d565b6011541685516126bb8161426f565b603381527f5472616e73616374696f6e20636f6d706c657465642c206d61646963696e65208482015272626f75676874207375636365737366756c6c7960681b87820152610627614d5d565b8351928352820152a1005b634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b86634e487b7160e01b60005260416004526000fd5b83634e487b7160e01b60005260116004526000fd5b60405162461bcd60e51b815260048101869052601c818501527f4e6f7420656e6f756768206d65646963696e6520696e2073746f636b000000006044820152606490fd5b60405162461bcd60e51b815260048101869052601681850152754d65646963696e65206973206e6f742061637469766560501b6044820152606490fd5b60405162461bcd60e51b8152600481018590526027818401527f4f6e6c79207468652070617469656e742063616e20627579207468656972206d60448201526665646963696e6560c81b6064820152608490fd5b34610410576000366003190112610410576000546128578161453e565b90612865604051928361428a565b8082526000808052602091828401917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563835b83831061291a5750505050604051918083019381845251809452604083019360408160051b85010192916000955b8287106128d25785850386f35b909192938280600192603f19898203018552875190826128fb8351604084526040840190614351565b9281878060a01b039101511691015296019201960195929190926128c5565b60028660019260409998995161292f81614239565b612938866142ab565b8152848060a01b03858701541683820152815201920192019190959495612897565b346104105760208060031936011261041057600f54600435916001906000825b84811115612a2e575061298c90614dd9565b93600091835b858111156129a857604051806104ac8982614719565b80600052600882526002838160406000200154146129d0575b506129cb90614889565b612992565b6129cb9194612a279160046040600020604051926129ed846141e7565b815484528a8201548885015281015460408401526003810154606084015201546080820152612a1c828b614e29565b52611119818a614e29565b93906129c1565b80600052600883528560026040600020015414612a54575b612a4f90614889565b61297a565b90612a61612a4f91614889565b919050612a46565b34610410576000366003190112610410576020600d54604051908152f35b3461041057600036600319011261041057600d54612aa48161505b565b9060018060005b83831115612ac157604051806104ac87826146b7565b61111f612ae8918460005260206006815260ff60056040600020604051936114de8561421e565b91612aab565b3461041057602036600319011261041057612b07614e3d565b5060043560005260076020526104ac6040600020612b4e600460405192612b2d846141e7565b80548452612b3d600182016142ab565b602085015261244360028201614e69565b608082015260405191829160208352602083019061460b565b346104105760208060031936011261041057600435612b8a600d54821115614bc7565b6000906001928392601054935b84811115612c9f5750612ba990614fd9565b93600091815b85811115612bc557604051806104ac89826144dc565b80600052600980835260029086826040600020015414612bf0575b5050612beb90614889565b612baf565b94612c979160ff612beb9497604060002060405193612c0e85614202565b815485528982015489860152810154604085015260038101546060850152612c38600482016142ab565b6080850152612c49600582016142ab565b60a0850152612c5a600682016142ab565b60c0850152612c6b600782016142ab565b60e0850152612c7c600882016142ab565b6101008501520154161515610120820152612a1c828b614e29565b939088612be0565b80600052600983528360026040600020015414612cc5575b612cc090614889565b612b97565b90612cd2612cc091614889565b919050612cb7565b3461041057602036600319011261041057600435600052600660205260406000208054612d09600183016142ab565b9160018060a01b036002820154169060038101549060ff600560048301549201541691612d48604051968796875260c0602088015260c0870190614351565b93604086015260608501526080840152151560a08301520390f35b3461041057602036600319011261041057600435612d85600e54821115614c6f565b60005260076020526104ac612da06004604060002001614ebe565b604051918291602083526020830190614582565b610100366003190112610410576004356001600160401b03811161041057612de09036906004016143ed565b602435906001600160401b0382116104105736602383011215610410578160040135612e0b8161453e565b92612e19604051948561428a565b8184526024602085019260051b820101903682116104105760248101925b8284106133105785856044356001600160a01b038116900361041057606435916001600160401b038311610410573660238401121561041057826004013592612e7f8461453e565b93612e8d604051958661428a565b8085526024602086019160051b8301019136831161041057602401905b828210613300575050506084356001600160401b03811161041057612ed3903690600401614555565b60a4356001600160a01b03811690036104105760c4356001600160401b03811161041057612f05903690600401614555565b909160e4356001600160401b03811161041057612f269036906004016143ed565b96612f346013543414614b59565b6044356001600160a01b03166000908152600b602052604090205460ff166132bb57612f61600e54614889565b9081600e5560405190612f73826141e7565b8282526020820192898452604083019189835260018060a01b0360443516606085015260808401526000526007602052612fba6040600020938351855551600185016148f4565b51805190600160401b8211610b1b57600284015482600286015580831061323c575b506020016002840160005260206000206000915b83831061321f5750505060608201516003840180546001600160a01b0319166001600160a01b03929092169190911790555060800151805191906001600160401b038311610b1b57600160401b8311610b1b576020600491828401548584860155808610613200575b50019101600052602060002060005b8381106131ec57505050506044356001600160a01b039081166000908152600b60205260408120805460ff19166001179055601154909182918291829182911634156131e2575b3491f115610f65577fc66c47c46a9613cb876ef0205ca8c4597eb05703969f8458f4a762107e865dc2966130f6946130ea926044359161519f565b6044359160a43561552e565b6131556040516131058161426f565b602c81527f596f752068617665207375636365737366756c6c7920636f6d706c657465642060208201526b3932b3b4b9ba3930ba34b7b760a11b604082015261314c614d5d565b906044356149df565b6011546040516131b1916001600160a01b0316906131728161426f565b602481527f4e65772050617469656e74206973207265676973746f72207375636365737366602082015263756c6c7960e01b6040820152610627614d5d565b6107be600e54916131d46040519485948552606060208601526060850190614351565b9083820360408501526145b6565b6108fc91506130af565b600190602084519401938184015501613068565b6132199084860160005286846000209182019101614898565b8c613059565b6001602082613230839451866148f4565b01920192019190612ff0565b600285016000526020600020908382015b818301811061325d575050612fdc565b8061326a600192546141ad565b80613277575b500161324d565b601f908181118414613290575050600081555b8f613270565b836132ac92846000526020600020920160051c82019101614898565b6000602081208183555561328a565b60405162461bcd60e51b815260206004820152601d60248201527f50617469656e7420697320616c726561647920726567697374657265640000006044820152606490fd5b8135815260209182019101612eaa565b83356001600160401b038111610410576020916133348392602436918701016143ed565b815201930192612e37565b346104105760208060031936011261041057600435613362600e54821115614c6f565b60005260048152604060002090815461337a8161453e565b90613388604051928361428a565b8082528282018094600052836000206000915b83831061340f5760408051878152865181890181905289928201908960005b8281106133c75784840385f35b855180518552808301518584015260408082015190860152606080820151908601526080808201519086015260a090810151908501529481019460c0909301926001016133ba565b6006866001926040516134218161421e565b855481528486015483820152600286015460408201526003860154606082015260048601546080820152600586015460a082015281520192019201919061339b565b34610410576020806003193601126104105760043560018060a01b0361348e81601154163314614832565b61349c600d54831115614bc7565b816000526006835260ff600560406000200154166135c657600082815260068085526040909120600501805460ff818116151660ff199091161790557ffb071d6299bd71490cb62d5ce7358d7d43ab700c9b4a8bff1f869d2d52c0f11793909161359c9061354e60405161350f8161426f565b602581527f596f75206861766520617070726f76656420446f636f74722072656769737472858201526430ba34b7b760d91b60408201526105a4614ba5565b846000528383526002604060002001541660405161356b81614239565b601d81527f596f757220726567697374726174696f6e20697320617070726f76656400000084820152610627614ba5565b600083815291905260409081902060050154815192835260ff1615156020830152819081016107be565b60405162461bcd60e51b815260048101849052601a60248201527f446f63746f7220697320616c726561647920617070726f7665640000000000006044820152606490fd5b34610410576020806003193601126104105760043561362e600e54821115614c6f565b60105490600060015b8381111561374a575061364990614fd9565b9260009160015b8481111561366657604051806104ac88826144dc565b806000526009808452826001604060002001541461368e575b5061368990614889565b613650565b61368991946137439160ff604060002091604051926136ac84614202565b8054845260018101548985015260028101546040850152600381015460608501526136d9600482016142ab565b60808501526136ea600582016142ab565b60a08501526136fb600682016142ab565b60c085015261370c600782016142ab565b60e085015261371d600882016142ab565b6101008501520154161515610120820152613738828a614e29565b526111198189614e29565b939061367f565b80600052600985528260016040600020015414613770575b61376b90614889565b613637565b9061377d61376b91614889565b919050613762565b34610410576000366003190112610410576020601354604051908152f35b34610410576000366003190112610410576020600c54604051908152f35b34610410576020366003190112610410576001600160a01b036137e2614181565b16600052600a602052602060ff604060002054166040519015158152f35b34610410577f72c1daf6e13ce6ca90b14e03629096ad6d0db94b6cffdce97e62cf5008ab1fd4604061383136614391565b61384660018060a01b03601154163314614832565b613854600c54831115614b0d565b8160005260056020528060028460002001556117b983516138748161426f565b602381527f4d65646963696e652070726963652075706461746564207375636365737366756020820152626c6c7960e81b858201526105a46149bb565b34610410576106816138c236614391565b336000527f90d667bfa211b72f96ed398bbcfae5988d97e3a4c929a0f5d46888f6899d77a081602093600a855261390060ff60406000205416614c0b565b613909336150ab565b6000526006855261392460ff60056040600020015416614d18565b61392f600f54614889565b80600f55600461393e336150ab565b916040519261394c846141e7565b818452888401858152604085019087825260608601928352608086019342855260005260088b52604060002095518655516001860155516002850155516003840155519101556139ce600f546139a1336150ab565b6040519485944293869192608093969594919660a084019784526020840152604083015260608201520152565b0390a1613a236040516139e08161426f565b602981527f596f752068617665207375636365737366756c6c7920707265736372696265648482015268206d65646963696e6560b81b60408201526105a4614ba5565b6000526007815260018060a01b03613a7c8160036040600020015416604051613a4b81614239565b601e81527f446f63746f72207072657363726962656420796f75206d65646963696e65000085820152610627614ba5565b60115416907f446f63746f722070726573637269626564206d65646963696e6520737563636560405191613aaf8361426f565b6027835282015266737366756c6c7960c81b6040820152610627614ba5565b3461041057613adc3661440b565b9033600052602090600a8252613af960ff60406000205416614c0b565b613b07600e54821115614c6f565b806000526007825260026040600020018054600160401b811015610b1b57613b3491600182018155614cb4565b613c535761068193613b45916148f4565b613ba3604051613b548161426f565b603581527f596f752068617665207375636365737366756c6c79207570646174652c20706184820152747469656e74206d65646963616c20686973746f727960581b60408201526105a4614ba5565b60005260078152613c0a60018060a01b0360036040600020015416604051613bca8161426f565b602681527f596f7572206d65646963616c20686973746f727920757064617465642062792084820152653237b1ba37b960d11b6040820152610627614ba5565b7f50617469656e74206d6564696369616c20686973746f7279206973207570646160405191613c388361426f565b60238352820152621d195960ea1b60408201526105a4614ba5565b634e487b7160e01b600052600060045260246000fd5b34610410576020366003190112610410576004356000526008602052604060002080546104ac6001830154926002810154906004600382015491015491604051958695869192608093969594919660a084019784526020840152604083015260608201520152565b34610410577f1e689cd9ac52751e42953a5acd30b7eac0cc9804ec5c814b2cb6bff6e8ab852b6040613d0236614391565b613d1760018060a01b03601154163314614832565b613d25600c54831115614b0d565b8160005260056020528060038460002001556117b98351613d458161426f565b602681527f4d65646963696e65207175616e746974792075706461746564207375636365736020820152657366756c6c7960d01b858201526105a46149bb565b3461041057602080600319360112610410576001600160a01b039081613da9614181565b166000526003908181526040600020908154613dc48161453e565b93613dd2604051958661428a565b81855260009384528284208386019491855b848410613e8c575050505050604051928184019082855251809152604084019160408260051b86010193926000965b838810613e205786860387f35b90919293948380613e7b600193603f198b820301875289518051825286848201511684830152613e5e604082015160a0806040860152840190614351565b916060808301519082015260808092015191818403910152614351565b970193019701969093929193613e13565b60058660019260409a989a51613ea1816141e7565b865481528c858801541683820152613ebb600288016142ab565b6040820152858701546060820152613ed5600488016142ab565b6080820152815201930193019291969496613de4565b34610410576020366003190112610410576020613f0e613f09614181565b61515d565b6040519015158152f35b3461041057602036600319011261041057600435600052600960205260406000208054600182015491600281015490600381015460048201613f59906142ab565b613f65600584016142ab565b613f71600685016142ab565b91613f7e600786016142ab565b93613f8b600887016142ab565b956009015460ff1696604051998a998a5260208a0152604089015260608801526101408060808901528701613fbf91614351565b86810360a0880152613fd091614351565b85810360c0870152613fe191614351565b84810360e0860152613ff291614351565b83810361010085015261400491614351565b9015156101208301520390f35b3461041057602036600319011261041057602061403461402f614181565b6150ab565b604051908152f35b3461041057602036600319011261041057602061403461405a614181565b614f0d565b3461041057602036600319011261041057601154610681906001600160a01b031661408b338214614832565b60043560145560405161409d8161426f565b602d81527f596f752068617665207375636365737366756c6c79207570646174656420417060208201526c706f696e746d656e742066656560981b6040820152610627614d8d565b34610410576020366003190112610410576001600160a01b03600435818116908190036104105780610681926141216011549182163314614832565b6001600160a01b0319161760115560405161413b8161426f565b602b81527f596f752068617665207375636365737366756c6c79207570646174656420616460208201526a6d696e206164647265737360a81b6040820152610627614d8d565b600435906001600160a01b038216820361041057565b602435906001600160a01b038216820361041057565b90600182811c921680156141dd575b60208310146141c757565b634e487b7160e01b600052602260045260246000fd5b91607f16916141bc565b60a081019081106001600160401b03821117610b1b57604052565b61014081019081106001600160401b03821117610b1b57604052565b60c081019081106001600160401b03821117610b1b57604052565b604081019081106001600160401b03821117610b1b57604052565b60e081019081106001600160401b03821117610b1b57604052565b606081019081106001600160401b03821117610b1b57604052565b90601f801991011681019081106001600160401b03821117610b1b57604052565b90604051918260008254926142bf846141ad565b90818452600194858116908160001461432e57506001146142eb575b50506142e99250038361428a565b565b9093915060005260209081600020936000915b8183106143165750506142e9935082010138806142db565b855488840185015294850194879450918301916142fe565b9150506142e994506020925060ff191682840152151560051b82010138806142db565b919082519283825260005b84811061437d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161435c565b6040906003190112610410576004359060243590565b9291926001600160401b038211610b1b57604051916143d0601f8201601f19166020018461428a565b829481845281830111610410578281602093846000960137010152565b9080601f8301121561041057816020614408933591016143a7565b90565b9060406003198301126104105760043591602435906001600160401b03821161041057614408916004016143ed565b90815181526020820151602082015260408201516040820152606082015160608201526144cc6144b86144a66144946144826080870151610140806080890152870190614351565b60a087015186820360a0880152614351565b60c086015185820360c0870152614351565b60e085015184820360e0860152614351565b610100808501519084830390850152614351565b9161012080910151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106145105750505050505090565b909192939495848061452e600193603f198682030187528a5161443a565b9801930193019194939290614500565b6001600160401b038111610b1b5760051b60200190565b9181601f84011215610410578235916001600160401b038311610410576020838186019501011161041057565b90815180825260208080930193019160005b8281106145a2575050505090565b835185529381019392810192600101614594565b90815180825260208092019182818360051b85019501936000915b8483106145e15750505050505090565b90919293949584806145fb83856001950387528a51614351565b98019301930191949392906145d1565b61440891815181526080614643614631602085015160a0602086015260a0850190614351565b604085015184820360408601526145b6565b9260018060a01b0360608201511660608401520151906080818403910152614582565b908151815260a080614687602085015160c0602086015260c0850190614351565b93600180831b03604082015116604085015260608101516060850152608081015160808501520151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106146eb5750505050505090565b9091929394958480614709600193603f198682030187528a51614666565b98019301930191949392906146db565b6020908160408183019282815285518094520193019160005b828110614740575050505090565b909192938260a08261477d600194895160808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b01950193929101614732565b916147a7906040929594958452606060208501526060840190614351565b6001600160a01b03909416910152565b908151815260c08061480b6147db602086015160e0602087015260e0860190614351565b60408601516040860152606086015160608601526080860151608086015260a086015185820360a0870152614351565b930151151591015290565b8054821015610b05576000526006602060002091020190600090565b1561483957565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201526137b760f11b6064820152608490fd5b6000198114611c7d5760010190565b8181106148a3575050565b60008155600101614898565b9190601f81116148be57505050565b6142e9926000526020600020906020601f840160051c830193106148ea575b601f0160051c0190614898565b90915081906148dd565b91909182516001600160401b038111610b1b5761491b8161491584546141ad565b846148af565b602080601f831160011461495757508192939460009261494c575b50508160011b916000199060031b1c1916179055565b015190503880614936565b90601f198316958460005282600020926000905b8882106149a35750508360019596971061498a575b505050811b019055565b015160001960f88460031b161c19169055388080614980565b8060018596829496860151815501950193019061496b565b604051906149c882614239565b60088252674d65646963696e6560c01b6020830152565b6001600160a01b039081166000818152600360205260408082205481519396919491929190614a0d856141e7565b84526020840187815285850191878352606086019342855260808701958652898152600360205287812090815491600160401b831015614af95760018301808255831015614ae557937f9c26059514ab57d9b1c23a991546f58e9339e76427bf2909f3eb15feb61cd5719a99989693614ab9936005602085614ac79c9960049b97522091020197518855600188019151166001600160601b0360a01b82541617905551600286016148f4565b5160038401555191016148f4565b614ada8151928284938452830190614351565b4260208301520390a2565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b15614b1457565b60405162461bcd60e51b815260206004820152601760248201527f4d65646963696e6520646f6573206e6f742065786973740000000000000000006044820152606490fd5b15614b6057565b60405162461bcd60e51b815260206004820152601a60248201527f496e636f727265637420726567697374726174696f6e206665650000000000006044820152606490fd5b60405190614bb282614239565b60068252652237b1ba37b960d11b6020830152565b15614bce57565b60405162461bcd60e51b8152602060048201526015602482015274111bd8dd1bdc88191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b15614c1257565b60405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79207265676973746572656420646f63746f72732063616e207065726660448201526e37b936903a3434b99030b1ba34b7b760891b6064820152608490fd5b15614c7657565b60405162461bcd60e51b815260206004820152601660248201527514185d1a595b9d08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b8054821015610b055760005260206000200190600090565b15614cd357565b60405162461bcd60e51b815260206004820152601a60248201527f4170706f696e746d656e7420646f6573206e6f742065786973740000000000006044820152606490fd5b15614d1f57565b60405162461bcd60e51b8152602060048201526016602482015275111bd8dd1bdc881a5cc81b9bdd08185c1c1c9bdd995960521b6044820152606490fd5b60405190614d6a82614239565b600782526614185d1a595b9d60ca1b6020830152565b91908203918211611c7d57565b60405190614d9a82614239565b600582526420b236b4b760d91b6020830152565b60405190614dbb826141e7565b60006080838281528260208201528260408201528260608201520152565b90614de38261453e565b614df0604051918261428a565b8281528092614e01601f199161453e565b019060005b828110614e1257505050565b602090614e1d614dae565b82828501015201614e06565b8051821015610b055760209160051b010190565b60405190614e4a826141e7565b6060608083600081528260208201528260408201526000838201520152565b908154614e758161453e565b92614e83604051948561428a565b818452600090815260208082208186015b848410614ea2575050505050565b6001838192614eb0856142ab565b815201920193019290614e94565b9060405191828154918282526020928383019160005283600020936000905b828210614ef3575050506142e99250038361428a565b855484526001958601958895509381019390910190614edd565b600e5490600060015b83811115614f575760405162461bcd60e51b815260206004820152601160248201527014185d1a595b9d081b9bdd08199bdd5b99607a1b6044820152606490fd5b808252600760205260408220600301546001600160a01b03848116911614614f8757614f8290614889565b614f16565b9250505090565b60405190614f9b82614202565b600061012083828152826020820152826040820152606083818301528060808301528060a08301528060c08301528060e08301526101008201520152565b90614fe38261453e565b614ff0604051918261428a565b8281528092615001601f199161453e565b019060005b82811061501257505050565b60209061501d614f8e565b82828501015201615006565b604051906150368261421e565b600060a083828152606060208201528260408201528260608201528260808201520152565b906150658261453e565b615072604051918261428a565b8281528092615083601f199161453e565b019060005b82811061509457505050565b60209061509f615029565b82828501015201615088565b600d5490600060015b838111156150f45760405162461bcd60e51b815260206004820152601060248201526f111bd8dd1bdc881b9bdd08199bdd5b9960821b6044820152606490fd5b808252600660205260408220600201546001600160a01b03848116911614614f875761511f90614889565b6150b4565b6040519061513182614254565b600060c08382815260606020820152826040820152826060820152826080820152606060a08201520152565b6001600160a01b031660009081526001602052604090205461517e906141ad565b151590565b8054821015610b055760005260206000209060011b0190600090565b92906151aa8361515d565b6153e75780156153a25760018060a01b0380931693600091858352600191602091838352604085206001600160401b039687831161538e576151f08361491584546141ad565b869183601f81116001146153265761522d93899161531b575b50600019600386901b1c191684881b1790555b8987528585528560408820016148f4565b6040519560408701908782109082111761530757604052615250913691906143a7565b84528301948552815491600160401b8310156152f3578183018082558310156152df57916152c891837f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5649594521b9151827f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563016148f4565b019151166001600160601b0360a01b825416179055565b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b81526041600452602490fd5b634e487b7160e01b86526041600452602486fd5b905085013538615209565b50808852858820889385601f1981165b898b82891061537457505061522d96501061535a575b50508684811b01905561521c565b860135600019600387901b60f8161c19169055388061534c565b848b01358655978101979094019390920191879150615336565b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601860248201527f557365726e616d652063616e6e6f7420626520656d70747900000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b6044820152606490fd5b1561542957565b60405162461bcd60e51b8152602060048201526016602482015275155cd95c881a5cc81b9bdd081c9959da5cdd195c995960521b6044820152606490fd5b9081546154738161453e565b926040936154838551918261428a565b828152809460208092019260005281600020906000935b8585106154a957505050505050565b60028460019284516154ba81614239565b848060a01b0387541681526154d08588016142ab565b8382015281520193019401939161549a565b156154e957565b60405162461bcd60e51b815260206004820152601760248201527f43726561746520616e206163636f756e742066697273740000000000000000006044820152606490fd5b91929061553d61097c8361515d565b6155468361515d565b15615609576001600160a01b038281169190841682146155b55761556a848461564e565b15615577575b5050505050565b615589615590916155ab9636916143a7565b84846156f2565b60005260016020526155a560406000206142ab565b916156f2565b3880808080615570565b60405162461bcd60e51b815260206004820152602660248201527f55736572732063616e6e6f7420616464207468656d73656c76657320617320666044820152657269656e647360d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f55736572206973206e6f742072656769737465726564210000000000000000006044820152606490fd5b60018060a01b03906000928282168452600192839260209084825260029160409183838a2001548587168a5284848b200154106156ec575b88975b61569a575b50505050505050905090565b84811688528682528383892001548910156156e757846156be8a86868c2001615183565b505416858716146156db576156d4879899614889565b9897615689565b50505050505091505090565b61568e565b94615686565b919060405161570081614239565b6001600160a01b03918216815260208082019384529382166000908152600190945260408420600201805490600160401b821015615307579061574891600182018155615183565b94909461576f57505183546001600160a01b0319169116178255516142e9916001016148f4565b634e487b7160e01b81526004819052602490fd5b6040519061579082614239565b60078252664d65737361676560c81b6020830152565b906001600160a01b038082169083161015615804576157fe6157f091604051928391602083019586906028926001600160601b0319809260601b16835260601b1660148201520190565b03601f19810183528261428a565b51902090565b6040516bffffffffffffffffffffffff19606092831b8116602083019081529390921b90911660348201526157fe81604881016157f056fea26469706673582212204c0daf9756f0671fc6c78064deac0cabe4a4bb14cbb3a9bb1006497a8bcd914164736f6c63430008110033","linkReferences":{},"deployedLinkReferences":{}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=.%2Fnode_modules%5Cnext%5Cdist%5Cpages%5C_error.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!"));
module.exports = __webpack_exports__;

})();